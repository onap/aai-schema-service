{
  "comments": [
    {
      "key": {
        "uuid": "9adffdf1_e254c655",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:05:03Z",
      "side": 1,
      "message": "how often can the AAIConfig values change?\nwhy do all the string manipulation and Boolean parsing for every logging call?",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 66,
        "endChar": 70
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_e2db66eb",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:13:55Z",
      "side": 1,
      "message": "Whenever a file changes the aaiconfig gets refreshed with the new values so the idea is we can change it at runtime without a restart. Thats why this was done that way.",
      "parentUuid": "9adffdf1_e254c655",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 66,
        "endChar": 70
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_c2e0a298",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:26:59Z",
      "side": 1,
      "message": "Would it be better for AAIConfig to internally cache the Boolean values of these params and then update them if/when a reload is necessary? Might save having to redo the parseBoolean calls many times over.",
      "parentUuid": "9adffdf1_e2db66eb",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 66,
        "endChar": 70
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_0269ca24",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:05:03Z",
      "side": 1,
      "message": "all of these strings are evaluated even if there is eventually no logging done",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 74,
        "endChar": 99
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_e202863d",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:20:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_0269ca24",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 74,
        "endChar": 99
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_c272e210",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:05:03Z",
      "side": 1,
      "message": "all of these strings are also evaluated even if there is eventually no logging done",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 66
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_42ecb28f",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:20:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_c272e210",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 81,
        "endChar": 66
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_62ef7688",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:26:59Z",
      "side": 1,
      "message": "inconsistent methods used to match HTTP verbs. is it case-sensitive or not?",
      "range": {
        "startLine": 84,
        "startChar": 54,
        "endLine": 84,
        "endChar": 66
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_425ef277",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:05:03Z",
      "side": 1,
      "message": "it seems weird that some logging can be selectively turned off by some HTTP verbs but not others. Also seems weird to put in empty bodies and Boolean negations, rather than the other way around.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 16
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_22d2ced2",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:13:55Z",
      "side": 1,
      "message": "For the first part, we don\u0027t want to log GET requests as those can be very expensive to log depending on certain scenarios and if there is for some reason, we can enable it and that was the point of that. For the POST, I wasn\u0027t sure why it wasn\u0027t enabled by default. For the second part, I think it only makes sense to log GETs when explicitly enabled and everything else such as PUT/PATCH/DELETE/POST should be logged properly.",
      "parentUuid": "9adffdf1_425ef277",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 16
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_22e96e80",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/post/ResponseTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:20:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9adffdf1_425ef277",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 16
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_02f46a85",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/pre/RequestModification.java",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T06:55:56Z",
      "side": 1,
      "message": "what is the purpose of blacklisting these query parameters?",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 52,
        "endChar": 69
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_22840ed3",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/pre/RequestModification.java",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:06:36Z",
      "side": 1,
      "message": "This is mainly for the micro services where it registers itself to DME2. This micro service wouldn\u0027t so I will remove it.",
      "parentUuid": "9adffdf1_02f46a85",
      "range": {
        "startLine": 52,
        "startChar": 8,
        "endLine": 52,
        "endChar": 69
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_a2f23e98",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/pre/RequestTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T06:55:56Z",
      "side": 1,
      "message": "why continue to have hbase-related workaround code?",
      "range": {
        "startLine": 30,
        "startChar": 25,
        "endLine": 30,
        "endChar": 42
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_a249ded1",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/pre/RequestTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T06:55:56Z",
      "side": 1,
      "message": "if there\u0027s a problem with the way that UUID is generated, why isn\u0027t this wrapped in a aai/utils function for generating better UUID?",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 96,
        "endChar": 8
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_8264da49",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/pre/RequestTransactionLogging.java",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 75
      },
      "writtenOn": "2018-11-26T07:06:36Z",
      "side": 1,
      "message": "I don\u0027t think this makes sense anymore. So let me remove this.",
      "parentUuid": "9adffdf1_a249ded1",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 96,
        "endChar": 8
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_82cb7a1d",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/interceptors/pre/TwoWaySslAuthorization.java",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:26:59Z",
      "side": 1,
      "message": "inconsistent methods used to match HTTP verbs, is it case-sensitive or not?",
      "range": {
        "startLine": 110,
        "startChar": 78,
        "endLine": 110,
        "endChar": 102
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9adffdf1_a2fc7e3f",
        "filename": "aai-schema-service/src/main/java/org/onap/aai/schemaservice/web/JerseyConfiguration.java",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 4341
      },
      "writtenOn": "2018-11-26T07:26:59Z",
      "side": 1,
      "message": "inconsistent method for enabling logging. the other file used parseBoolean. Should this param be coming from AAIConfig?",
      "range": {
        "startLine": 57,
        "startChar": 12,
        "endLine": 57,
        "endChar": 81
      },
      "revId": "980f6ccf2240aaff1836fcfb8f46d457f97150fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}