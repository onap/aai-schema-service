{
  "basePath": "/aai/v15", 
  "definitions": {
    "action": {
      "properties": {
        "action-data": {
          "items": {
            "$ref": "#/definitions/action-data"
          }, 
          "type": "array"
        }, 
        "action-type": {
          "type": "string"
        }
      }
    }, 
    "action-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "actions": {
      "description": "APIs that are more action related than REST (e.g., notify, update).\n", 
      "properties": {
        "notify": {
          "$ref": "#/definitions/notify", 
          "type": "object"
        }, 
        "update": {
          "$ref": "#/definitions/update", 
          "type": "object"
        }
      }
    }, 
    "aggregate-route": {
      "description": "Aggregate route configs are used on the D2 IPE\u2019s for the Voice services.  In 1902, SDNC will create aggregate-route objects and write them to A&AI. \n###### Related Nodes\n- TO l3-network (PARENT of aggregate-route, aggregate-route BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this AGGREGATE-ROUTE is DELETED also\n", 
      "properties": {
        "cidr-mask": {
          "description": "CIDR-mask for aggregate route subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "Identifies is aggregate route is ipv4 or ipv6", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "Name of the forwarding-path", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-id": {
          "description": "Unique id of the aggregate-route instance", 
          "type": "string"
        }
      }, 
      "required": [
        "route-id", 
        "network-start-address", 
        "cidr-mask", 
        "ip-version"
      ]
    }, 
    "aggregate-routes": {
      "description": "Collection of aggregate routes.\n", 
      "properties": {
        "aggregate-route": {
          "items": {
            "$ref": "#/definitions/aggregate-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "allotted-resource": {
      "description": "Represents a slice or partial piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource( allotted-resource BindsTo allotted-resource, ONE2ONE)\nAAI-1925\n- TO generic-vnf( allotted-resource PartOf generic-vnf, MANY2MANY)\n- TO instance-group( allotted-resource MemberOf instance-group, MANY2MANY)\n- TO l-interface( allotted-resource Uses l-interface, ONE2MANY)\n- TO l3-network( allotted-resource PartOf l3-network, MANY2MANY)\n- TO network-policy( allotted-resource Uses network-policy, ONE2ONE)\n- TO p-interface( allotted-resource Uses p-interface, ONE2MANY)\nAAI-1925 For CCVPN Usecase\n- TO service-instance (PARENT of allotted-resource, allotted-resource BelongsTo service-instance, MANY2ONE)(4)\n- TO vlan( allotted-resource PartOf vlan, MANY2MANY)\n- TO vpn-binding( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM allotted-resource( allotted-resource BindsTo allotted-resource, ONE2ONE)\nAAI-1925\n- FROM configuration( configuration Uses allotted-resource, ONE2ONE)(3)\n- FROM service-instance( service-instance Uses allotted-resource, MANY2MANY)\n- FROM site-resource( site-resource Uses allotted-resource, MANY2MANY)\nFor CCVPN Usecase\n- FROM tunnel-xconnect (CHILD of allotted-resource, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(1)\n\n-(1) IF this ALLOTTED-RESOURCE node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this ALLOTTED-RESOURCE is DELETED also\n-(4) IF this TO node is deleted, this ALLOTTED-RESOURCE is DELETED also\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this allotted-resource.", 
          "type": "string"
        }, 
        "access-ltp-id": {
          "description": "Store the id of the access ltp of this allotted-resource.", 
          "type": "string"
        }, 
        "access-node-id": {
          "description": "Store the id of the access node of this allotted-resource.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this allotted-resource.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this allotted-resource.", 
          "type": "string"
        }, 
        "allotted-resource-name": {
          "description": "Store the name of this allotted-resource.", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "Store the cvlan of this allotted-resource.", 
          "type": "string"
        }, 
        "description": {
          "description": "The descriptive information assigned to this allotted resource instance", 
          "type": "string"
        }, 
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "role": {
          "description": "role in the network that this resource will be providing.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Link back to more information in the controller", 
          "type": "string"
        }, 
        "tunnel-xconnects": {
          "items": {
            "$ref": "#/definitions/tunnel-xconnect"
          }, 
          "type": "array"
        }, 
        "type": {
          "description": "Generic description of the type of allotted resource.", 
          "type": "string"
        }, 
        "vpn-name": {
          "description": "Store the vpn-name of this allotted-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "allotted-resources": {
      "description": "This object is used to store slices of services being offered\n", 
      "properties": {
        "allotted-resource": {
          "items": {
            "$ref": "#/definitions/allotted-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "availability-zone": {
      "description": "Availability zone, a collection of compute hosts/pservers\n###### Related Nodes\n- TO cloud-region (PARENT of availability-zone, availability-zone BelongsTo cloud-region, MANY2ONE)(4)\n- TO complex( availability-zone LocatedIn complex, MANY2ONE)\n- TO service-capability( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM ctag-pool( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- FROM dvs-switch( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses availability-zone, MANY2MANY)\n- FROM pserver( pserver MemberOf availability-zone, MANY2ONE)\n- FROM vce( vce Uses availability-zone, MANY2MANY)\n\n-(4) IF this TO node is deleted, this AVAILABILITY-ZONE is DELETED also\n-AVAILABILITY-ZONE cannot be deleted if related to CTAG-POOL,DVS-SWITCH,GENERIC-VNF,PSERVER,VCE\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone.  Unique across a cloud region", 
          "type": "string"
        }, 
        "hypervisor-type": {
          "description": "Type of hypervisor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "State that indicates whether the availability zone should be used, etc.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "availability-zone-name", 
        "hypervisor-type"
      ]
    }, 
    "availability-zones": {
      "description": "Collection of availability zones\n", 
      "properties": {
        "availability-zone": {
          "items": {
            "$ref": "#/definitions/availability-zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "az-and-dvs-switches": {
      "properties": {
        "availability-zone": {
          "$ref": "#/definitions/availability-zone", 
          "type": "object"
        }, 
        "dvs-switches": {
          "$ref": "#/definitions/dvs-switches", 
          "type": "object"
        }
      }
    }, 
    "business": {
      "description": "Namespace for business related constructs\n", 
      "properties": {
        "connectors": {
          "items": {
            "$ref": "#/definitions/connector"
          }, 
          "type": "array"
        }, 
        "customers": {
          "items": {
            "$ref": "#/definitions/customer"
          }, 
          "type": "array"
        }, 
        "lines-of-business": {
          "items": {
            "$ref": "#/definitions/line-of-business"
          }, 
          "type": "array"
        }, 
        "owning-entities": {
          "items": {
            "$ref": "#/definitions/owning-entity"
          }, 
          "type": "array"
        }, 
        "platforms": {
          "items": {
            "$ref": "#/definitions/platform"
          }, 
          "type": "array"
        }, 
        "projects": {
          "items": {
            "$ref": "#/definitions/project"
          }, 
          "type": "array"
        }, 
        "sp-partners": {
          "items": {
            "$ref": "#/definitions/sp-partner"
          }, 
          "type": "array"
        }
      }
    }, 
    "class-of-service": {
      "description": "###### Related Nodes\n- TO site-pair (PARENT of class-of-service, class-of-service BelongsTo site-pair, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this CLASS-OF-SERVICE is DELETED also\n", 
      "properties": {
        "cos": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "probe-id": {
          "description": "identifier of probe", 
          "type": "string"
        }, 
        "probe-type": {
          "description": "type of probe", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cos"
      ]
    }, 
    "classes-of-service": {
      "description": "class-of-service of probe\n", 
      "properties": {
        "class-of-service": {
          "items": {
            "$ref": "#/definitions/class-of-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-infrastructure": {
      "description": "Namespace for cloud infrastructure.\n", 
      "properties": {
        "cloud-regions": {
          "items": {
            "$ref": "#/definitions/cloud-region"
          }, 
          "type": "array"
        }, 
        "complexes": {
          "items": {
            "$ref": "#/definitions/complex"
          }, 
          "type": "array"
        }, 
        "network-profiles": {
          "items": {
            "$ref": "#/definitions/network-profile"
          }, 
          "type": "array"
        }, 
        "network-technologies": {
          "items": {
            "$ref": "#/definitions/network-technology"
          }, 
          "type": "array"
        }, 
        "operational-environments": {
          "items": {
            "$ref": "#/definitions/operational-environment"
          }, 
          "type": "array"
        }, 
        "pservers": {
          "items": {
            "$ref": "#/definitions/pserver"
          }, 
          "type": "array"
        }, 
        "virtual-data-centers": {
          "items": {
            "$ref": "#/definitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-region": {
      "description": "cloud-region designates an installation of a cloud cluster or region or instantiation. In AT&Ts AIC cloud, this could be an LCP or DCP. Cloud regions are uniquely identified by a composite key, cloud-owner + cloud-region-id. The format of the cloud-owner is vendor-cloudname and we will use att-aic for AT&T's AIC.\n###### Related Nodes\n- TO complex( cloud-region LocatedIn complex, MANY2ONE)\n- TO instance-group( cloud-region Uses instance-group, ONE2MANY)\n- TO l3-network( cloud-region Uses l3-network, MANY2MANY)\n- TO network-technology( cloud-region Uses network-technology, MANY2MANY)\n- TO zone( cloud-region LocatedIn zone, MANY2ONE)\n- FROM availability-zone (CHILD of cloud-region, availability-zone BelongsTo cloud-region, MANY2ONE)(1)\n- FROM dvs-switch (CHILD of cloud-region, dvs-switch BelongsTo cloud-region, MANY2ONE)\n- FROM esr-system-info (CHILD of cloud-region, esr-system-info BelongsTo cloud-region, MANY2ONE)(1)\n- FROM flavor (CHILD of cloud-region, flavor BelongsTo cloud-region, MANY2ONE)\n- FROM generic-vnf( generic-vnf LocatedIn cloud-region, MANY2ONE)\n- FROM group-assignment (CHILD of cloud-region, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM hpa-capability (CHILD of cloud-region, hpa-capability BelongsTo cloud-region, MANY2ONE)\n- FROM image (CHILD of cloud-region, image BelongsTo cloud-region, MANY2ONE)\n- FROM logical-link( logical-link LocatedIn cloud-region, MANY2MANY)\n- FROM oam-network (CHILD of cloud-region, oam-network BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver LocatedIn cloud-region, MANY2ONE)\n- FROM snapshot (CHILD of cloud-region, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM tenant (CHILD of cloud-region, tenant BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv4-address-list (CHILD of cloud-region, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv6-address-list (CHILD of cloud-region, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vlan-tag( vlan-tag BelongsTo cloud-region, MANY2ONE)\n- FROM volume-group (CHILD of cloud-region, volume-group BelongsTo cloud-region, MANY2ONE)\n\n-(1) IF this CLOUD-REGION node is deleted, this FROM node is DELETED also\n-CLOUD-REGION cannot be deleted if related to DVS-SWITCH,FLAVOR,GROUP-ASSIGNMENT,HPA-CAPABILITY,IMAGE,OAM-NETWORK,SNAPSHOT,TENANT,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST,VOLUME-GROUP\n", 
      "properties": {
        "availability-zones": {
          "items": {
            "$ref": "#/definitions/availability-zone"
          }, 
          "type": "array"
        }, 
        "cloud-extra-info": {
          "description": "ESR inputs extra information about the VIM or Cloud which will be decoded by MultiVIM.", 
          "type": "string"
        }, 
        "cloud-owner": {
          "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
          "type": "string"
        }, 
        "cloud-region-id": {
          "description": "Identifier used by the vendor for the region. Second part of composite key", 
          "type": "string"
        }, 
        "cloud-region-version": {
          "description": "Software version employed at the site.  NOTE - THIS FIELD IS NOT KEPT UP TO DATE.", 
          "type": "string"
        }, 
        "cloud-type": {
          "description": "Type of the cloud (e.g., openstack)", 
          "type": "string"
        }, 
        "cloud-zone": {
          "description": "Zone where the cloud is homed.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "complex-name": {
          "description": "complex name for cloud-region instance.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "dvs-switches": {
          "items": {
            "$ref": "#/definitions/dvs-switch"
          }, 
          "type": "array"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "flavors": {
          "items": {
            "$ref": "#/definitions/flavor"
          }, 
          "type": "array"
        }, 
        "group-assignments": {
          "items": {
            "$ref": "#/definitions/group-assignment"
          }, 
          "type": "array"
        }, 
        "hpa-capabilities": {
          "description": "List of cloud-region specific HPA Capabilities", 
          "items": {
            "$ref": "#/definitions/hpa-capability"
          }, 
          "type": "array"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "images": {
          "items": {
            "$ref": "#/definitions/image"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "items": {
            "$ref": "#/definitions/oam-network"
          }, 
          "type": "array"
        }, 
        "owner-defined-type": {
          "description": "Cloud-owner defined type indicator (e.g., dcp, lcp)", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "snapshots": {
          "items": {
            "$ref": "#/definitions/snapshot"
          }, 
          "type": "array"
        }, 
        "sriov-automation": {
          "description": "Whether the cloud region supports (true) or does not support (false) SR-IOV automation.", 
          "type": "string"
        }, 
        "tenants": {
          "items": {
            "$ref": "#/definitions/tenant"
          }, 
          "type": "array"
        }, 
        "upgrade-cycle": {
          "description": "Upgrade cycle for the cloud region. For AIC regions upgrade cycle is designated by A,B,C etc.", 
          "type": "string"
        }, 
        "vip-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/vip-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "vip-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/vip-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "volume-groups": {
          "items": {
            "$ref": "#/definitions/volume-group"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "cloud-owner", 
        "cloud-region-id"
      ]
    }, 
    "cloud-regions": {
      "properties": {
        "cloud-region": {
          "items": {
            "$ref": "#/definitions/cloud-region"
          }, 
          "type": "array"
        }
      }
    }, 
    "collection": {
      "description": "represents the collection resource in the TOSCA model\n###### Related Nodes\n- FROM instance-group( instance-group BelongsTo collection, ONE2ONE)\n- FROM service-instance( service-instance ComposedOf collection, ONE2ONE)\n", 
      "properties": {
        "collection-customization-id": {
          "description": "Captures the id of all the configuration used to customize the resource for the service", 
          "type": "string"
        }, 
        "collection-function": {
          "description": "Collection function", 
          "type": "string"
        }, 
        "collection-id": {
          "description": "Collection Object UUID", 
          "type": "string"
        }, 
        "collection-name": {
          "description": "collection name", 
          "type": "string"
        }, 
        "collection-role": {
          "description": "Collection Role", 
          "type": "string"
        }, 
        "collection-type": {
          "description": "Collection type", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "Model Version", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "orchestration status", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "collection-id"
      ]
    }, 
    "collections": {
      "properties": {
        "collection": {
          "items": {
            "$ref": "#/definitions/collection"
          }, 
          "type": "array"
        }
      }
    }, 
    "common": {
      "description": "Namespace for common inventory resources.\n", 
      "properties": {
        "contacts": {
          "items": {
            "$ref": "#/definitions/contact"
          }, 
          "type": "array"
        }
      }
    }, 
    "complex": {
      "description": "Collection of physical locations that can house cloud-regions.\n###### Related Nodes\n- TO l3-network( complex Uses l3-network, MANY2MANY)\n- FROM availability-zone( availability-zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn complex, MANY2ONE)\n- FROM ctag-pool (CHILD of complex, ctag-pool BelongsTo complex, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf LocatedIn complex, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo complex, MANY2MANY)\n- FROM pnf( pnf LocatedIn complex, MANY2ONE)\n- FROM pserver( pserver LocatedIn complex, MANY2ONE)\n- FROM site-resource( site-resource Uses complex, MANY2MANY)\nFor CCVPN Usecase\n- FROM vce( vce LocatedIn complex, MANY2MANY)\n- FROM volume-group( volume-group LocatedIn complex, MANY2ONE)\n- FROM vpls-pe( vpls-pe LocatedIn complex, MANY2ONE)\n- FROM zone( zone LocatedIn complex, MANY2ONE)\n\n-(1) IF this COMPLEX node is deleted, this FROM node is DELETED also\n-COMPLEX cannot be deleted if related to AVAILABILITY-ZONE,CLOUD-REGION,GENERIC-VNF,OAM-NETWORK,PNF,PSERVER,VCE,VOLUME-GROUP,VPLS-PE,ZONE\n", 
      "properties": {
        "city": {
          "type": "string"
        }, 
        "complex-name": {
          "description": "Gamma complex name for LCP instance.", 
          "type": "string"
        }, 
        "country": {
          "type": "string"
        }, 
        "ctag-pools": {
          "items": {
            "$ref": "#/definitions/ctag-pool"
          }, 
          "type": "array"
        }, 
        "data-center-code": {
          "description": "Data center code which can be an alternate way to identify a complex", 
          "type": "string"
        }, 
        "elevation": {
          "type": "string"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "lata": {
          "type": "string"
        }, 
        "latitude": {
          "type": "string"
        }, 
        "longitude": {
          "type": "string"
        }, 
        "physical-location-id": {
          "description": "Unique identifier for physical location, e.g., CLLI", 
          "type": "string"
        }, 
        "physical-location-type": {
          "description": "Type, e.g., central office, data center.", 
          "type": "string"
        }, 
        "postal-code": {
          "type": "string"
        }, 
        "region": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "state": {
          "type": "string"
        }, 
        "street1": {
          "type": "string"
        }, 
        "street2": {
          "type": "string"
        }
      }, 
      "required": [
        "physical-location-id", 
        "physical-location-type", 
        "street1", 
        "city", 
        "postal-code", 
        "country", 
        "region"
      ]
    }, 
    "complexes": {
      "description": "Collection of physical locations that can house cloud-regions.\n", 
      "properties": {
        "complex": {
          "items": {
            "$ref": "#/definitions/complex"
          }, 
          "type": "array"
        }
      }
    }, 
    "configuration": {
      "description": "Generic configuration object.\n###### Related Nodes\n- TO allotted-resource( configuration Uses allotted-resource, ONE2ONE)(2)\n- TO configuration( configuration BindsTo configuration, ONE2ONE)\n- TO l-interface( configuration AppliesTo l-interface, ONE2MANY)\n- TO l3-network( configuration PartOf l3-network, MANY2MANY)\n- TO logical-link( configuration Uses logical-link, ONE2MANY)(2)\n- TO pnf( configuration AppliesTo pnf, MANY2MANY)\n- TO vnfc( configuration Uses vnfc, ONE2ONE)(4)\n- TO vpn-binding( configuration Uses vpn-binding, MANY2ONE)\n- TO vrf( configuration Uses vrf, ONE2MANY)\nA Configuration uses VRFs\n- FROM configuration( configuration BindsTo configuration, ONE2ONE)\n- FROM evc (CHILD of configuration, evc BelongsTo configuration, ONE2ONE)(1)\n- FROM forwarder( forwarder Uses configuration, ONE2ONE)(3)\n- FROM forwarder-evc (CHILD of configuration, forwarder-evc BelongsTo configuration, ONE2ONE)(1)\n- FROM forwarding-path( forwarding-path Uses configuration, ONE2ONE)(3)\n- FROM generic-vnf( generic-vnf Uses configuration, ONE2MANY)(3)\n- FROM metadatum (CHILD of configuration, metadatum BelongsTo configuration, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses configuration, ONE2MANY)\n- FROM service-instance( service-instance ComposedOf configuration, MANY2MANY)\n\n-(1) IF this CONFIGURATION node is deleted, this FROM node is DELETED also\n-(2) IF this CONFIGURATION node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this CONFIGURATION is DELETED also\n-(4) IF this TO node is deleted, this CONFIGURATION is DELETED also\n", 
      "properties": {
        "config-policy-name": {
          "description": "Used to capture the name of the fabric configuration policy that was used to generate the payload sent to PINC for fabric configuration.", 
          "type": "string"
        }, 
        "configuration-id": {
          "description": "UUID assigned to configuration.", 
          "type": "string"
        }, 
        "configuration-name": {
          "description": "Name of the configuration.", 
          "type": "string"
        }, 
        "configuration-selflink": {
          "description": "URL to endpoint where AAI can get more details from SDN-GC.", 
          "type": "string"
        }, 
        "configuration-sub-type": {
          "description": "vprobe, pprobe.", 
          "type": "string"
        }, 
        "configuration-type": {
          "description": "port-mirroring-configuration.", 
          "type": "string"
        }, 
        "evcs": {
          "items": {
            "$ref": "#/definitions/evc"
          }, 
          "type": "array"
        }, 
        "forwarder-evcs": {
          "items": {
            "$ref": "#/definitions/forwarder-evc"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "Indicates the entity that will manage this feature. Could be an organization or the name of the application as well.", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-customization-id": {
          "description": "id of  the configuration used to customize the resource", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of the configuration.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tunnel-bandwidth": {
          "description": "DHV Site Effective Bandwidth", 
          "type": "string"
        }, 
        "vendor-allowed-max-bandwidth": {
          "description": "Velocloud Nominal Throughput - VNT", 
          "type": "string"
        }
      }, 
      "required": [
        "configuration-id", 
        "configuration-type"
      ]
    }, 
    "configurations": {
      "description": "Collection of configurations\n", 
      "properties": {
        "configuration": {
          "items": {
            "$ref": "#/definitions/configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "connectivities": {
      "description": "Collection of connectivities\n", 
      "properties": {
        "connectivity": {
          "items": {
            "$ref": "#/definitions/connectivity"
          }, 
          "type": "array"
        }
      }
    }, 
    "connectivity": {
      "description": "Instance of a connectivity\n###### Related Nodes\n- TO ext-aai-network( connectivity BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( connectivity PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( connectivity PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this connectivity.", 
          "type": "string"
        }, 
        "access-ltp-id": {
          "description": "Store the id of the access ltp of this connectivity.", 
          "type": "string"
        }, 
        "access-node-id": {
          "description": "Store the id of the access node of this connectivity.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this connectivity.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this connectivity.", 
          "type": "string"
        }, 
        "bandwidth-profile-name": {
          "description": "Store the name of a bandwidth profile.", 
          "type": "string"
        }, 
        "cbs": {
          "description": "Store the CBS of this connectivity.", 
          "type": "string"
        }, 
        "cir": {
          "description": "Store the CIR of this connectivity.", 
          "type": "string"
        }, 
        "color-aware": {
          "description": "Store the color-awareness of this connectivity.", 
          "type": "string"
        }, 
        "connectivity-id": {
          "description": "Uniquely identifies this connectivity by id", 
          "type": "string"
        }, 
        "connectivity-selflink": {
          "description": "Store the link to get more information for this connectivity.", 
          "type": "string"
        }, 
        "coupling-flag": {
          "description": "Store the coupling flag of this connectivity.", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "Store the cvlan for this connectivity.", 
          "type": "string"
        }, 
        "ebs": {
          "description": "Store the EBS of this connectivity.", 
          "type": "string"
        }, 
        "eir": {
          "description": "Store the EIR of this connectivity.", 
          "type": "string"
        }, 
        "etht-svc-name": {
          "description": "The ethernet service name for this connectivity.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Store the type of a bandwidth profile.", 
          "type": "string"
        }
      }, 
      "required": [
        "connectivity-id"
      ]
    }, 
    "connector": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n###### Related Nodes\n- TO virtual-data-center( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM metadatum (CHILD of connector, metadatum BelongsTo connector, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses connector, MANY2MANY)\n\n-(1) IF this CONNECTOR node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-instance-id": {
          "description": "Unique id of resource instance.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "resource-instance-id"
      ]
    }, 
    "connectors": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n", 
      "properties": {
        "connector": {
          "items": {
            "$ref": "#/definitions/connector"
          }, 
          "type": "array"
        }
      }
    }, 
    "constrained-element-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-constraint (PARENT of constrained-element-set, constrained-element-set BelongsTo model-constraint, MANY2ONE)(4)\n- TO model-element (PARENT of constrained-element-set, constrained-element-set BelongsTo model-element, MANY2ONE)(4)\n- FROM element-choice-set (CHILD of constrained-element-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(1)\n\n-(1) IF this CONSTRAINED-ELEMENT-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this CONSTRAINED-ELEMENT-SET is DELETED also\n", 
      "properties": {
        "check-type": {
          "type": "string"
        }, 
        "constrained-element-set-uuid": {
          "type": "string"
        }, 
        "constraint-type": {
          "type": "string"
        }, 
        "element-choice-sets": {
          "items": {
            "$ref": "#/definitions/element-choice-set"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "constrained-element-set-uuid", 
        "constraint-type", 
        "check-type"
      ]
    }, 
    "constrained-element-sets": {
      "properties": {
        "constrained-element-set": {
          "items": {
            "$ref": "#/definitions/constrained-element-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "contact": {
      "description": "Contacts store the vendor information and have a relationship to the generic-vnf.  In 1902, this will be populated by SDN-GC\n###### Related Nodes\n- TO generic-vnf( contact supports generic-vnf, MANY2MANY)\n", 
      "properties": {
        "contact-email": {
          "description": "e-mail of contact", 
          "type": "string"
        }, 
        "contact-name": {
          "description": "Name of the contact", 
          "type": "string"
        }, 
        "contact-telephone": {
          "description": "Tel no. of contact", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vendor-type": {
          "description": "NI (Network Integrator)SI (System Integrator) 3rd Party LCM", 
          "type": "string"
        }
      }, 
      "required": [
        "contact-name"
      ]
    }, 
    "contacts": {
      "description": "Collection of contacts\n", 
      "properties": {
        "contact": {
          "items": {
            "$ref": "#/definitions/contact"
          }, 
          "type": "array"
        }
      }
    }, 
    "cp": {
      "description": "point of attachment from services or resources to a virtual link or network.\n###### Related Nodes\n- FROM l-interface( l-interface LinksTo cp, ONE2ONE)\n- FROM l3-interface-ipv4-address-list (CHILD of cp, l3-interface-ipv4-address-list BelongsTo cp, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of cp, l3-interface-ipv6-address-list BelongsTo cp, MANY2ONE)(1)\n- FROM l3-network( l3-network LinksTo cp, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list Uses cp, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list Uses cp, MANY2MANY)\n- FROM vlan-tag( vlan-tag Uses cp, MANY2MANY)\n- FROM vnfc (PARENT of cp, vnfc BelongsTo cp, ONE2MANY)\ncp is child of vnfc(3)\n\n-(1) IF this CP node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this CP is DELETED also\n", 
      "properties": {
        "cp-instance-id": {
          "description": "Unique ID of the connection point.", 
          "type": "string"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "port-id": {
          "description": "port index to represent multiple CPs on VNFC connected to same network.", 
          "format": "int32", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cp-instance-id"
      ]
    }, 
    "cps": {
      "description": "Collection of connection points.\n", 
      "properties": {
        "cp": {
          "items": {
            "$ref": "#/definitions/cp"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-assignment": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of ctag-assignment, ctag-assignment BelongsTo l3-network, MANY2ONE)(4)\n- FROM service-instance( service-instance Uses ctag-assignment, ONE2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "id.", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vlan-id-inner"
      ]
    }, 
    "ctag-assignments": {
      "properties": {
        "ctag-assignment": {
          "items": {
            "$ref": "#/definitions/ctag-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-pool": {
      "description": "A collection of C tags (vlan tags) grouped for a specific purpose.\n###### Related Nodes\n- TO availability-zone( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- TO complex (PARENT of ctag-pool, ctag-pool BelongsTo complex, MANY2ONE)(4)\n- FROM generic-vnf( generic-vnf Uses ctag-pool, MANY2MANY)\n- FROM vpls-pe( vpls-pe Uses ctag-pool, MANY2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-POOL is DELETED also\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone", 
          "type": "string"
        }, 
        "ctag-pool-purpose": {
          "description": "Describes what the intended purpose of this pool is.", 
          "type": "string"
        }, 
        "ctag-values": {
          "description": "Comma separated list of ctags", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "target-pe": {
          "description": "The Target provider edge router", 
          "type": "string"
        }
      }, 
      "required": [
        "target-pe", 
        "availability-zone-name", 
        "ctag-pool-purpose"
      ]
    }, 
    "ctag-pools": {
      "properties": {
        "ctag-pool": {
          "items": {
            "$ref": "#/definitions/ctag-pool"
          }, 
          "type": "array"
        }
      }
    }, 
    "customer": {
      "description": "customer identifiers to provide linkage back to BSS information.\n###### Related Nodes\n- FROM service-subscription (CHILD of customer, service-subscription BelongsTo customer, MANY2ONE)(1)\n- FROM vpn-binding( vpn-binding Uses customer, MANY2MANY)\n\n-(1) IF this CUSTOMER node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "global-customer-id": {
          "description": "Global customer id used across ECOMP to uniquely identify customer.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-subscriptions": {
          "items": {
            "$ref": "#/definitions/service-subscription"
          }, 
          "type": "array"
        }, 
        "subscriber-name": {
          "description": "Subscriber name, an alternate way to retrieve a customer.", 
          "type": "string"
        }, 
        "subscriber-type": {
          "description": "Subscriber type, a way to provide VID with only the INFRA customers.", 
          "type": "string"
        }
      }, 
      "required": [
        "global-customer-id", 
        "subscriber-name", 
        "subscriber-type"
      ]
    }, 
    "customers": {
      "description": "Collection of customer identifiers to provide linkage back to BSS information.\n", 
      "properties": {
        "customer": {
          "items": {
            "$ref": "#/definitions/customer"
          }, 
          "type": "array"
        }
      }
    }, 
    "cvlan-tag-entry": {
      "properties": {
        "cvlan-tag": {
          "description": "See mis-na-virtualization-platform.yang", 
          "format": "int64", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cvlan-tag"
      ]
    }, 
    "cvlan-tags": {
      "properties": {
        "cvlan-tag-entry": {
          "items": {
            "$ref": "#/definitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }
      }
    }, 
    "device": {
      "description": "Instance of a device\n###### Related Nodes\n- TO ext-aai-network( device BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO generic-vnf( device Uses generic-vnf, ONE2MANY)\nFor CCVPN Usecase\n- TO service-instance( device PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "class": {
          "description": "Store the class of this device.", 
          "type": "string"
        }, 
        "description": {
          "description": "Store the description of this device.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Uniquely identifies this device by id", 
          "type": "string"
        }, 
        "device-name": {
          "description": "Store the name of this device.", 
          "type": "string"
        }, 
        "esn": {
          "description": "Store the esn of this device.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "system-ip": {
          "description": "Store the system-ip of this device.", 
          "type": "string"
        }, 
        "system-ipv4": {
          "description": "Store the system-ipv4 of this device.", 
          "type": "string"
        }, 
        "system-ipv6": {
          "description": "Store the system-ipv6 of this device.", 
          "type": "string"
        }, 
        "type": {
          "description": "Store the type of this device.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "Store the vendor of this device.", 
          "type": "string"
        }, 
        "version": {
          "description": "Store the version of this device.", 
          "type": "string"
        }
      }, 
      "required": [
        "device-id"
      ]
    }, 
    "devices": {
      "description": "Collection of devices\n", 
      "properties": {
        "device": {
          "items": {
            "$ref": "#/definitions/device"
          }, 
          "type": "array"
        }
      }
    }, 
    "dhcp-service": {
      "description": "Instance of a dhcp-service\n###### Related Nodes\n- FROM lan-port-config (PARENT of dhcp-service, lan-port-config Uses dhcp-service, ONE2MANY)\nFor CCVPN Usecase(3)\n\n-(3) IF this FROM node is deleted, this DHCP-SERVICE is DELETED also\n", 
      "properties": {
        "dhcp-service-id": {
          "description": "Uniquely identifies this dhcp-service by id", 
          "type": "string"
        }, 
        "dhcp-service-type": {
          "description": "Store the dhcp-service-type of this dhcp-service.", 
          "type": "string"
        }, 
        "dns": {
          "description": "Store the dns of this dhcp-service.", 
          "type": "string"
        }, 
        "domain-name": {
          "description": "Store the domain-name of this dhcp-service.", 
          "type": "string"
        }, 
        "lease-time": {
          "description": "Store the lease-time of this dhcp-service.", 
          "type": "string"
        }, 
        "nbns": {
          "description": "Store the nbns of this dhcp-service.", 
          "type": "string"
        }, 
        "ntp-primary": {
          "description": "Store the ntp-primary of this dhcp-service.", 
          "type": "string"
        }, 
        "ntp-secondary": {
          "description": "Store the ntp-secondary of this dhcp-service.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "server-ipv4-address": {
          "description": "Store the server-ip4-address of this dhcp-service.", 
          "type": "string"
        }, 
        "server-ipv6-address": {
          "description": "Store the server-ipv6-address of this dhcp-service.", 
          "type": "string"
        }, 
        "service-enable": {
          "description": "Store the service-enable of this dhcp-service.", 
          "type": "string"
        }
      }, 
      "required": [
        "dhcp-service-id"
      ]
    }, 
    "dhcp-services": {
      "description": "Collection of dhcp-services\n", 
      "properties": {
        "dhcp-service": {
          "items": {
            "$ref": "#/definitions/dhcp-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "dvs-switch": {
      "description": "Digital virtual switch metadata, used by SDN-C to configure VCEs.  A&AI needs to receive this data from the PO deployment team and administer it using the provisioningTool.sh into A&AI. \n###### Related Nodes\n- TO availability-zone( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- TO cloud-region (PARENT of dvs-switch, dvs-switch BelongsTo cloud-region, MANY2ONE)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "switch-name": {
          "description": "DVS switch name", 
          "type": "string"
        }, 
        "vcenter-url": {
          "description": "URL used to reach the vcenter", 
          "type": "string"
        }
      }, 
      "required": [
        "switch-name", 
        "vcenter-url"
      ]
    }, 
    "dvs-switches": {
      "description": "Collection of digital virtual switch metadata used for vmWare VCEs and GenericVnfs.\n", 
      "properties": {
        "dvs-switch": {
          "items": {
            "$ref": "#/definitions/dvs-switch"
          }, 
          "type": "array"
        }
      }
    }, 
    "edge-prop-names": {
      "description": "Internal map to define the properties of an edge and interpret the map EdgeRules\n", 
      "properties": {
        "SVC-INFRA": {
          "type": "string"
        }, 
        "aai-uuid": {
          "type": "string"
        }, 
        "contains-other-v": {
          "type": "string"
        }, 
        "delete-other-v": {
          "type": "string"
        }, 
        "direction": {
          "type": "string"
        }, 
        "edgeLabel": {
          "type": "string"
        }, 
        "multiplicityRule": {
          "type": "string"
        }, 
        "prevent-delete": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-request": {
      "properties": {
        "edge-tag": {
          "type": "string"
        }, 
        "include-node-filter": {
          "items": {
            "$ref": "#/definitions/include-node-filter"
          }, 
          "type": "array"
        }, 
        "result-detail": {
          "type": "string"
        }, 
        "secondary-filter": {
          "items": {
            "$ref": "#/definitions/secondary-filter"
          }, 
          "type": "array"
        }, 
        "start-node-filter": {
          "items": {
            "$ref": "#/definitions/start-node-filter"
          }, 
          "type": "array"
        }, 
        "start-node-type": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-result": {
      "properties": {
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/definitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }
      }
    }, 
    "element-choice-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO constrained-element-set (PARENT of element-choice-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(4)\n- FROM model-element (CHILD of element-choice-set, model-element BelongsTo element-choice-set, MANY2ONE)(1)\n\n-(1) IF this ELEMENT-CHOICE-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ELEMENT-CHOICE-SET is DELETED also\n", 
      "properties": {
        "cardinality": {
          "type": "string"
        }, 
        "element-choice-set-name": {
          "type": "string"
        }, 
        "element-choice-set-uuid": {
          "type": "string"
        }, 
        "model-elements": {
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "element-choice-set-uuid", 
        "element-choice-set-name"
      ]
    }, 
    "element-choice-sets": {
      "properties": {
        "element-choice-set": {
          "items": {
            "$ref": "#/definitions/element-choice-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "entitlement": {
      "description": "Metadata for entitlement group.\n###### Related Nodes\n- TO generic-vnf (PARENT of entitlement, entitlement BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of entitlement, entitlement BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ENTITLEMENT is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-uuid": {
          "description": "Unique ID of an entitlement resource.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "entitlements": {
      "description": "Entitlements, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "entitlement": {
          "items": {
            "$ref": "#/definitions/entitlement"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-ems": {
      "description": "Persist EMS address information used by EMS driver.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-ems, esr-system-info BelongsTo esr-ems, MANY2ONE)(1)\n\n-(1) IF this ESR-EMS node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "ems-id": {
          "description": "Unique ID of EMS.", 
          "type": "string"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "ems-id"
      ]
    }, 
    "esr-ems-list": {
      "properties": {
        "esr-ems": {
          "items": {
            "$ref": "#/definitions/esr-ems"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-system-info": {
      "description": "Persist common address information of external systems.\n###### Related Nodes\n- TO cloud-region (PARENT of esr-system-info, esr-system-info BelongsTo cloud-region, MANY2ONE)(4)\n- TO esr-ems (PARENT of esr-system-info, esr-system-info BelongsTo esr-ems, MANY2ONE)(4)\n- TO esr-thirdparty-sdnc (PARENT of esr-system-info, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(4)\n- TO esr-vnfm (PARENT of esr-system-info, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(4)\n- FROM ext-aai-network (PARENT of esr-system-info, ext-aai-network Uses esr-system-info, ONE2MANY)\nFor CCVPN Usecase(3)\n\n-(3) IF this FROM node is deleted, this ESR-SYSTEM-INFO is DELETED also\n-(4) IF this TO node is deleted, this ESR-SYSTEM-INFO is DELETED also\n", 
      "properties": {
        "cloud-domain": {
          "description": "domain info for authentication.", 
          "type": "string"
        }, 
        "default-tenant": {
          "description": "default tenant of VIM.", 
          "type": "string"
        }, 
        "esr-system-info-id": {
          "description": "Unique ID of esr system info.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "service IP of ftp server.", 
          "type": "string"
        }, 
        "openstack-region-id": {
          "description": "OpenStack region ID used by MultiCloud plugin to interact with an OpenStack instance.", 
          "type": "string"
        }, 
        "passive": {
          "description": "ftp passive mode or not.", 
          "type": "boolean"
        }, 
        "password": {
          "description": "password used to access external systems.", 
          "type": "string"
        }, 
        "port": {
          "description": "service port of ftp server.", 
          "type": "string"
        }, 
        "protocol": {
          "description": "protocol of third party SDNC, for example netconf/snmp.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "remote-path": {
          "description": "resource or performance data file path.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-url": {
          "description": "url used to access external systems.", 
          "type": "string"
        }, 
        "ssl-cacert": {
          "description": "ca file content if enabled ssl on auth-url.", 
          "type": "string"
        }, 
        "ssl-insecure": {
          "description": "Whether to verify VIM's certificate.", 
          "type": "boolean"
        }, 
        "system-name": {
          "description": "name of external system.", 
          "type": "string"
        }, 
        "system-status": {
          "description": "the status of external system.", 
          "type": "string"
        }, 
        "system-type": {
          "description": "it could be vim/vnfm/thirdparty-sdnc/ems-resource/ems-performance/ems-alarm.", 
          "type": "string"
        }, 
        "type": {
          "description": "type of external systems.", 
          "type": "string"
        }, 
        "user-name": {
          "description": "username used to access external systems.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "vendor of external systems.", 
          "type": "string"
        }, 
        "version": {
          "description": "version of external systems.", 
          "type": "string"
        }
      }, 
      "required": [
        "esr-system-info-id", 
        "user-name", 
        "password", 
        "system-type"
      ]
    }, 
    "esr-system-info-list": {
      "description": "Collection of persistent block-level external system auth info.\n", 
      "properties": {
        "esr-system-info": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-thirdparty-sdnc": {
      "description": "Persist SDNC address information used by ONAP SDNC.\n###### Related Nodes\n- TO pnf( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM esr-system-info (CHILD of esr-thirdparty-sdnc, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(1)\n\n-(1) IF this ESR-THIRDPARTY-SDNC node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "location": {
          "description": "used for DC type to indicate the location of SDNC, such as Core or Edge.", 
          "type": "string"
        }, 
        "product-name": {
          "description": "password used to access SDNC server.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "thirdparty-sdnc-id": {
          "description": "Unique ID of SDNC.", 
          "type": "string"
        }
      }, 
      "required": [
        "thirdparty-sdnc-id"
      ]
    }, 
    "esr-thirdparty-sdnc-list": {
      "properties": {
        "esr-thirdparty-sdnc": {
          "items": {
            "$ref": "#/definitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-vnfm": {
      "description": "Persist VNFM address information used by VF-C.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-vnfm, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(1)\n- FROM generic-vnf( generic-vnf DependsOn esr-vnfm, MANY2ONE)\n\n-(1) IF this ESR-VNFM node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "certificate-url": {
          "description": "certificate url of VNFM.", 
          "type": "string"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vim-id": {
          "description": "indecate the VIM to deploy VNF.", 
          "type": "string"
        }, 
        "vnfm-id": {
          "description": "Unique ID of VNFM.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfm-id"
      ]
    }, 
    "esr-vnfm-list": {
      "properties": {
        "esr-vnfm": {
          "items": {
            "$ref": "#/definitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "evc": {
      "description": "evc object is an optional child object of the Configuration object.\n###### Related Nodes\n- TO configuration (PARENT of evc, evc BelongsTo configuration, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this EVC is DELETED also\n", 
      "properties": {
        "cir-units": {
          "description": "CIR units", 
          "type": "string"
        }, 
        "cir-value": {
          "description": "Commited Information Rate", 
          "type": "string"
        }, 
        "collector-pop-clli": {
          "description": "Collector POP CLLI (from the hostname of the access pnf)", 
          "type": "string"
        }, 
        "connection-diversity-group-id": {
          "description": "Diversity Group ID", 
          "type": "string"
        }, 
        "esp-evc-cir-units": {
          "description": "CIR units (For ESP)", 
          "type": "string"
        }, 
        "esp-evc-cir-value": {
          "description": "Committed Information Rate (For ESP)", 
          "type": "string"
        }, 
        "esp-evc-circuit-id": {
          "description": "EVC Circuit ID of ESP EVC", 
          "type": "string"
        }, 
        "esp-itu-code": {
          "description": "Identifies ESP", 
          "type": "string"
        }, 
        "evc-id": {
          "description": "Unique/key field for the evc object", 
          "type": "string"
        }, 
        "forwarding-path-topology": {
          "description": "Point-to-Point, Multi-Point", 
          "type": "string"
        }, 
        "inter-connect-type-ingress": {
          "description": "Interconnect type on ingress side of EVC.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-hours": {
          "description": "formerly Performance Group", 
          "type": "string"
        }, 
        "tagmode-access-egress": {
          "description": "tagMode for network side of EVC", 
          "type": "string"
        }, 
        "tagmode-access-ingress": {
          "description": "tagode for collector side of EVC", 
          "type": "string"
        }
      }, 
      "required": [
        "evc-id"
      ]
    }, 
    "evcs": {
      "properties": {
        "evc": {
          "items": {
            "$ref": "#/definitions/evc"
          }, 
          "type": "array"
        }
      }
    }, 
    "ext-aai-network": {
      "description": "Refer to an external AAI in another ONAP.\n###### Related Nodes\n- TO esr-system-info (PARENT of ext-aai-network, ext-aai-network Uses esr-system-info, ONE2MANY)\nFor CCVPN Usecase(2)\n- FROM connectivity( connectivity BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM device( device BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM lan-port-config( lan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM logical-link( logical-link BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM network-resource( network-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM pnf( pnf BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM sdwan-vpn( sdwan-vpn BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM site-resource( site-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM vpn-binding( vpn-binding BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM wan-port-config( wan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n\n-(2) IF this EXT-AAI-NETWORK node is deleted, this TO node is DELETED also\n-EXT-AAI-NETWORK cannot be deleted if related to CONNECTIVITY,DEVICE,LAN-PORT-CONFIG,LOGICAL-LINK,NETWORK-RESOURCE,PNF,SDWAN-VPN,SITE-RESOURCE,VPN-BINDING,WAN-PORT-CONFIG\n", 
      "properties": {
        "aai-id": {
          "description": "Unique ID of the referenced AAI.", 
          "type": "string"
        }, 
        "esr-system-info": {
          "$ref": "#/definitions/esr-system-info", 
          "type": "object"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "schema-version": {
          "description": "Schema version of the referenced AAI.", 
          "type": "string"
        }
      }, 
      "required": [
        "aai-id"
      ]
    }, 
    "ext-aai-networks": {
      "properties": {
        "ext-aai-network": {
          "items": {
            "$ref": "#/definitions/ext-aai-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "external-system": {
      "description": "Namespace for external system.\n", 
      "properties": {
        "esr-ems-list": {
          "items": {
            "$ref": "#/definitions/esr-ems"
          }, 
          "type": "array"
        }, 
        "esr-thirdparty-sdnc-list": {
          "items": {
            "$ref": "#/definitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }, 
        "esr-vnfm-list": {
          "items": {
            "$ref": "#/definitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-properties": {
      "description": "Extra properties for inventory item for response list\n", 
      "properties": {
        "extra-property": {
          "items": {
            "$ref": "#/definitions/extra-property"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-property": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "flavor": {
      "description": "Openstack flavor.\n###### Related Nodes\n- TO cloud-region (PARENT of flavor, flavor BelongsTo cloud-region, MANY2ONE)\n- TO pserver( flavor CanBeInstantiatedIn pserver, MANY2MANY)\nHPA Capacity getting the compute nodes from given flavor\n- FROM hpa-capability (CHILD of flavor, hpa-capability BelongsTo flavor, MANY2ONE)\n- FROM vserver( vserver Uses flavor, MANY2ONE)\n\n-FLAVOR cannot be deleted if related to HPA-CAPABILITY,VSERVER\n", 
      "properties": {
        "flavor-disabled": {
          "description": "Boolean as to whether this flavor is no longer enabled", 
          "type": "boolean"
        }, 
        "flavor-disk": {
          "description": "Disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-ephemeral": {
          "description": "Amount of ephemeral disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-id": {
          "description": "Flavor id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "flavor-is-public": {
          "description": "whether flavor is available to all users or private to the tenant it was created in.", 
          "type": "boolean"
        }, 
        "flavor-name": {
          "description": "Cloud Region Flavor name", 
          "type": "string"
        }, 
        "flavor-ram": {
          "description": "Amount of memory", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "flavor-swap": {
          "description": "amount of swap space allocation", 
          "type": "string"
        }, 
        "flavor-vcpus": {
          "description": "Number of CPUs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "hpa-capabilities": {
          "description": "List of flavor specific HPA Capabilities", 
          "items": {
            "$ref": "#/definitions/hpa-capability"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "flavor-id", 
        "flavor-name", 
        "flavor-selflink"
      ]
    }, 
    "flavors": {
      "description": "Collection of openstack flavors.\n", 
      "properties": {
        "flavor": {
          "items": {
            "$ref": "#/definitions/flavor"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarder": {
      "description": "Entity describing a sequenced segment of forwarding path\n###### Related Nodes\n- TO configuration( forwarder Uses configuration, ONE2ONE)(2)\n- TO forwarding-path (PARENT of forwarder, forwarder BelongsTo forwarding-path, MANY2ONE)(4)\n- TO generic-vnf( forwarder AppliesTo generic-vnf, MANY2MANY)\nPoints to the generic-vnf(s) involved in this forwarding step.\n- TO l-interface( forwarder ForwardsTo l-interface, MANY2MANY)\n- TO lag-interface( forwarder ForwardsTo lag-interface, MANY2MANY)\n- TO p-interface( forwarder ForwardsTo p-interface, MANY2MANY)\n\n-(2) IF this FORWARDER node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDER is DELETED also\n", 
      "properties": {
        "forwarder-role": {
          "description": "ingress, intermediate, egress", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "sequence": {
          "description": "Unique ID of this segmentation", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "sequence"
      ]
    }, 
    "forwarder-evc": {
      "description": "forwarder object is an optional child object of the Configuration object.\n###### Related Nodes\n- TO configuration (PARENT of forwarder-evc, forwarder-evc BelongsTo configuration, ONE2ONE)(4)\n- FROM vlan-mapping (CHILD of forwarder-evc, vlan-mapping BelongsTo forwarder-evc, MANY2ONE)(1)\n\n-(1) IF this FORWARDER-EVC node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDER-EVC is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit ID from customer/ESP/ingress end of EVC, or reference to beater circuit on gateway/network/egress end of EVC", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "CVLAN value for ingress of egress forwarder.", 
          "type": "string"
        }, 
        "forwarder-evc-id": {
          "description": "Key for forwarder-evc object", 
          "type": "string"
        }, 
        "ivlan": {
          "description": "Internal VLAN.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "svlan": {
          "description": "SVLAN value for ingress of egress forwarder.", 
          "type": "string"
        }, 
        "vlan-mappings": {
          "items": {
            "$ref": "#/definitions/vlan-mapping"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "forwarder-evc-id"
      ]
    }, 
    "forwarder-evcs": {
      "properties": {
        "forwarder-evc": {
          "items": {
            "$ref": "#/definitions/forwarder-evc"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarders": {
      "properties": {
        "forwarder": {
          "items": {
            "$ref": "#/definitions/forwarder"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarding-path": {
      "description": "Entity that describes the sequenced forwarding path between interfaces of services or resources\n###### Related Nodes\n- TO configuration( forwarding-path Uses configuration, ONE2ONE)(2)\n- TO service-instance( forwarding-path AppliesTo service-instance, MANY2ONE)(4)\n- FROM forwarder (CHILD of forwarding-path, forwarder BelongsTo forwarding-path, MANY2ONE)(1)\n\n-(1) IF this FORWARDING-PATH node is deleted, this FROM node is DELETED also\n-(2) IF this FORWARDING-PATH node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDING-PATH is DELETED also\n", 
      "properties": {
        "forwarders": {
          "items": {
            "$ref": "#/definitions/forwarder"
          }, 
          "type": "array"
        }, 
        "forwarding-path-id": {
          "description": "Unique ID of this FP", 
          "type": "string"
        }, 
        "forwarding-path-name": {
          "description": "Name of the FP", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "the self link for this FP", 
          "type": "string"
        }
      }, 
      "required": [
        "forwarding-path-id", 
        "forwarding-path-name"
      ]
    }, 
    "forwarding-paths": {
      "properties": {
        "forwarding-path": {
          "items": {
            "$ref": "#/definitions/forwarding-path"
          }, 
          "type": "array"
        }
      }
    }, 
    "generic-vnf": {
      "description": "General purpose VNF\n###### Related Nodes\n- TO availability-zone( generic-vnf Uses availability-zone, MANY2MANY)\n- TO cloud-region( generic-vnf LocatedIn cloud-region, MANY2ONE)\n- TO complex( generic-vnf LocatedIn complex, MANY2MANY)\n- TO configuration( generic-vnf Uses configuration, ONE2MANY)(2)\n- TO ctag-pool( generic-vnf Uses ctag-pool, MANY2MANY)\n- TO esr-vnfm( generic-vnf DependsOn esr-vnfm, MANY2ONE)\n- TO instance-group( generic-vnf MemberOf instance-group, MANY2MANY)\n- TO instance-group( generic-vnf Uses instance-group, ONE2MANY)\n- TO ipsec-configuration( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- TO l3-network( generic-vnf Uses l3-network, MANY2MANY)\n- TO nos-server( generic-vnf HostedOn nos-server, MANY2ONE)\n- TO pnf( generic-vnf HostedOn pnf, MANY2MANY)\n- TO pserver( generic-vnf HostedOn pserver, MANY2MANY)\n- TO tenant( generic-vnf BelongsTo tenant, MANY2ONE)\n- TO virtual-data-center( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- TO vnf-image( generic-vnf Uses vnf-image, MANY2ONE)\n- TO volume-group( generic-vnf DependsOn volume-group, ONE2MANY)\n- TO vserver( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM allotted-resource( allotted-resource PartOf generic-vnf, MANY2MANY)\n- FROM contact( contact supports generic-vnf, MANY2MANY)\n- FROM device( device Uses generic-vnf, ONE2MANY)\nFor CCVPN Usecase\n- FROM entitlement (CHILD of generic-vnf, entitlement BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM forwarder( forwarder AppliesTo generic-vnf, MANY2MANY)\nPoints to the generic-vnf(s) involved in this forwarding step.\n- FROM instance-group( instance-group BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM l-interface (CHILD of generic-vnf, l-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM lag-interface (CHILD of generic-vnf, lag-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM license (CHILD of generic-vnf, license BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM line-of-business( line-of-business Uses generic-vnf, MANY2MANY)\n- FROM logical-link( logical-link BridgedTo generic-vnf, MANY2MANY)\n- FROM network-profile( network-profile AppliesTo generic-vnf, MANY2MANY)\n- FROM platform( platform Uses generic-vnf, MANY2MANY)\n- FROM service-instance( service-instance ComposedOf generic-vnf, ONE2MANY)\n- FROM site-pair-set( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM vf-module (CHILD of generic-vnf, vf-module BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM vnfc( vnfc BelongsTo generic-vnf, MANY2ONE)(1)\n\n-(1) IF this GENERIC-VNF node is deleted, this FROM node is DELETED also\n-(2) IF this GENERIC-VNF node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "as-number": {
          "description": "as-number of the VNF", 
          "type": "string"
        }, 
        "encrypted-access-flag": {
          "description": "indicates whether generic-vnf access uses SSH", 
          "type": "boolean"
        }, 
        "entitlement-assignment-group-uuid": {
          "description": "UUID of the Entitlement group used for licensing VNFs, OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "entitlement-resource-uuid": {
          "description": "UUID of the specific entitlement resource.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "entitlements": {
          "items": {
            "$ref": "#/definitions/entitlement"
          }, 
          "type": "array"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by generic-vnf.", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Gateway address", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Prefix length for oam-address", 
          "format": "int32", 
          "type": "integer"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "job-id": {
          "description": "job id corresponding to vnf", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "license-assignment-group-uuid": {
          "description": "UUID of the license assignment group.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "license-key-uuid": {
          "description": "UUID of the actual license resource.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "licenses": {
          "items": {
            "$ref": "#/definitions/license"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "management-v6-address": {
          "description": "v6 management address", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "nf-function": {
          "description": "English description of Network function that the specific VNF deployment is providing", 
          "type": "string"
        }, 
        "nf-naming-code": {
          "description": "string assigned to this model used for naming purposes", 
          "type": "string"
        }, 
        "nf-role": {
          "description": "role in the network that this model will be providing", 
          "type": "string"
        }, 
        "nf-type": {
          "description": "Generic description of the type of NF", 
          "type": "string"
        }, 
        "nm-lan-v6-address": {
          "description": "v6 Loopback address", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Network Management profile of this VNF", 
          "type": "string"
        }, 
        "nnet": {
          "description": "number of network in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nshd": {
          "description": "number of associated SHD in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nvm": {
          "description": "number of vms in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.  Valid values are in-service-path and out-of-service-path.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, used by MSO.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-subzone": {
          "description": "represents sub zone of the rr plane", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not necessarily map to ASDC service models.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "summary-status": {
          "description": "details regarding the generic-vnf operation, PLEASE DISCONTINUE USE OF THIS FIELD.", 
          "type": "string"
        }, 
        "vcpu": {
          "description": "number of vcpus ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vcpu-units": {
          "description": "units associated with vcpu, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vdisk": {
          "description": "number of vdisks ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vdisk-units": {
          "description": "units associated with vdisk, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vf-modules": {
          "items": {
            "$ref": "#/definitions/vf-module"
          }, 
          "type": "array"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for S-TAG to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory": {
          "description": "number of GB of memory ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory-units": {
          "description": "units associated with vmemory, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vnf-discriptor-name": {
          "description": "vnf discriptor name", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-instance-id": {
          "description": "vnf instance id.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-package-name": {
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-type", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "generic-vnfs": {
      "description": "Collection of VNFs\n", 
      "properties": {
        "generic-vnf": {
          "items": {
            "$ref": "#/definitions/generic-vnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "group-assignment": {
      "description": "Openstack group-assignment used to store exclusivity groups (EG).\n###### Related Nodes\n- TO cloud-region (PARENT of group-assignment, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver MemberOf group-assignment, MANY2ONE)\n- FROM tenant( tenant MemberOf group-assignment, MANY2MANY)\n", 
      "properties": {
        "group-description": {
          "description": "Group description - description of the group", 
          "type": "string"
        }, 
        "group-id": {
          "description": "Group id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "group-name": {
          "description": "Group name - name assigned to the group", 
          "type": "string"
        }, 
        "group-type": {
          "description": "Group type - the type of group this instance refers to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "group-id", 
        "group-type", 
        "group-name"
      ]
    }, 
    "group-assignments": {
      "description": "Collection of openstack group assignments\n", 
      "properties": {
        "group-assignment": {
          "items": {
            "$ref": "#/definitions/group-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "host-route": {
      "description": "###### Related Nodes\n- TO subnet (PARENT of host-route, host-route BelongsTo subnet, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HOST-ROUTE is DELETED also\n", 
      "properties": {
        "host-route-id": {
          "description": "host-route id", 
          "type": "string"
        }, 
        "next-hop": {
          "description": "Could be ip-address, hostname, or service-instance", 
          "type": "string"
        }, 
        "next-hop-type": {
          "description": "Should be ip-address, hostname, or service-instance to match next-hop", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-prefix": {
          "description": "subnet prefix", 
          "type": "string"
        }
      }, 
      "required": [
        "host-route-id", 
        "route-prefix", 
        "next-hop"
      ]
    }, 
    "host-routes": {
      "properties": {
        "host-route": {
          "items": {
            "$ref": "#/definitions/host-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "hpa-capabilities": {
      "description": "Collection of HPA Capabilities\n", 
      "properties": {
        "hpa-capability": {
          "items": {
            "$ref": "#/definitions/hpa-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "hpa-capability": {
      "description": "Represents a HPA capability\n###### Related Nodes\n- TO cloud-region (PARENT of hpa-capability, hpa-capability BelongsTo cloud-region, MANY2ONE)\n- TO flavor (PARENT of hpa-capability, hpa-capability BelongsTo flavor, MANY2ONE)\n- FROM hpa-feature-attributes (CHILD of hpa-capability, hpa-feature-attributes BelongsTo hpa-capability, MANY2ONE)(1)\n\n-(1) IF this HPA-CAPABILITY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "architecture": {
          "description": "Hardware architecture", 
          "type": "string"
        }, 
        "hpa-capability-id": {
          "description": "UUID to uniquely identify a HPA capability", 
          "type": "string"
        }, 
        "hpa-feature": {
          "description": "Name of the HPACapability", 
          "type": "string"
        }, 
        "hpa-feature-attributes": {
          "items": {
            "$ref": "#/definitions/hpa-feature-attributes"
          }, 
          "type": "array"
        }, 
        "hpa-version": {
          "description": "HPA schema version", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-capability-id", 
        "hpa-feature"
      ]
    }, 
    "hpa-capacity": {
      "description": "HPA Capacity information for compute node\n###### Related Nodes\n- TO pserver (PARENT of hpa-capacity, hpa-capacity BelongsTo pserver, MANY2ONE)\nHPA Capacity KV for given compute node(4)\n\n-(4) IF this TO node is deleted, this HPA-CAPACITY is DELETED also\n", 
      "properties": {
        "hpa-capacity-key": {
          "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
          "type": "string"
        }, 
        "hpa-capacity-value": {
          "description": "JSON string specifying the capacity (total,free), unit and metadata of the specific HPA attribute", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-capacity-key"
      ]
    }, 
    "hpa-feature-attributes": {
      "description": "HPA Capability Feature attributes\n###### Related Nodes\n- TO hpa-capability (PARENT of hpa-feature-attributes, hpa-feature-attributes BelongsTo hpa-capability, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HPA-FEATURE-ATTRIBUTES is DELETED also\n", 
      "properties": {
        "hpa-attribute-key": {
          "description": "name of the specific HPA attribute", 
          "type": "string"
        }, 
        "hpa-attribute-value": {
          "description": "JSON string specifying the value, unit and type of the specific HPA attribute", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-attribute-key"
      ]
    }, 
    "image": {
      "description": "Openstack image.\n###### Related Nodes\n- TO cloud-region (PARENT of image, image BelongsTo cloud-region, MANY2ONE)\n- FROM metadatum (CHILD of image, metadatum BelongsTo image, MANY2ONE)(1)\n- FROM vserver( vserver Uses image, MANY2ONE)\n\n-(1) IF this IMAGE node is deleted, this FROM node is DELETED also\n-IMAGE cannot be deleted if related to VSERVER\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "image-architecture": {
          "description": "Operating system architecture.", 
          "type": "string"
        }, 
        "image-id": {
          "description": "Image id, expected to be unique across cloud region", 
          "type": "string"
        }, 
        "image-name": {
          "description": "Image name", 
          "type": "string"
        }, 
        "image-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "image-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "image-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "image-id", 
        "image-name", 
        "image-os-distro", 
        "image-os-version", 
        "image-selflink"
      ]
    }, 
    "images": {
      "description": "Collectio of Openstack images.\n", 
      "properties": {
        "image": {
          "items": {
            "$ref": "#/definitions/image"
          }, 
          "type": "array"
        }
      }
    }, 
    "include-node-filter": {
      "properties": {
        "include-node-type": {
          "type": "string"
        }
      }
    }, 
    "instance-filter": {
      "description": "InstanceFilter for performing a named-query or model query\n"
    }, 
    "instance-filters": {
      "description": "InstanceFilters for performing a named-query or model query\n", 
      "properties": {
        "instance-filter": {
          "items": {
            "$ref": "#/definitions/instance-filter"
          }, 
          "type": "array"
        }
      }
    }, 
    "instance-group": {
      "description": "General mechanism for grouping instances\n###### Related Nodes\n- TO collection( instance-group BelongsTo collection, ONE2ONE)\n- TO generic-vnf( instance-group BelongsTo generic-vnf, MANY2ONE)(4)\n- TO model( instance-group Targets model, MANY2MANY)\n- FROM allotted-resource( allotted-resource MemberOf instance-group, MANY2MANY)\n- FROM cloud-region( cloud-region Uses instance-group, ONE2MANY)\n- FROM generic-vnf( generic-vnf MemberOf instance-group, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses instance-group, ONE2MANY)\n- FROM l-interface( l-interface MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-network( l3-network MemberOf instance-group, MANY2MANY)\n- FROM pnf( pnf MemberOf instance-group, MANY2MANY)\n- FROM service-instance( service-instance Uses instance-group, ONE2MANY)\nMSO creates this edge on VNF Group Service creation\n- FROM service-instance( service-instance MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM vnfc( vnfc MemberOf instance-group, MANY2MANY)\n\n-(4) IF this TO node is deleted, this INSTANCE-GROUP is DELETED also\n", 
      "properties": {
        "description": {
          "description": "Descriptive text to help identify the usage of this instance-group", 
          "type": "string"
        }, 
        "id": {
          "description": "Instance Group ID, UUID assigned to this instance.", 
          "type": "string"
        }, 
        "instance-group-function": {
          "description": "Instance-Group Function", 
          "type": "string"
        }, 
        "instance-group-name": {
          "description": "Instance-Group Name.", 
          "type": "string"
        }, 
        "instance-group-role": {
          "description": "role of the instance group.", 
          "type": "string"
        }, 
        "instance-group-type": {
          "description": "Only valid value today is lower case ha for high availability", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "ASDC model version uid for this resource model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "instance-group-type"
      ]
    }, 
    "instance-groups": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "instance-group": {
          "items": {
            "$ref": "#/definitions/instance-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory": {
      "properties": {
        "business": {
          "$ref": "#/definitions/business", 
          "type": "object"
        }, 
        "cloud-infrastructure": {
          "$ref": "#/definitions/cloud-infrastructure", 
          "type": "object"
        }, 
        "common": {
          "$ref": "#/definitions/common", 
          "type": "object"
        }, 
        "external-system": {
          "$ref": "#/definitions/external-system", 
          "type": "object"
        }, 
        "network": {
          "$ref": "#/definitions/network", 
          "type": "object"
        }, 
        "service-design-and-creation": {
          "$ref": "#/definitions/service-design-and-creation", 
          "type": "object"
        }
      }
    }, 
    "inventory-item": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/definitions/inventory-item-data"
          }, 
          "type": "array"
        }, 
        "inventory-item-link": {
          "type": "string"
        }, 
        "inventory-item-type": {
          "type": "string"
        }, 
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/definitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory-item-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-item": {
      "description": "Inventory item for response list\n", 
      "properties": {
        "extra-properties": {
          "$ref": "#/definitions/extra-properties", 
          "type": "object"
        }, 
        "inventory-response-items": {
          "$ref": "#/definitions/inventory-response-items", 
          "type": "object"
        }, 
        "model-name": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-items": {
      "description": "Container for inventory items in response list\n", 
      "properties": {
        "inventory-response-item": {
          "items": {
            "$ref": "#/definitions/inventory-response-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "ipsec-configuration": {
      "description": "IPSec configuration node will contain various configuration data for the NMTE VNF. This node will have an edge to the generic-vnf (vnf type = TE). Starting 1607, this data will be populated by SDN-C\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- FROM vig-server (CHILD of ipsec-configuration, vig-server BelongsTo ipsec-configuration, MANY2ONE)(1)\n\n-(1) IF this IPSEC-CONFIGURATION node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "dpd-frequency": {
          "description": "Maximum number of DPD before claiming the tunnel is down", 
          "type": "string"
        }, 
        "dpd-interval": {
          "description": "The time between DPD probe", 
          "type": "string"
        }, 
        "ike-version": {
          "description": "can be 1 or 2", 
          "type": "string"
        }, 
        "ikev1-am-group-id": {
          "description": "Group name defined in VIG for clients using aggressive mode", 
          "type": "string"
        }, 
        "ikev1-am-password": {
          "description": "pre-shared key for the above group name", 
          "type": "string"
        }, 
        "ikev1-authentication": {
          "description": "Contains values like md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ikev1-dh-group": {
          "description": "Diffie-Hellman group like DH-GROUP2, DH-GROUP5, DH-GROUP14", 
          "type": "string"
        }, 
        "ikev1-encryption": {
          "description": "Encyption values like 3des-cbc, des-cbc, aes-128-cbc,\u00c2\u00a0aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ikev1-sa-lifetime": {
          "description": "Lifetime for IKEv1 SA", 
          "type": "string"
        }, 
        "ipsec-authentication": {
          "description": "md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ipsec-configuration-id": {
          "description": "UUID of this configuration", 
          "type": "string"
        }, 
        "ipsec-encryption": {
          "description": "3des-cbc, des-cbc, aes-128-cbc,\u00c2\u00a0aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ipsec-pfs": {
          "description": "enable PFS or not", 
          "type": "string"
        }, 
        "ipsec-sa-lifetime": {
          "description": "Life time for IPSec SA", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "requested-customer-name": {
          "description": "If the DMZ is a custom DMZ, this field will indicate the customer information", 
          "type": "string"
        }, 
        "requested-dmz-type": {
          "description": "ATT can offer a shared DMZ or a DMZ specific to a customer", 
          "type": "string"
        }, 
        "requested-encryption-strength": {
          "description": "Encryption values like 3des-cbc, des-cbc, aes-128-cbc, aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "requested-vig-address-type": {
          "description": "Indicate the type of VIG server like AVPN, INTERNET, BOTH", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "shared-dmz-network-address": {
          "description": "Network address of shared DMZ", 
          "type": "string"
        }, 
        "vig-servers": {
          "items": {
            "$ref": "#/definitions/vig-server"
          }, 
          "type": "array"
        }, 
        "xauth-user-password": {
          "description": "Encrypted using the Juniper $9$ algorithm", 
          "type": "string"
        }, 
        "xauth-userid": {
          "description": "user ID for xAuth, sm-user,ucpeHostName,nmteHostName", 
          "type": "string"
        }
      }, 
      "required": [
        "ipsec-configuration-id"
      ]
    }, 
    "ipsec-configurations": {
      "properties": {
        "ipsec-configuration": {
          "items": {
            "$ref": "#/definitions/ipsec-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "key-data": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "l-interface": {
      "description": "Logical interfaces, e.g., a vnic.\n###### Related Nodes\n- TO cp( l-interface LinksTo cp, ONE2ONE)\n- TO generic-vnf (PARENT of l-interface, l-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( l-interface MemberOf instance-group, MANY2MANY)\n- TO l-interface( l-interface BelongsTo l-interface, MANY2ONE)(4)\n- TO logical-link( l-interface LinksTo logical-link, MANY2MANY)(2)\n- TO newvce (PARENT of l-interface, l-interface BelongsTo newvce, MANY2ONE)(4)\n- TO p-interface (PARENT of l-interface, l-interface BindsTo p-interface, MANY2ONE)(4)\n- TO vserver (PARENT of l-interface, l-interface BindsTo vserver, MANY2ONE)(4)\n- TO lag-interface (PARENT of l-interface, l-interface BelongsTo lag-interface, MANY2ONE)(4)\n- FROM allotted-resource( allotted-resource Uses l-interface, ONE2MANY)\n- FROM configuration( configuration AppliesTo l-interface, ONE2MANY)\n- FROM forwarder( forwarder ForwardsTo l-interface, MANY2MANY)\n- FROM l-interface (PARENT of l-interface, l-interface BelongsTo l-interface, MANY2ONE)(4)\n- FROM logical-link( logical-link Source l-interface, MANY2MANY)(1)\n- FROM logical-link( logical-link Destination l-interface, MANY2MANY)(1)\n- FROM sriov-vf (CHILD of l-interface, sriov-vf BelongsTo l-interface, ONE2ONE)(1)\n- FROM vlan (CHILD of l-interface, vlan LinksTo l-interface, MANY2ONE)(1)\n- FROM vrf( vrf Uses l-interface, ONE2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of l-interface, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of l-interface, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses l-interface, ONE2MANY)\n\n-(1) IF this L-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this L-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this L-INTERFACE is DELETED also\n", 
      "properties": {
        "admin-status": {
          "description": "Administrative status of the interface. Valid values are 'up', 'down', or 'testing'.", 
          "type": "string"
        }, 
        "allowed-address-pairs": {
          "description": "Freeform field for storing an ip address, list of ip addresses or a subnet block.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name given to the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "E.g., CUSTOMER, UPLINK, etc.", 
          "type": "string"
        }, 
        "is-ip-unnumbered": {
          "description": "Flag indicating the interface uses the IP Unnumbered configuration.", 
          "type": "boolean"
        }, 
        "is-port-mirrored": {
          "description": "boolean indicatating whether or not port is a mirrored.", 
          "type": "boolean"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "macaddr": {
          "description": "MAC address for the interface", 
          "type": "string"
        }, 
        "management-option": {
          "description": "Whether A&AI should be managing this interface of not. Could have value like CUSTOMER", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network", 
          "type": "string"
        }, 
        "priority": {
          "description": "Priority used for fail-over. Valid values 1-1024, with 1 being the highest priority.", 
          "format": "int32", 
          "type": "integer"
        }, 
        "prov-status": {
          "description": "Prov Status of the logical interface. Valid values [PREPROV/NVTPROV/PROV].", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "sriov-vfs": {
          "items": {
            "$ref": "#/definitions/sriov-vf"
          }, 
          "type": "array"
        }, 
        "v6-wan-link-ip": {
          "description": "Questionably placed - v6 ip addr of this interface (is in vr-lan-interface from Mary B.", 
          "type": "string"
        }, 
        "vlans": {
          "items": {
            "$ref": "#/definitions/vlan"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "interface-name", 
        "is-port-mirrored", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "l-interfaces": {
      "description": "Collection of logical interfaces.\n", 
      "properties": {
        "l-interface": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "l3-interface-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cp (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo cp, MANY2ONE)(4)\n- TO instance-group( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV4-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv4-address"
      ]
    }, 
    "l3-interface-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cp (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo cp, MANY2ONE)(4)\n- TO instance-group( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV6-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv6-address"
      ]
    }, 
    "l3-network": {
      "description": "Generic network definition\n###### Related Nodes\n- TO cp( l3-network LinksTo cp, MANY2MANY)\n- TO instance-group( l3-network MemberOf instance-group, MANY2MANY)\n- TO l3-network( l3-network Uses l3-network, MANY2MANY)\n- TO network-policy( l3-network Uses network-policy, MANY2MANY)\n- TO route-table-reference( l3-network Uses route-table-reference, MANY2MANY)\n- TO vpn-binding( l3-network Uses vpn-binding, MANY2MANY)\n- FROM aggregate-route (CHILD of l3-network, aggregate-route BelongsTo l3-network, MANY2ONE)(1)\n- FROM allotted-resource( allotted-resource PartOf l3-network, MANY2MANY)\n- FROM cloud-region( cloud-region Uses l3-network, MANY2MANY)\n- FROM complex( complex Uses l3-network, MANY2MANY)\n- FROM configuration( configuration PartOf l3-network, MANY2MANY)\n- FROM ctag-assignment (CHILD of l3-network, ctag-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf Uses l3-network, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-network( l3-network Uses l3-network, MANY2MANY)\n- FROM line-of-business( line-of-business Uses l3-network, MANY2MANY)\n- FROM platform( platform Uses l3-network, MANY2MANY)\n- FROM segmentation-assignment (CHILD of l3-network, segmentation-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf l3-network, ONE2MANY)\n- FROM subnet (CHILD of l3-network, subnet BelongsTo l3-network, MANY2ONE)(1)\n- FROM tenant( tenant Uses l3-network, MANY2MANY)\n- FROM vf-module( vf-module DependsOn l3-network, MANY2MANY)\n- FROM vlan-tag( vlan-tag BelongsTo l3-network, MANY2MANY)\n- FROM vrf( vrf Uses l3-network, ONE2MANY)\nA vrf uses many l3-networks\n\n-(1) IF this L3-NETWORK node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "aggregate-routes": {
          "items": {
            "$ref": "#/definitions/aggregate-route"
          }, 
          "type": "array"
        }, 
        "contrail-network-fqdn": {
          "description": "Contrail FQDN for the network", 
          "type": "string"
        }, 
        "ctag-assignments": {
          "items": {
            "$ref": "#/definitions/ctag-assignment"
          }, 
          "type": "array"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "is-bound-to-vpn": {
          "description": "Set to true if bound to VPN", 
          "type": "boolean"
        }, 
        "is-external-network": {
          "description": "boolean indicatating whether or not network is an external network.", 
          "type": "boolean"
        }, 
        "is-provider-network": {
          "description": "boolean indicatating whether or not network is a provider network.", 
          "type": "boolean"
        }, 
        "is-shared-network": {
          "description": "boolean indicatating whether or not network is a shared network.", 
          "type": "boolean"
        }, 
        "is-trunked": {
          "description": "Trunked network indication.", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "network-id": {
          "description": "Network ID, should be uuid. Unique across A&AI.", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network, governed by some naming convention..", 
          "type": "string"
        }, 
        "network-role": {
          "description": "Role the network plans - who defines these values?", 
          "type": "string"
        }, 
        "network-role-instance": {
          "description": "network role instance", 
          "format": "int64", 
          "type": "integer"
        }, 
        "network-technology": {
          "description": "Network technology - who defines these values?", 
          "type": "string"
        }, 
        "network-type": {
          "description": "Type of the network - who defines these values?", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "physical-network-name": {
          "description": "Name associated with the physical network.", 
          "type": "string"
        }, 
        "relationship-list": {
          "description": "Relates to tenant (or is it a child of tenant), complex, service, vpn-binding", 
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "segmentation-assignments": {
          "items": {
            "$ref": "#/definitions/segmentation-assignment"
          }, 
          "type": "array"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service from ASDC.  Does not strictly map to ASDC services.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "subnets": {
          "items": {
            "$ref": "#/definitions/subnet"
          }, 
          "type": "array"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id", 
        "is-bound-to-vpn", 
        "is-provider-network", 
        "is-shared-network", 
        "is-external-network"
      ]
    }, 
    "l3-networks": {
      "properties": {
        "l3-network": {
          "items": {
            "$ref": "#/definitions/l3-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-interface": {
      "description": "Link aggregate interface\n###### Related Nodes\n- TO generic-vnf (PARENT of lag-interface, lag-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l-interface( lag-interface Uses l-interface, ONE2MANY)\n- TO lag-link( lag-interface LinksTo lag-link, MANY2MANY)(2)\n- TO logical-link( lag-interface Uses logical-link, MANY2MANY)(2)\n- TO p-interface( lag-interface Uses p-interface, MANY2MANY)\n- TO pnf (PARENT of lag-interface, lag-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of lag-interface, lag-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of lag-interface, lag-interface BindsTo vpls-pe, MANY2ONE)(4)\n- FROM forwarder( forwarder ForwardsTo lag-interface, MANY2MANY)\n- FROM l-interface (CHILD of lag-interface, l-interface BelongsTo lag-interface, MANY2ONE)(1)\n\n-(1) IF this LAG-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this LAG-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this LAG-INTERFACE is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name that identifies the link aggregate interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "lag-interfaces": {
      "description": "Collection of link aggregate interfaces.\n", 
      "properties": {
        "lag-interface": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-link": {
      "description": "LAG links can connect lag-interfaces\n###### Related Nodes\n- FROM lag-interface( lag-interface LinksTo lag-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses lag-link, MANY2MANY)\n\n-(3) IF this FROM node is deleted, this LAG-LINK is DELETED also\n", 
      "properties": {
        "link-name": {
          "description": "Alphabetical concatenation of lag-interface names", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "lag-links": {
      "description": "Collection of link aggregation connections\n", 
      "properties": {
        "lag-link": {
          "items": {
            "$ref": "#/definitions/lag-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "lan-port-config": {
      "description": "Instance of a lan-port-config\n###### Related Nodes\n- TO dhcp-service (PARENT of lan-port-config, lan-port-config Uses dhcp-service, ONE2MANY)\nFor CCVPN Usecase(2)\n- TO ext-aai-network( lan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( lan-port-config PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n\n-(2) IF this LAN-PORT-CONFIG node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "description": {
          "description": "Store the description of this lan-port-config.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Store the device-id of this lan-port-config.", 
          "type": "string"
        }, 
        "dhcp-services": {
          "items": {
            "$ref": "#/definitions/dhcp-service"
          }, 
          "type": "array"
        }, 
        "input-bandwidth": {
          "description": "Store the input-bandwidth of this lan-port-config.", 
          "type": "string"
        }, 
        "ipv4-address": {
          "description": "Store the ipv4-address of this lan-port-config.", 
          "type": "string"
        }, 
        "ipv6-address": {
          "description": "Store the ipv6-address of this lan-port-config.", 
          "type": "string"
        }, 
        "lan-port-config-id": {
          "description": "Uniquely identifies this lan-port-config by id", 
          "type": "string"
        }, 
        "lan-port-config-name": {
          "description": "Store the name of this lan-port-config.", 
          "type": "string"
        }, 
        "output-bandwidth": {
          "description": "Store the output-bandwidth of this lan-port-config.", 
          "type": "string"
        }, 
        "port-id": {
          "description": "Store the port-id of this lan-port-config.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-tag": {
          "description": "Store the vlan-tag of this lan-port-config.", 
          "type": "string"
        }
      }, 
      "required": [
        "lan-port-config-id"
      ]
    }, 
    "lan-port-configs": {
      "description": "Collection of lan-port-configs\n", 
      "properties": {
        "lan-port-config": {
          "items": {
            "$ref": "#/definitions/lan-port-config"
          }, 
          "type": "array"
        }
      }
    }, 
    "license": {
      "description": "Metadata for license group.\n###### Related Nodes\n- TO generic-vnf (PARENT of license, license BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of license, license BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this LICENSE is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-uuid": {
          "description": "Unique ID of a license resource.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "licenses": {
      "description": "Licenses to be allocated across resources, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "license": {
          "items": {
            "$ref": "#/definitions/license"
          }, 
          "type": "array"
        }
      }
    }, 
    "line-of-business": {
      "description": "describes a line-of-business\n###### Related Nodes\n- TO generic-vnf( line-of-business Uses generic-vnf, MANY2MANY)\n- TO l3-network( line-of-business Uses l3-network, MANY2MANY)\n", 
      "properties": {
        "line-of-business-name": {
          "description": "Name of the line-of-business (product)", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "line-of-business-name"
      ]
    }, 
    "lines-of-business": {
      "description": "Collection of lines-of-business\n", 
      "properties": {
        "line-of-business": {
          "items": {
            "$ref": "#/definitions/line-of-business"
          }, 
          "type": "array"
        }
      }
    }, 
    "logical-link": {
      "description": "Logical links generally connect l-interfaces but are used to express logical connectivity between two points\n###### Related Nodes\n- TO cloud-region( logical-link LocatedIn cloud-region, MANY2MANY)\n- TO ext-aai-network( logical-link BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO generic-vnf( logical-link BridgedTo generic-vnf, MANY2MANY)\n- TO l-interface( logical-link Source l-interface, MANY2MANY)(4)\n- TO l-interface( logical-link Destination l-interface, MANY2MANY)(4)\n- TO lag-link( logical-link Uses lag-link, MANY2MANY)\n- TO logical-link( logical-link Uses logical-link, MANY2MANY)\n- TO pnf( logical-link BridgedTo pnf, MANY2MANY)\n- TO pserver( logical-link BridgedTo pserver, MANY2MANY)\n- TO virtual-data-center( logical-link LocatedIn virtual-data-center, MANY2MANY)\n- TO vpn-binding( logical-link Uses vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses logical-link, ONE2MANY)(3)\n- FROM l-interface( l-interface LinksTo logical-link, MANY2MANY)(3)\n- FROM lag-interface( lag-interface Uses logical-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses logical-link, MANY2MANY)\n- FROM p-interface( p-interface LinksTo logical-link, MANY2ONE)\n- FROM service-instance( service-instance Uses logical-link, MANY2MANY)(3)\n- FROM vlan( vlan Uses logical-link, MANY2MANY)(3)\n\n-(3) IF this FROM node is deleted, this LOGICAL-LINK is DELETED also\n-(4) IF this TO node is deleted, this LOGICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit id", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ip-version": {
          "description": "v4, v6, or ds for dual stack", 
          "type": "string"
        }, 
        "link-id": {
          "description": "UUID of the logical-link, SDNC generates this.", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
          "type": "string"
        }, 
        "link-name2": {
          "description": "Alias or alternate name (CLCI or D1 name).", 
          "type": "string"
        }, 
        "link-role": {
          "description": "Indication of the network use of the logical link.", 
          "type": "string"
        }, 
        "link-type": {
          "description": "Type of logical link, e.g., evc", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indication of operational status of the logical link.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "purpose": {
          "description": "Reason for this entity, role it is playing", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-protocol": {
          "description": "For example, static or BGP", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name", 
        "in-maint", 
        "link-type"
      ]
    }, 
    "logical-links": {
      "description": "Collection of logical connections\n", 
      "properties": {
        "logical-link": {
          "items": {
            "$ref": "#/definitions/logical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadata": {
      "description": "Collection of metadatum (key/value pairs)\n", 
      "properties": {
        "metadatum": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadatum": {
      "description": "Key/value pairs\n###### Related Nodes\n- TO configuration (PARENT of metadatum, metadatum BelongsTo configuration, MANY2ONE)(4)\n- TO connector (PARENT of metadatum, metadatum BelongsTo connector, MANY2ONE)(4)\n- TO image (PARENT of metadatum, metadatum BelongsTo image, MANY2ONE)(4)\n- TO model-ver (PARENT of metadatum, metadatum BelongsTo model-ver, MANY2ONE)(4)\n- TO service-instance (PARENT of metadatum, metadatum BelongsTo service-instance, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this METADATUM is DELETED also\n", 
      "properties": {
        "metaname": {
          "type": "string"
        }, 
        "metaval": {
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "metaname", 
        "metaval"
      ]
    }, 
    "model": {
      "description": "Subgraph definition provided by ASDC to describe an inventory asset and its connections related to ASDC models, independent of version\n###### Related Nodes\n- FROM instance-group( instance-group Targets model, MANY2MANY)\n- FROM model-ver (CHILD of model, model-ver BelongsTo model, MANY2ONE)(1)\n- FROM named-query( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element( named-query-element IsA model, MANY2ONE)\n\n-(1) IF this MODEL node is deleted, this FROM node is DELETED also\n-MODEL cannot be deleted if related to INSTANCE-GROUP,NAMED-QUERY,NAMED-QUERY-ELEMENT\n", 
      "properties": {
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-vers": {
          "items": {
            "$ref": "#/definitions/model-ver"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-type"
      ]
    }, 
    "model-and-named-query-search": {
      "description": "ModelAndNamedQuerySearch holds query-parameters and instance-properties for performing a named-query or model query\n", 
      "properties": {
        "instance-filters": {
          "$ref": "#/definitions/instance-filters", 
          "type": "object"
        }, 
        "query-parameters": {
          "$ref": "#/definitions/query-parameters", 
          "type": "object"
        }, 
        "secondary-filter-cut-point": {
          "type": "string"
        }, 
        "secondary-filts": {
          "$ref": "#/definitions/secondary-filts", 
          "type": "object"
        }, 
        "top-node-type": {
          "type": "string"
        }
      }
    }, 
    "model-constraint": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-element (PARENT of model-constraint, model-constraint BelongsTo model-element, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-constraint, constrained-element-set BelongsTo model-constraint, MANY2ONE)(1)\n\n-(1) IF this MODEL-CONSTRAINT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constrained-element-set-uuid-to-replace": {
          "type": "string"
        }, 
        "constrained-element-sets": {
          "items": {
            "$ref": "#/definitions/constrained-element-set"
          }, 
          "type": "array"
        }, 
        "model-constraint-uuid": {
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-constraint-uuid", 
        "constrained-element-set-uuid-to-replace"
      ]
    }, 
    "model-constraints": {
      "properties": {
        "model-constraint": {
          "items": {
            "$ref": "#/definitions/model-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-element": {
      "description": "Defines how other models combine to make up a higher-level model.\n###### Related Nodes\n- TO element-choice-set (PARENT of model-element, model-element BelongsTo element-choice-set, MANY2ONE)(4)\n- TO model-element( model-element BelongsTo model-element, MANY2ONE)(4)\n- TO model-ver( model-element IsA model-ver, MANY2ONE)\n- TO model-ver (PARENT of model-element, model-element BelongsTo model-ver, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-element, constrained-element-set BelongsTo model-element, MANY2ONE)(1)\n- FROM model-constraint (CHILD of model-element, model-constraint BelongsTo model-element, MANY2ONE)(1)\n- FROM model-element (PARENT of model-element, model-element BelongsTo model-element, MANY2ONE)(4)\n\n-(1) IF this MODEL-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-ELEMENT is DELETED also\n", 
      "properties": {
        "cardinality": {
          "description": "How many of this type of element are required/allowed", 
          "type": "string"
        }, 
        "linkage-points": {
          "type": "string"
        }, 
        "model-constraints": {
          "description": "Describes new constraints on this model element that are not part of that model's definition", 
          "items": {
            "$ref": "#/definitions/model-constraint"
          }, 
          "type": "array"
        }, 
        "model-element-uuid": {
          "type": "string"
        }, 
        "model-elements": {
          "description": "Defines how other models combine to make up a higher-level model", 
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }, 
        "new-data-del-flag": {
          "description": "Indicates whether this element was created as part of instantiation from this model", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-element-uuid", 
        "new-data-del-flag", 
        "cardinality"
      ]
    }, 
    "model-elements": {
      "properties": {
        "model-element": {
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-ver": {
      "description": "Subgraph definition provided by ASDC to describe a specific version of an inventory asset and its connections related to ASDC models\n###### Related Nodes\n- TO model (PARENT of model-ver, model-ver BelongsTo model, MANY2ONE)(4)\n- FROM metadatum (CHILD of model-ver, metadatum BelongsTo model-ver, MANY2ONE)(1)\n- FROM model-element( model-element IsA model-ver, MANY2ONE)\n- FROM model-element (CHILD of model-ver, model-element BelongsTo model-ver, MANY2ONE)(1)\n\n-(1) IF this MODEL-VER node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-VER is DELETED also\n-MODEL-VER cannot be deleted if related to MODEL-ELEMENT\n", 
      "properties": {
        "distribution-status": {
          "description": "Distribution Status", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-elements": {
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "model-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-version-id", 
        "model-name", 
        "model-version"
      ]
    }, 
    "model-vers": {
      "properties": {
        "model-ver": {
          "items": {
            "$ref": "#/definitions/model-ver"
          }, 
          "type": "array"
        }
      }
    }, 
    "models": {
      "description": "Collection of subgraph definitions provided by ASDC to describe the inventory assets and their connections related to ASDC models\n", 
      "properties": {
        "model": {
          "items": {
            "$ref": "#/definitions/model"
          }, 
          "type": "array"
        }
      }
    }, 
    "multicast-configuration": {
      "description": "###### Related Nodes\n- FROM vlan( vlan Uses multicast-configuration, MANY2MANY)\n", 
      "properties": {
        "multicast-configuration-id": {
          "description": "Unique id of multicast configuration.", 
          "type": "string"
        }, 
        "multicast-protocol": {
          "description": "protocol of multicast configuration", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "rp-type": {
          "description": "rp type of multicast configuration", 
          "type": "string"
        }
      }, 
      "required": [
        "multicast-configuration-id", 
        "multicast-protocol", 
        "rp-type"
      ]
    }, 
    "multicast-configurations": {
      "description": "multicast configuration of generic-vnf ip-address\n", 
      "properties": {
        "multicast-configuration": {
          "items": {
            "$ref": "#/definitions/multicast-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-queries": {
      "properties": {
        "named-query": {
          "items": {
            "$ref": "#/definitions/named-query"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-query": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element (CHILD of named-query, named-query-element BelongsTo named-query, ONE2ONE)(1)\n\n-(1) IF this NAMED-QUERY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "description": {
          "type": "string"
        }, 
        "named-query-elements": {
          "items": {
            "$ref": "#/definitions/named-query-element"
          }, 
          "type": "array"
        }, 
        "named-query-name": {
          "type": "string"
        }, 
        "named-query-uuid": {
          "type": "string"
        }, 
        "named-query-version": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "required-input-param": {
          "type": "string"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-uuid", 
        "named-query-name", 
        "named-query-version"
      ]
    }, 
    "named-query-element": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query-element IsA model, MANY2ONE)\n- TO named-query-element( named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- TO named-query (PARENT of named-query-element, named-query-element BelongsTo named-query, ONE2ONE)(4)\n- FROM named-query-element (PARENT of named-query-element, named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- FROM property-constraint (CHILD of named-query-element, property-constraint BelongsTo named-query-element, MANY2ONE)(1)\n- FROM related-lookup (CHILD of named-query-element, related-lookup BelongsTo named-query-element, MANY2ONE)(1)\n\n-(1) IF this NAMED-QUERY-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this NAMED-QUERY-ELEMENT is DELETED also\n", 
      "properties": {
        "do-not-output": {
          "type": "string"
        }, 
        "named-query-element-uuid": {
          "type": "string"
        }, 
        "named-query-elements": {
          "items": {
            "$ref": "#/definitions/named-query-element"
          }, 
          "type": "array"
        }, 
        "property-collect-list": {
          "type": "string"
        }, 
        "property-constraints": {
          "items": {
            "$ref": "#/definitions/property-constraint"
          }, 
          "type": "array"
        }, 
        "property-limit-desc": {
          "type": "string"
        }, 
        "related-lookups": {
          "items": {
            "$ref": "#/definitions/related-lookup"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-element-uuid"
      ]
    }, 
    "named-query-elements": {
      "properties": {
        "named-query-element": {
          "items": {
            "$ref": "#/definitions/named-query-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "network": {
      "description": "Namespace for network inventory resources.\n", 
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/definitions/collection"
          }, 
          "type": "array"
        }, 
        "configurations": {
          "items": {
            "$ref": "#/definitions/configuration"
          }, 
          "type": "array"
        }, 
        "connectivities": {
          "items": {
            "$ref": "#/definitions/connectivity"
          }, 
          "type": "array"
        }, 
        "devices": {
          "items": {
            "$ref": "#/definitions/device"
          }, 
          "type": "array"
        }, 
        "ext-aai-networks": {
          "items": {
            "$ref": "#/definitions/ext-aai-network"
          }, 
          "type": "array"
        }, 
        "forwarding-paths": {
          "items": {
            "$ref": "#/definitions/forwarding-path"
          }, 
          "type": "array"
        }, 
        "generic-vnfs": {
          "items": {
            "$ref": "#/definitions/generic-vnf"
          }, 
          "type": "array"
        }, 
        "instance-groups": {
          "items": {
            "$ref": "#/definitions/instance-group"
          }, 
          "type": "array"
        }, 
        "ipsec-configurations": {
          "items": {
            "$ref": "#/definitions/ipsec-configuration"
          }, 
          "type": "array"
        }, 
        "l3-networks": {
          "items": {
            "$ref": "#/definitions/l3-network"
          }, 
          "type": "array"
        }, 
        "lag-links": {
          "items": {
            "$ref": "#/definitions/lag-link"
          }, 
          "type": "array"
        }, 
        "lan-port-configs": {
          "items": {
            "$ref": "#/definitions/lan-port-config"
          }, 
          "type": "array"
        }, 
        "logical-links": {
          "items": {
            "$ref": "#/definitions/logical-link"
          }, 
          "type": "array"
        }, 
        "multicast-configurations": {
          "items": {
            "$ref": "#/definitions/multicast-configuration"
          }, 
          "type": "array"
        }, 
        "network-policies": {
          "items": {
            "$ref": "#/definitions/network-policy"
          }, 
          "type": "array"
        }, 
        "network-resources": {
          "items": {
            "$ref": "#/definitions/network-resource"
          }, 
          "type": "array"
        }, 
        "newvces": {
          "items": {
            "$ref": "#/definitions/newvce"
          }, 
          "type": "array"
        }, 
        "physical-links": {
          "items": {
            "$ref": "#/definitions/physical-link"
          }, 
          "type": "array"
        }, 
        "pnfs": {
          "items": {
            "$ref": "#/definitions/pnf"
          }, 
          "type": "array"
        }, 
        "route-table-references": {
          "items": {
            "$ref": "#/definitions/route-table-reference"
          }, 
          "type": "array"
        }, 
        "sdwan-vpns": {
          "items": {
            "$ref": "#/definitions/sdwan-vpn"
          }, 
          "type": "array"
        }, 
        "site-pair-sets": {
          "items": {
            "$ref": "#/definitions/site-pair-set"
          }, 
          "type": "array"
        }, 
        "site-resources": {
          "items": {
            "$ref": "#/definitions/site-resource"
          }, 
          "type": "array"
        }, 
        "vces": {
          "items": {
            "$ref": "#/definitions/vce"
          }, 
          "type": "array"
        }, 
        "vlan-tags": {
          "items": {
            "$ref": "#/definitions/vlan-tag"
          }, 
          "type": "array"
        }, 
        "vnfcs": {
          "items": {
            "$ref": "#/definitions/vnfc"
          }, 
          "type": "array"
        }, 
        "vpls-pes": {
          "items": {
            "$ref": "#/definitions/vpls-pe"
          }, 
          "type": "array"
        }, 
        "vpn-bindings": {
          "items": {
            "$ref": "#/definitions/vpn-binding"
          }, 
          "type": "array"
        }, 
        "wan-port-configs": {
          "items": {
            "$ref": "#/definitions/wan-port-config"
          }, 
          "type": "array"
        }, 
        "zones": {
          "items": {
            "$ref": "#/definitions/zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policies": {
      "properties": {
        "network-policy": {
          "items": {
            "$ref": "#/definitions/network-policy"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policy": {
      "description": "###### Related Nodes\n- FROM allotted-resource( allotted-resource Uses network-policy, ONE2ONE)\n- FROM l3-network( l3-network Uses network-policy, MANY2MANY)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "ID for the openStack Heat instance", 
          "type": "string"
        }, 
        "network-policy-fqdn": {
          "description": "Contrail FQDN for the policy", 
          "type": "string"
        }, 
        "network-policy-id": {
          "description": "UUID representing unique key to this instance", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-policy-id"
      ]
    }, 
    "network-profile": {
      "description": "Network profile populated by SDN-GP for SNMP\n###### Related Nodes\n- TO generic-vnf( network-profile AppliesTo generic-vnf, MANY2MANY)\n", 
      "properties": {
        "community-string": {
          "description": "Encrypted SNMP community string", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Unique name of network profile.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "nm-profile-name"
      ]
    }, 
    "network-profiles": {
      "description": "Collection of network profiles\n", 
      "properties": {
        "network-profile": {
          "items": {
            "$ref": "#/definitions/network-profile"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-resource": {
      "description": "Instance of a network-resource\n###### Related Nodes\n- TO ext-aai-network( network-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( network-resource Uses vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM pnf( pnf LinksTo network-resource, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "client-id": {
          "description": "Store the id of the client of this network-resource.", 
          "type": "string"
        }, 
        "network-id": {
          "description": "Uniquely identifies this network-resource by id", 
          "type": "string"
        }, 
        "provider-id": {
          "description": "Store the id of the provider of this network-resource.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "te-topo-id": {
          "description": "Store the id of the te-topo of this network-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id"
      ]
    }, 
    "network-resources": {
      "description": "Collection of network-resources\n", 
      "properties": {
        "network-resource": {
          "items": {
            "$ref": "#/definitions/network-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-technologies": {
      "description": "The network-technology object is used to capture the supported network technologies of a cloud-region.\n", 
      "properties": {
        "network-technology": {
          "items": {
            "$ref": "#/definitions/network-technology"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-technology": {
      "description": "The network-technology object is used to capture the supported network technologies of a cloud-region.\n###### Related Nodes\n- FROM cloud-region( cloud-region Uses network-technology, MANY2MANY)\n", 
      "properties": {
        "network-technology-id": {
          "description": "Unique identifier of the network-technology object (UUID)", 
          "type": "string"
        }, 
        "network-technology-name": {
          "description": "The network-technology  that a cloud-region can support. Current valid values- CONTRAIL AIC_SR_IOV OVS STANDARD-SR-IOV", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-technology-id", 
        "network-technology-name"
      ]
    }, 
    "newvce": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n###### Related Nodes\n- FROM l-interface (CHILD of newvce, l-interface BelongsTo newvce, MANY2ONE)(1)\n\n-(1) IF this NEWVCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-role": {
          "description": "Client should send valid enumerated value.", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vnf-id2": {
          "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id2", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "newvces": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n", 
      "properties": {
        "newvce": {
          "items": {
            "$ref": "#/definitions/newvce"
          }, 
          "type": "array"
        }
      }
    }, 
    "nodes": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/definitions/inventory-item-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "nos-server": {
      "description": "nos-server is the execution environment that will have images, certain versions of VNOS, running on it.\n###### Related Nodes\n- TO pserver( nos-server HostedOn pserver, ONE2ONE)\n- TO tenant (PARENT of nos-server, nos-server BelongsTo tenant, MANY2ONE)\n- FROM generic-vnf( generic-vnf HostedOn nos-server, MANY2ONE)\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "nos-server-id": {
          "description": "Unique identifier for this nos relative to its tenant", 
          "type": "string"
        }, 
        "nos-server-name": {
          "description": "Name of nos", 
          "type": "string"
        }, 
        "nos-server-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "uCPE vendor", 
          "type": "string"
        }
      }, 
      "required": [
        "nos-server-id", 
        "nos-server-name", 
        "vendor", 
        "nos-server-selflink", 
        "in-maint"
      ]
    }, 
    "nos-servers": {
      "description": "nos-server is the execution environment that will have images, certain versions of VNOS, running on it.\n", 
      "properties": {
        "nos-server": {
          "items": {
            "$ref": "#/definitions/nos-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "notification-event": {
      "properties": {
        "cambria.partition": {
          "type": "string"
        }, 
        "notification-event-header": {
          "$ref": "#/definitions/notification-event-header", 
          "type": "object"
        }
      }
    }, 
    "notification-event-header": {
      "properties": {
        "action": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "entity-link": {
          "type": "string"
        }, 
        "entity-type": {
          "type": "string"
        }, 
        "event-type": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "sequence-number": {
          "type": "string"
        }, 
        "severity": {
          "type": "string"
        }, 
        "source-name": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "timestamp": {
          "type": "string"
        }, 
        "top-entity-type": {
          "type": "string"
        }, 
        "version": {
          "type": "string"
        }
      }
    }, 
    "notify": {
      "properties": {
        "event-id": {
          "type": "string"
        }, 
        "event-trigger": {
          "type": "string"
        }, 
        "key-data": {
          "items": {
            "$ref": "#/definitions/key-data"
          }, 
          "type": "array"
        }, 
        "node-type": {
          "type": "string"
        }, 
        "selflink": {
          "type": "string"
        }
      }, 
      "required": [
        "event-id"
      ]
    }, 
    "oam-network": {
      "description": "OAM network, to be deprecated shortly.  Do not use for new purposes. \n###### Related Nodes\n- TO cloud-region (PARENT of oam-network, oam-network BelongsTo cloud-region, MANY2ONE)\n- TO complex( oam-network AppliesTo complex, MANY2MANY)\n- TO service-capability( oam-network AppliesTo service-capability, MANY2MANY)\n", 
      "properties": {
        "cvlan-tag": {
          "description": "cvlan-id", 
          "format": "int64", 
          "type": "integer"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "format": "int32", 
          "type": "integer"
        }, 
        "network-name": {
          "description": "Name of the network.", 
          "type": "string"
        }, 
        "network-uuid": {
          "description": "UUID of the network. Unique across a cloud-region", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-uuid", 
        "network-name", 
        "cvlan-tag"
      ]
    }, 
    "oam-networks": {
      "description": "Collection of OAM networks, to be deprecated shortly.  Do not use for new purposes. \n", 
      "properties": {
        "oam-network": {
          "items": {
            "$ref": "#/definitions/oam-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "operational-environment": {
      "description": "It is a logical partition of the cloud which allows to have multiple environments in the production AIC.\n###### Related Nodes\n- TO operational-environment( operational-environment Uses operational-environment, MANY2MANY)\n- FROM operational-environment( operational-environment Uses operational-environment, MANY2MANY)\n", 
      "properties": {
        "operational-environment-id": {
          "description": "UUID of an operational environment", 
          "type": "string"
        }, 
        "operational-environment-name": {
          "description": "Operational Environment name", 
          "type": "string"
        }, 
        "operational-environment-status": {
          "description": "Status", 
          "type": "string"
        }, 
        "operational-environment-type": {
          "description": "Operational Environment Type.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tenant-context": {
          "description": "Tenant Context.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "Workload Context.", 
          "type": "string"
        }
      }, 
      "required": [
        "operational-environment-id", 
        "operational-environment-name", 
        "operational-environment-type", 
        "operational-environment-status", 
        "tenant-context", 
        "workload-context"
      ]
    }, 
    "operational-environments": {
      "description": "a logical partition of the cloud which allows to have multiple environments in the production AIC.\n", 
      "properties": {
        "operational-environment": {
          "items": {
            "$ref": "#/definitions/operational-environment"
          }, 
          "type": "array"
        }
      }
    }, 
    "overloaded-model": {
      "description": "Allows for legacy POST of old-style and new-style models\n", 
      "properties": {
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-id": {
          "description": "Invariant unique ID which does not change from version to version", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-name-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-vers": {
          "$ref": "#/definitions/model-vers", 
          "type": "object"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "relationship-list": {
          "$ref": "#/definitions/relationship-list", 
          "type": "object"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-name-version-id", 
        "model-type", 
        "model-name", 
        "model-id", 
        "model-version"
      ]
    }, 
    "owning-entities": {
      "description": "Collection of owning-entities\n", 
      "properties": {
        "owning-entity": {
          "items": {
            "$ref": "#/definitions/owning-entity"
          }, 
          "type": "array"
        }
      }
    }, 
    "owning-entity": {
      "description": "describes an owning-entity\n###### Related Nodes\n- FROM service-instance( service-instance BelongsTo owning-entity, MANY2ONE)\n", 
      "properties": {
        "owning-entity-id": {
          "description": "UUID of an owning entity", 
          "type": "string"
        }, 
        "owning-entity-name": {
          "description": "Owning entity name", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "owning-entity-id", 
        "owning-entity-name"
      ]
    }, 
    "p-interface": {
      "description": "Physical interface (e.g., nic)\n###### Related Nodes\n- TO logical-link( p-interface LinksTo logical-link, MANY2ONE)\n- TO pnf (PARENT of p-interface, p-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of p-interface, p-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of p-interface, p-interface BindsTo vpls-pe, MANY2ONE)(4)\n- TO physical-link( p-interface LinksTo physical-link, MANY2ONE)(2)\n- FROM allotted-resource( allotted-resource Uses p-interface, ONE2MANY)\nAAI-1925 For CCVPN Usecase\n- FROM forwarder( forwarder ForwardsTo p-interface, MANY2MANY)\n- FROM l-interface (CHILD of p-interface, l-interface BindsTo p-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses p-interface, MANY2MANY)\n- FROM sriov-pf (CHILD of p-interface, sriov-pf BelongsTo p-interface, ONE2ONE)(1)\n- FROM vpn-binding( vpn-binding BindsTo p-interface, ONE2MANY)\nFor CCVPN Usecase\n\n-(1) IF this P-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this P-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this P-INTERFACE is DELETED also\n", 
      "properties": {
        "equipment-identifier": {
          "description": "CLEI or other specification for p-interface hardware.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-name": {
          "description": "Name that identifies the physical interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role specification for p-interface hardware.", 
          "type": "string"
        }, 
        "interface-type": {
          "description": "Indicates the physical properties of the interface.", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "inventory status", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "mac-addresss": {
          "description": "MAC Address of the p-interface.", 
          "type": "string"
        }, 
        "network-ref": {
          "description": "Store the network-ref of this p-interface. Derived from ietf-restconf-notification that identifies a termination-point.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "oper Status of this p-interface.", 
          "type": "string"
        }, 
        "port-description": {
          "description": "Nature of the services and connectivity on this port.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "sriov-pfs": {
          "items": {
            "$ref": "#/definitions/sriov-pf"
          }, 
          "type": "array"
        }, 
        "transparent": {
          "description": "Store the transparent value of this p-interface.", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "p-interfaces": {
      "description": "Collection of physical interfaces.\n", 
      "properties": {
        "p-interface": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "physical-link": {
      "description": "Collection of physical connections, typically between p-interfaces\n###### Related Nodes\n- FROM p-interface( p-interface LinksTo physical-link, MANY2ONE)(3)\n\n-(3) IF this FROM node is deleted, this PHYSICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit it", 
          "type": "string"
        }, 
        "dual-mode": {
          "description": "Dual access mode (e.g., primary, secondary", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
          "type": "string"
        }, 
        "management-option": {
          "description": "To provide information on who manages this circuit. A&AI or 3rd party transport provider", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-units": {
          "description": "Units for downstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-value": {
          "description": "Downstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-bandwidth-up-units": {
          "description": "Units for the upstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-up-value": {
          "description": "Upstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-name": {
          "description": "Name of the service Provider on this link.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "physical-links": {
      "description": "Collection of physical connections, typically between p-interfaces\n", 
      "properties": {
        "physical-link": {
          "items": {
            "$ref": "#/definitions/physical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "platform": {
      "description": "describes a platform\n###### Related Nodes\n- TO generic-vnf( platform Uses generic-vnf, MANY2MANY)\n- TO l3-network( platform Uses l3-network, MANY2MANY)\n", 
      "properties": {
        "platform-name": {
          "description": "Name of the platform", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "platform-name"
      ]
    }, 
    "platforms": {
      "description": "Collection of platforms\n", 
      "properties": {
        "platform": {
          "items": {
            "$ref": "#/definitions/platform"
          }, 
          "type": "array"
        }
      }
    }, 
    "pnf": {
      "description": "PNF represents a physical network function. typically equipment used in the D1 world. in 1607, this will be populated by SDN-C to represent a premises router that a uCPE connects to. But this can be used to represent any physical device that is not an AIC node or uCPE.\n###### Related Nodes\n- TO complex( pnf LocatedIn complex, MANY2ONE)\n- TO ext-aai-network( pnf BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO instance-group( pnf MemberOf instance-group, MANY2MANY)\n- TO network-resource( pnf LinksTo network-resource, MANY2MANY)\nFor CCVPN Usecase\n- TO zone( pnf LocatedIn zone, MANY2ONE)\n- FROM configuration( configuration AppliesTo pnf, MANY2MANY)\n- FROM esr-thirdparty-sdnc( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM generic-vnf( generic-vnf HostedOn pnf, MANY2MANY)\n- FROM lag-interface (CHILD of pnf, lag-interface BindsTo pnf, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pnf, MANY2MANY)\n- FROM p-interface (CHILD of pnf, p-interface BindsTo pnf, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf pnf, ONE2MANY)\n- FROM software-version (CHILD of pnf, software-version BelongsTo pnf, MANY2ONE)\n- FROM vrf (CHILD of pnf, vrf BelongsTo pnf, MANY2ONE)\nA vrf belongs to a pnf.(1)\n\n-(1) IF this PNF node is deleted, this FROM node is DELETED also\n-PNF cannot be deleted if related to NETWORK-RESOURCE,SOFTWARE-VERSION\n", 
      "properties": {
        "admin-status": {
          "description": "admin Status of this PNF", 
          "type": "string"
        }, 
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "frame-id": {
          "description": "ID of the physical frame (relay rack) where pnf is installed.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v4-oam": {
          "description": "ipv4-oam-address with new naming convention for IP addresses", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "The ASDC model id for this resource  model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "The ASDC model version for this resource  model.", 
          "type": "string"
        }, 
        "nf-role": {
          "description": "Nf Role is the role performed by this instance in the network.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this pnf", 
          "type": "string"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }, 
        "pnf-id": {
          "description": "id of pnf", 
          "type": "string"
        }, 
        "pnf-ipv4-address": {
          "description": "This is the IP address (IPv4) for the PNF itself. This is the IPv4 address that the PNF iself can be accessed at.", 
          "type": "string"
        }, 
        "pnf-ipv6-address": {
          "description": "This is the IP address (IPv6) for the PNF itself. This is the IPv6 address that the PNF iself can be accessed at.", 
          "type": "string"
        }, 
        "pnf-name": {
          "description": "unique name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2": {
          "description": "name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2-source": {
          "description": "source of name2", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of this device (not under canopi control) Valid values [PREPROV/NVTPROV/PROV]", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number of the device", 
          "type": "string"
        }, 
        "software-versions": {
          "items": {
            "$ref": "#/definitions/software-version"
          }, 
          "type": "array"
        }, 
        "sw-version": {
          "description": "sw-version is the version of SW for the hosted application on the PNF.", 
          "type": "string"
        }, 
        "vrfs": {
          "items": {
            "$ref": "#/definitions/vrf"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "pnf-name", 
        "in-maint"
      ]
    }, 
    "pnfs": {
      "description": "Collection of Physical Network Functions.\n", 
      "properties": {
        "pnf": {
          "items": {
            "$ref": "#/definitions/pnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "port-group": {
      "description": "Used to capture the network interfaces of this VCE\n###### Related Nodes\n- TO vce (PARENT of port-group, port-group BelongsTo vce, MANY2ONE)(4)\n- FROM cvlan-tag (CHILD of port-group, cvlan-tag BelongsTo port-group, MANY2ONE)(1)\n\n-(1) IF this PORT-GROUP node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this PORT-GROUP is DELETED also\n", 
      "properties": {
        "cvlan-tags": {
          "items": {
            "$ref": "#/definitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "Unique ID of the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "neutron-network-name": {
          "description": "Neutron network name of this Interface", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "port-group-id": {
          "description": "Unique ID for port group in vmware", 
          "type": "string"
        }, 
        "port-group-name": {
          "description": "Likely to duplicate value of neutron network name", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "switch-name": {
          "description": "DVS or standard switch name (should be non-null for port groups associated with DVS)", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-id", 
        "orchestration-status"
      ]
    }, 
    "port-groups": {
      "properties": {
        "port-group": {
          "items": {
            "$ref": "#/definitions/port-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "project": {
      "description": "describes the project\n###### Related Nodes\n- TO service-instance( project Uses service-instance, ONE2MANY)\n", 
      "properties": {
        "project-name": {
          "description": "Name of the project deploying a service", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "project-name"
      ]
    }, 
    "projects": {
      "description": "Collection of projects\n", 
      "properties": {
        "project": {
          "items": {
            "$ref": "#/definitions/project"
          }, 
          "type": "array"
        }
      }
    }, 
    "properties": {
      "description": "Property holder for query properties or instance properties\n", 
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "property-constraint": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of property-constraint, property-constraint BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this PROPERTY-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constraint-type": {
          "type": "string"
        }, 
        "property-constraint-uuid": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "property-constraint-uuid", 
        "constraint-type", 
        "property-name", 
        "property-value"
      ]
    }, 
    "property-constraints": {
      "properties": {
        "property-constraint": {
          "items": {
            "$ref": "#/definitions/property-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "pserver": {
      "description": "Compute host whose hostname must be unique and must exactly match what is sent as a relationship to a vserver.\n###### Related Nodes\n- TO availability-zone( pserver MemberOf availability-zone, MANY2ONE)\n- TO cloud-region( pserver LocatedIn cloud-region, MANY2ONE)\n- TO complex( pserver LocatedIn complex, MANY2ONE)\n- TO group-assignment( pserver MemberOf group-assignment, MANY2ONE)\n- TO zone( pserver LocatedIn zone, MANY2ONE)\n- FROM flavor( flavor CanBeInstantiatedIn pserver, MANY2MANY)\nHPA Capacity getting the compute nodes from given flavor\n- FROM generic-vnf( generic-vnf HostedOn pserver, MANY2MANY)\n- FROM hpa-capacity (CHILD of pserver, hpa-capacity BelongsTo pserver, MANY2ONE)\nHPA Capacity KV for given compute node(1)\n- FROM lag-interface (CHILD of pserver, lag-interface BindsTo pserver, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pserver, MANY2MANY)\n- FROM nos-server( nos-server HostedOn pserver, ONE2ONE)\n- FROM p-interface (CHILD of pserver, p-interface BindsTo pserver, MANY2ONE)(1)\n- FROM vserver( vserver HostedOn pserver, MANY2ONE)\n\n-(1) IF this PSERVER node is deleted, this FROM node is DELETED also\n-PSERVER cannot be deleted if related to GROUP-ASSIGNMENT,GENERIC-VNF,LOGICAL-LINK,NOS-SERVER,VSERVER\n", 
      "properties": {
        "disk-in-gigabytes": {
          "description": "Disk size, in GBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "fqdn": {
          "description": "Fully-qualified domain name", 
          "type": "string"
        }, 
        "host-profile": {
          "description": "The host profile that defines the configuration of the pserver.", 
          "type": "string"
        }, 
        "hostname": {
          "description": "Value from executing hostname on the compute node.", 
          "type": "string"
        }, 
        "hpa-capacity": {
          "items": {
            "$ref": "#/definitions/hpa-capacity"
          }, 
          "type": "array"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "internet-topology": {
          "description": "internet topology of Pserver", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Used to configure device, also used for troubleshooting and is IP used for traps generated by device.", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "Indicates who owns and or manages the device.", 
          "type": "string"
        }, 
        "number-of-cpus": {
          "description": "Number of cpus", 
          "format": "int32", 
          "type": "integer"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Prov Status of this device (not under canopi control) Valid values [PREPROV/NVTPROV/PROV]", 
          "type": "string"
        }, 
        "pserver-id": {
          "description": "ID of Pserver", 
          "type": "string"
        }, 
        "pserver-name2": {
          "description": "alternative pserver name", 
          "type": "string"
        }, 
        "pserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "ptnii-equip-name": {
          "description": "PTNII name", 
          "type": "string"
        }, 
        "purpose": {
          "description": "purpose of pserver", 
          "type": "string"
        }, 
        "ram-in-megabytes": {
          "description": "RAM size, in MBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number, may be queried", 
          "type": "string"
        }
      }, 
      "required": [
        "hostname", 
        "in-maint"
      ]
    }, 
    "pservers": {
      "description": "Collection of compute hosts.\n", 
      "properties": {
        "pserver": {
          "items": {
            "$ref": "#/definitions/pserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "query-parameters": {
      "description": "QueryParameters for performing a named-query or model query\n", 
      "properties": {
        "named-query": {
          "$ref": "#/definitions/named-query", 
          "type": "object"
        }, 
        "overloaded-model": {
          "$ref": "#/definitions/overloaded-model", 
          "type": "object"
        }
      }
    }, 
    "related-lookup": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of related-lookup, related-lookup BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this RELATED-LOOKUP is DELETED also\n", 
      "properties": {
        "property-collect-list": {
          "type": "string"
        }, 
        "related-lookup-uuid": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }, 
        "source-node-property": {
          "type": "string"
        }, 
        "source-node-type": {
          "type": "string"
        }, 
        "target-node-property": {
          "type": "string"
        }, 
        "target-node-type": {
          "type": "string"
        }
      }, 
      "required": [
        "related-lookup-uuid", 
        "source-node-type", 
        "source-node-property", 
        "target-node-type", 
        "target-node-property"
      ]
    }, 
    "related-lookups": {
      "properties": {
        "related-lookup": {
          "items": {
            "$ref": "#/definitions/related-lookup"
          }, 
          "type": "array"
        }
      }
    }, 
    "related-to-property": {
      "properties": {
        "property-key": {
          "description": "Key part of a key/value pair", 
          "type": "string"
        }, 
        "property-value": {
          "description": "Value part of a key/value pair", 
          "type": "string"
        }
      }
    }, 
    "relationship": {
      "description": "dictionary of relationship\n", 
      "properties": {
        "relationship": {
          "items": {
            "$ref": "#/definitions/relationship-dict"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "relationship-data": {
      "properties": {
        "relationship-key": {
          "description": "A keyword provided by A&AI to indicate an attribute.", 
          "type": "string"
        }, 
        "relationship-value": {
          "description": "Value of the attribute.", 
          "type": "string"
        }
      }, 
      "required": [
        "relationship-key", 
        "relationship-value"
      ]
    }, 
    "relationship-dict": {
      "properties": {
        "related-link": {
          "description": "URL to the object in A&AI.", 
          "type": "string"
        }, 
        "related-to": {
          "description": "A keyword provided by A&AI to indicate type of node.", 
          "type": "string"
        }, 
        "relationship-data": {
          "items": {
            "$ref": "#/definitions/relationship-data"
          }, 
          "type": "array"
        }, 
        "relationship-label": {
          "description": "The edge label for this relationship.", 
          "type": "string"
        }
      }
    }, 
    "relationship-list": {
      "properties": {
        "relationship": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }
      }
    }, 
    "reserved-prop-names": {
      "description": "Internal map to define some reserved properties of a vertex\n", 
      "properties": {
        "aai-created-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-last-mod-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-node-type": {
          "type": "string"
        }, 
        "aai-unique-key": {
          "type": "string"
        }, 
        "aai-uri": {
          "type": "string"
        }, 
        "last-mod-source-of-truth": {
          "type": "string"
        }, 
        "source-of-truth": {
          "type": "string"
        }
      }
    }, 
    "response-list": {
      "description": "Response container for the results of a named-query or model query\n", 
      "properties": {
        "inventory-response-items": {
          "$ref": "#/definitions/inventory-response-items", 
          "type": "object"
        }
      }
    }, 
    "result-data": {
      "properties": {
        "resource-link": {
          "description": "The URL to the specific resource", 
          "type": "string"
        }, 
        "resource-type": {
          "description": "The specific type of node in the A&AI graph", 
          "type": "string"
        }
      }
    }, 
    "route-table-reference": {
      "description": "Openstack route table reference.\n###### Related Nodes\n- FROM l3-network( l3-network Uses route-table-reference, MANY2MANY)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "route-table-reference-fqdn": {
          "description": "FQDN entry in the route table.", 
          "type": "string"
        }, 
        "route-table-reference-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "route-table-reference-id", 
        "route-table-reference-fqdn"
      ]
    }, 
    "route-table-references": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "route-table-reference": {
          "items": {
            "$ref": "#/definitions/route-table-reference"
          }, 
          "type": "array"
        }
      }
    }, 
    "route-target": {
      "description": "Route target information\n###### Related Nodes\n- TO vpn-binding (PARENT of route-target, route-target BelongsTo vpn-binding, MANY2ONE)(4)\n- TO vrf (PARENT of route-target, route-target BelongsTo vrf, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ROUTE-TARGET is DELETED also\n", 
      "properties": {
        "global-route-target": {
          "description": "Number used to identify an RT, globally unique in the network", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-target-role": {
          "description": "Role assigned to this route target", 
          "type": "string"
        }
      }, 
      "required": [
        "global-route-target", 
        "route-target-role"
      ]
    }, 
    "route-targets": {
      "description": "Collection of route target information\n", 
      "properties": {
        "route-target": {
          "items": {
            "$ref": "#/definitions/route-target"
          }, 
          "type": "array"
        }
      }
    }, 
    "routing-instance": {
      "description": "###### Related Nodes\n- TO site-pair-set (PARENT of routing-instance, routing-instance BelongsTo site-pair-set, MANY2ONE)(4)\n- FROM site-pair (CHILD of routing-instance, site-pair BelongsTo routing-instance, MANY2ONE)(1)\n\n-(1) IF this ROUTING-INSTANCE node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ROUTING-INSTANCE is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-instance-id": {
          "description": "Unique id of routing instance", 
          "type": "string"
        }, 
        "rpm-owner": {
          "description": "rpm owner", 
          "type": "string"
        }, 
        "site-pairs": {
          "items": {
            "$ref": "#/definitions/site-pair"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "routing-instance-id"
      ]
    }, 
    "routing-instances": {
      "description": "set of probes related to generic-vnf routing instance\n", 
      "properties": {
        "routing-instance": {
          "items": {
            "$ref": "#/definitions/routing-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "sdn-zone-response": {
      "properties": {
        "az-and-dvs-switches": {
          "items": {
            "$ref": "#/definitions/az-and-dvs-switches"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "$ref": "#/definitions/oam-networks", 
          "type": "object"
        }
      }
    }, 
    "sdwan-vpn": {
      "description": "Instance of an sdwan-vpn\n###### Related Nodes\n- TO ext-aai-network( sdwan-vpn BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( sdwan-vpn PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- TO tenant( sdwan-vpn PartOf tenant, ONE2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( sdwan-vpn PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "sdwan-vpn-id": {
          "description": "Uniquely identifies this sdwan-vpn by id", 
          "type": "string"
        }, 
        "sdwan-vpn-name": {
          "description": "Store the name of this sdwan-vpn.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Store the tenant-id of this sdwan-vpn.", 
          "type": "string"
        }, 
        "topology": {
          "description": "Store the topology of this sdwan-vpn.", 
          "type": "string"
        }, 
        "vpn-id": {
          "description": "Store the vpn-id of this sdwan-vpn.", 
          "type": "string"
        }, 
        "vxlan-id": {
          "description": "Store the vxlan-id of this sdwan-vpn.", 
          "type": "string"
        }
      }, 
      "required": [
        "sdwan-vpn-id"
      ]
    }, 
    "sdwan-vpns": {
      "description": "Collection of sdwan-vpns\n", 
      "properties": {
        "sdwan-vpn": {
          "items": {
            "$ref": "#/definitions/sdwan-vpn"
          }, 
          "type": "array"
        }
      }
    }, 
    "search": {
      "properties": {
        "edge-tag-query-request": {
          "$ref": "#/definitions/edge-tag-query-request", 
          "type": "object"
        }, 
        "edge-tag-query-result": {
          "$ref": "#/definitions/edge-tag-query-result", 
          "type": "object"
        }, 
        "sdn-zone-response": {
          "$ref": "#/definitions/sdn-zone-response", 
          "type": "object"
        }, 
        "search-results": {
          "$ref": "#/definitions/search-results", 
          "type": "object"
        }
      }
    }, 
    "search-results": {
      "properties": {
        "result-data": {
          "items": {
            "$ref": "#/definitions/result-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "secondary-filt": {
      "description": "SecondaryFilt for performing a named-query or model query\n"
    }, 
    "secondary-filter": {
      "properties": {
        "filter-type": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "secondary-filts": {
      "description": "SecondaryFilts for performing a named-query or model query\n", 
      "properties": {
        "secondary-filt": {
          "items": {
            "$ref": "#/definitions/secondary-filt"
          }, 
          "type": "array"
        }
      }
    }, 
    "segmentation-assignment": {
      "description": "Openstack segmentation assignment.\n###### Related Nodes\n- TO l3-network (PARENT of segmentation-assignment, segmentation-assignment BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this SEGMENTATION-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "segmentation-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "segmentation-id"
      ]
    }, 
    "segmentation-assignments": {
      "description": "Collection of openstack segmentation assignments\n", 
      "properties": {
        "segmentation-assignment": {
          "items": {
            "$ref": "#/definitions/segmentation-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "service": {
      "description": "Stand-in for service model definitions.  Likely to be deprecated in favor of models from ASDC.  Does not strictly map to ASDC services.\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-description": {
          "description": "Description of the service", 
          "type": "string"
        }, 
        "service-id": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "service-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "service-version": {
          "description": "service version", 
          "type": "string"
        }
      }, 
      "required": [
        "service-id", 
        "service-description"
      ]
    }, 
    "service-capabilities": {
      "description": "Collection of service capabilities.\n", 
      "properties": {
        "service-capability": {
          "items": {
            "$ref": "#/definitions/service-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-capability": {
      "description": "Early definition of server/resource pairings, likely to be replaced by models.  No new use should be made of this.\n###### Related Nodes\n- FROM availability-zone( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo service-capability, MANY2MANY)\n\n-SERVICE-CAPABILITY cannot be deleted if related to AVAILABILITY-ZONE,OAM-NETWORK\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type", 
        "vnf-type"
      ]
    }, 
    "service-design-and-creation": {
      "description": "Namespace for objects managed by ASDC\n", 
      "properties": {
        "models": {
          "items": {
            "$ref": "#/definitions/model"
          }, 
          "type": "array"
        }, 
        "named-queries": {
          "items": {
            "$ref": "#/definitions/named-query"
          }, 
          "type": "array"
        }, 
        "service-capabilities": {
          "items": {
            "$ref": "#/definitions/service-capability"
          }, 
          "type": "array"
        }, 
        "services": {
          "items": {
            "$ref": "#/definitions/service"
          }, 
          "type": "array"
        }, 
        "vnf-images": {
          "items": {
            "$ref": "#/definitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-instance": {
      "description": "Instance of a service\n###### Related Nodes\n- TO allotted-resource( service-instance Uses allotted-resource, MANY2MANY)\n- TO collection( service-instance ComposedOf collection, ONE2ONE)\n- TO configuration( service-instance Uses configuration, ONE2MANY)\n- TO configuration( service-instance ComposedOf configuration, MANY2MANY)\n- TO connector( service-instance Uses connector, MANY2MANY)\n- TO ctag-assignment( service-instance Uses ctag-assignment, ONE2MANY)\n- TO cvlan-tag( service-instance ComposedOf cvlan-tag, MANY2MANY)\n- TO generic-vnf( service-instance ComposedOf generic-vnf, ONE2MANY)\n- TO instance-group( service-instance Uses instance-group, ONE2MANY)\nMSO creates this edge on VNF Group Service creation\n- TO instance-group( service-instance MemberOf instance-group, MANY2MANY)\n- TO l3-network( service-instance ComposedOf l3-network, ONE2MANY)\n- TO logical-link( service-instance Uses logical-link, MANY2MANY)(2)\n- TO owning-entity( service-instance BelongsTo owning-entity, MANY2ONE)\n- TO pnf( service-instance ComposedOf pnf, ONE2MANY)\n- TO service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- TO service-subscription (PARENT of service-instance, service-instance BelongsTo service-subscription, MANY2ONE)(4)\n- TO vce( service-instance ComposedOf vce, ONE2MANY)\n- TO vlan( service-instance ComposedOf vlan, ONE2MANY)\n- TO zone( service-instance LocatedIn zone, MANY2ONE)\n- FROM allotted-resource (CHILD of service-instance, allotted-resource BelongsTo service-instance, MANY2ONE)(1)\n- FROM connectivity( connectivity PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM device( device PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM forwarding-path( forwarding-path AppliesTo service-instance, MANY2ONE)(1)\n- FROM lan-port-config( lan-port-config PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM metadatum (CHILD of service-instance, metadatum BelongsTo service-instance, MANY2ONE)(1)\n- FROM project( project Uses service-instance, ONE2MANY)\n- FROM sdwan-vpn( sdwan-vpn PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- FROM site-resource( site-resource PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n- FROM sp-partner( sp-partner PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM wan-port-config( wan-port-config PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n\n-(1) IF this SERVICE-INSTANCE node is deleted, this FROM node is DELETED also\n-(2) IF this SERVICE-INSTANCE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-INSTANCE is DELETED also\n", 
      "properties": {
        "allotted-resources": {
          "items": {
            "$ref": "#/definitions/allotted-resource"
          }, 
          "type": "array"
        }, 
        "bandwidth-total": {
          "description": "Indicates the total bandwidth to be used for this service.", 
          "type": "string"
        }, 
        "created-at": {
          "description": "create time of Network Service.", 
          "type": "string"
        }, 
        "description": {
          "description": "short description for service-instance.", 
          "type": "string"
        }, 
        "environment-context": {
          "description": "This field will store the environment context assigned to the service-instance.", 
          "type": "string"
        }, 
        "input-parameters": {
          "description": "String capturing request parameters from SO to pass to Closed Loop.", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this service.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-instance-id": {
          "description": "Uniquely identifies this instance of a service", 
          "type": "string"
        }, 
        "service-instance-location-id": {
          "description": "An identifier that customers assign to the location where this service is being used.", 
          "type": "string"
        }, 
        "service-instance-name": {
          "description": "This field will store a name assigned to the service-instance.", 
          "type": "string"
        }, 
        "service-role": {
          "description": "String capturing the service role.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "String capturing type of service.", 
          "type": "string"
        }, 
        "updated-at": {
          "description": "last update of Network Service.", 
          "type": "string"
        }, 
        "vhn-portal-url": {
          "description": "URL customers will use to access the vHN Portal.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "This field will store the workload context assigned to the service-instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-instance-id"
      ]
    }, 
    "service-instances": {
      "description": "Collection of service instances\n", 
      "properties": {
        "service-instance": {
          "items": {
            "$ref": "#/definitions/service-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-subscription": {
      "description": "Object that group service instances.\n###### Related Nodes\n- TO customer (PARENT of service-subscription, service-subscription BelongsTo customer, MANY2ONE)(4)\n- TO tenant( service-subscription Uses tenant, MANY2MANY)\n- FROM service-instance (CHILD of service-subscription, service-instance BelongsTo service-subscription, MANY2ONE)(1)\n\n-(1) IF this SERVICE-SUBSCRIPTION node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-SUBSCRIPTION is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-instances": {
          "items": {
            "$ref": "#/definitions/service-instance"
          }, 
          "type": "array"
        }, 
        "service-type": {
          "description": "Value defined by orchestration to identify this service across ECOMP.", 
          "type": "string"
        }, 
        "temp-ub-sub-account-id": {
          "description": "This property will be deleted from A&AI in the near future. Only stop gap solution.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type"
      ]
    }, 
    "service-subscriptions": {
      "description": "Collection of objects that group service instances.\n", 
      "properties": {
        "service-subscription": {
          "items": {
            "$ref": "#/definitions/service-subscription"
          }, 
          "type": "array"
        }
      }
    }, 
    "services": {
      "description": "Collection of service model definitions.  Likely to be deprecated in favor of models from ASDC.\n", 
      "properties": {
        "service": {
          "items": {
            "$ref": "#/definitions/service"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pair": {
      "description": "###### Related Nodes\n- TO routing-instance (PARENT of site-pair, site-pair BelongsTo routing-instance, MANY2ONE)(4)\n- FROM class-of-service (CHILD of site-pair, class-of-service BelongsTo site-pair, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SITE-PAIR is DELETED also\n", 
      "properties": {
        "classes-of-service": {
          "items": {
            "$ref": "#/definitions/class-of-service"
          }, 
          "type": "array"
        }, 
        "destination-equip-type": {
          "description": "The type of destinatination equipment. Could be Router, UCPE, etc.", 
          "type": "string"
        }, 
        "destination-hostname": {
          "description": "Hostname of the destination equipment to which SLAs are measured against.", 
          "type": "string"
        }, 
        "destination-ip": {
          "description": "Prefix address", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version, v4, v6", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "site-pair-id": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "source-ip": {
          "description": "Prefix address", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-id"
      ]
    }, 
    "site-pair-set": {
      "description": "Set of instances for probes used to measure service level agreements\n###### Related Nodes\n- TO generic-vnf( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM routing-instance (CHILD of site-pair-set, routing-instance BelongsTo site-pair-set, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR-SET node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-instances": {
          "items": {
            "$ref": "#/definitions/routing-instance"
          }, 
          "type": "array"
        }, 
        "site-pair-set-id": {
          "description": "Unique id of site pair set.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-set-id"
      ]
    }, 
    "site-pair-sets": {
      "description": "Collection of sets of instances for probes related to generic-vnf\n", 
      "properties": {
        "site-pair-set": {
          "items": {
            "$ref": "#/definitions/site-pair-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pairs": {
      "description": "probe within a set\n", 
      "properties": {
        "site-pair": {
          "items": {
            "$ref": "#/definitions/site-pair"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-resource": {
      "description": "Instance of a site-resource\n###### Related Nodes\n- TO allotted-resource( site-resource Uses allotted-resource, MANY2MANY)\nFor CCVPN Usecase\n- TO complex( site-resource Uses complex, MANY2MANY)\nFor CCVPN Usecase\n- TO ext-aai-network( site-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( site-resource PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "description": {
          "description": "Store the description of this site-resource.", 
          "type": "string"
        }, 
        "generated-site-id": {
          "description": "Store the generated-site-id of this site-resource.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "role": {
          "description": "Store the role of this site-resource.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "site-resource-id": {
          "description": "Uniquely identifies this site-resource by id", 
          "type": "string"
        }, 
        "site-resource-name": {
          "description": "Store the name of this site-resource.", 
          "type": "string"
        }, 
        "type": {
          "description": "Store the type of this site-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-resource-id"
      ]
    }, 
    "site-resources": {
      "description": "Collection of site-resources\n", 
      "properties": {
        "site-resource": {
          "items": {
            "$ref": "#/definitions/site-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "snapshot": {
      "description": "Openstack snapshot\n###### Related Nodes\n- TO cloud-region (PARENT of snapshot, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM vserver( vserver Uses snapshot, ONE2ONE)\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "prev-snapshot-id": {
          "description": "This field contains the UUID of the previous snapshot (if any).", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "snapshot-architecture": {
          "description": "Operating system architecture", 
          "type": "string"
        }, 
        "snapshot-id": {
          "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
          "type": "string"
        }, 
        "snapshot-name": {
          "description": "Snapshot name", 
          "type": "string"
        }, 
        "snapshot-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "snapshot-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "snapshot-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot-id"
      ]
    }, 
    "snapshots": {
      "description": "Collection of openstack snapshots\n", 
      "properties": {
        "snapshot": {
          "items": {
            "$ref": "#/definitions/snapshot"
          }, 
          "type": "array"
        }
      }
    }, 
    "software-version": {
      "description": "Software Version\n###### Related Nodes\n- TO pnf (PARENT of software-version, software-version BelongsTo pnf, MANY2ONE)\n", 
      "properties": {
        "is-active-sw-ver": {
          "description": "used to indicate whether or not this software-version is the active one (activeSw = true)", 
          "type": "boolean"
        }, 
        "software-version-id": {
          "description": "Identifier of the software version", 
          "type": "string"
        }
      }, 
      "required": [
        "software-version-id", 
        "is-active-sw-ver"
      ]
    }, 
    "software-versions": {
      "description": "Collection of software versions.\n", 
      "properties": {
        "software-version": {
          "items": {
            "$ref": "#/definitions/software-version"
          }, 
          "type": "array"
        }
      }
    }, 
    "sp-partner": {
      "description": "Instance of an sp-partner\n###### Related Nodes\n- TO service-instance( sp-partner PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "callsource": {
          "description": "Store the callsource of this sp-partner.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this sp-partner.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this sp-partner model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this sp-partner model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this sp-partner.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "sp-partner-id": {
          "description": "Uniquely identifies this sp-partner by id", 
          "type": "string"
        }, 
        "url": {
          "description": "Store the URL of this sp-partner.", 
          "type": "string"
        }
      }, 
      "required": [
        "sp-partner-id"
      ]
    }, 
    "sp-partners": {
      "description": "Collection of sp-partners\n", 
      "properties": {
        "sp-partner": {
          "items": {
            "$ref": "#/definitions/sp-partner"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-pf": {
      "description": "SR-IOV Physical Function\n###### Related Nodes\n- TO p-interface (PARENT of sriov-pf, sriov-pf BelongsTo p-interface, ONE2ONE)(4)\n- FROM sriov-vf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-PF is DELETED also\n", 
      "properties": {
        "pf-pci-id": {
          "description": "Identifier for the sriov-pf", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "pf-pci-id"
      ]
    }, 
    "sriov-pfs": {
      "description": "Collection of SR-IOV Physical Functions.\n", 
      "properties": {
        "sriov-pf": {
          "items": {
            "$ref": "#/definitions/sriov-pf"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-vf": {
      "description": "SR-IOV Virtual Function (not to be confused with virtual network function)\n###### Related Nodes\n- TO l-interface (PARENT of sriov-vf, sriov-vf BelongsTo l-interface, ONE2ONE)(4)\n- TO sriov-pf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-VF is DELETED also\n", 
      "properties": {
        "neutron-network-id": {
          "description": "Neutron network id of the interface", 
          "type": "string"
        }, 
        "pci-id": {
          "description": "PCI ID used to identify the sriov-vf", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vf-broadcast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows all broadcast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-insert-stag": {
          "description": "This option, if set to true, instructs to insert outer tag after traffic comes out of VM.", 
          "type": "boolean"
        }, 
        "vf-link-status": {
          "description": "This option is used to set the link status.  Valid values as of 1607 are on, off, and auto.", 
          "type": "string"
        }, 
        "vf-mac-anti-spoof-check": {
          "description": "This option ensures anti MAC spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-mac-filter": {
          "description": "When MAC filters are specified, VF-agent service configures VFs to do MAC level filtering before the traffic is passed to VM.", 
          "type": "string"
        }, 
        "vf-mirrors": {
          "description": "This option defines the set of Mirror objects which essentially mirrors the traffic from source to set of collector VNF Ports.", 
          "type": "string"
        }, 
        "vf-unknown-multicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown multicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-unknown-unicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown unicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-vlan-anti-spoof-check": {
          "description": "This option ensures anti VLAN spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-vlan-filter": {
          "description": "This metadata provides option to specify list of VLAN filters applied on VF to pass the traffic to VM.", 
          "type": "string"
        }, 
        "vf-vlan-strip": {
          "description": "When this field is set to true, VF will configured to strip the outer TAG before the traffic is passed to VM.", 
          "type": "boolean"
        }
      }, 
      "required": [
        "pci-id"
      ]
    }, 
    "sriov-vfs": {
      "description": "Collection of SR-IOV Virtual Functions.\n", 
      "properties": {
        "sriov-vf": {
          "items": {
            "$ref": "#/definitions/sriov-vf"
          }, 
          "type": "array"
        }
      }
    }, 
    "start-node-filter": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "subnet": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of subnet, subnet BelongsTo l3-network, MANY2ONE)(4)\n- FROM host-route (CHILD of subnet, host-route BelongsTo subnet, MANY2ONE)(1)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n\n-(1) IF this SUBNET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SUBNET is DELETED also\n-SUBNET cannot be deleted if related to L3-INTERFACE-IPV4-ADDRESS-LIST,L3-INTERFACE-IPV6-ADDRESS-LIST,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST\n", 
      "properties": {
        "cidr-mask": {
          "description": "cidr mask", 
          "type": "string"
        }, 
        "dhcp-enabled": {
          "description": "dhcp enabled", 
          "type": "boolean"
        }, 
        "dhcp-end": {
          "description": "the last address reserved for use by dhcp", 
          "type": "string"
        }, 
        "dhcp-start": {
          "description": "the start address reserved for use by dhcp", 
          "type": "string"
        }, 
        "gateway-address": {
          "description": "gateway ip address", 
          "type": "string"
        }, 
        "host-routes": {
          "items": {
            "$ref": "#/definitions/host-route"
          }, 
          "type": "array"
        }, 
        "ip-assignment-direction": {
          "description": "ip address assignment direction of the subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "network start address", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of this subnet", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "subnet-id": {
          "description": "Subnet ID, should be UUID.", 
          "type": "string"
        }, 
        "subnet-name": {
          "description": "Name associated with the subnet.", 
          "type": "string"
        }, 
        "subnet-role": {
          "description": "role of the subnet, referenced when assigning IPs", 
          "type": "string"
        }, 
        "subnet-sequence": {
          "description": "sequence of the subnet", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "subnet-id", 
        "dhcp-enabled"
      ]
    }, 
    "subnets": {
      "properties": {
        "subnet": {
          "items": {
            "$ref": "#/definitions/subnet"
          }, 
          "type": "array"
        }
      }
    }, 
    "tagged-inventory-item-list": {
      "properties": {
        "inventory-item": {
          "items": {
            "$ref": "#/definitions/inventory-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "tenant": {
      "description": "Openstack tenant\n###### Related Nodes\n- TO cloud-region (PARENT of tenant, tenant BelongsTo cloud-region, MANY2ONE)\n- TO group-assignment( tenant MemberOf group-assignment, MANY2MANY)\n- TO l3-network( tenant Uses l3-network, MANY2MANY)\n- TO volume-group( tenant DependsOn volume-group, ONE2MANY)\n- FROM generic-vnf( generic-vnf BelongsTo tenant, MANY2ONE)\n- FROM nos-server (CHILD of tenant, nos-server BelongsTo tenant, MANY2ONE)\n- FROM sdwan-vpn( sdwan-vpn PartOf tenant, ONE2MANY)\nFor CCVPN Usecase\n- FROM service-subscription( service-subscription Uses tenant, MANY2MANY)\n- FROM vserver (CHILD of tenant, vserver BelongsTo tenant, MANY2ONE)\n\n-TENANT cannot be deleted if related to NOS-SERVER,VSERVER\n", 
      "properties": {
        "nos-servers": {
          "items": {
            "$ref": "#/definitions/nos-server"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tenant-context": {
          "description": "This field will store the tenant context.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Unique id relative to the cloud-region.", 
          "type": "string"
        }, 
        "tenant-name": {
          "description": "Readable name of tenant", 
          "type": "string"
        }, 
        "vservers": {
          "items": {
            "$ref": "#/definitions/vserver"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "tenant-id", 
        "tenant-name"
      ]
    }, 
    "tenants": {
      "description": "Collection of openstack tenants.\n", 
      "properties": {
        "tenant": {
          "items": {
            "$ref": "#/definitions/tenant"
          }, 
          "type": "array"
        }
      }
    }, 
    "tunnel-xconnect": {
      "description": "Represents the specifics of a tunnel cross connect piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource (PARENT of tunnel-xconnect, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this TUNNEL-XCONNECT is DELETED also\n", 
      "properties": {
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "tunnel-xconnects": {
      "description": "This object is used to store the specific tunnel cross connect aspects of an allotted resource\n", 
      "properties": {
        "tunnel-xconnect": {
          "items": {
            "$ref": "#/definitions/tunnel-xconnect"
          }, 
          "type": "array"
        }
      }
    }, 
    "update": {
      "description": "Serves a PATCH like function.  Does not enforce concurrency control.  Clear each usage with AAI team.\n", 
      "properties": {
        "action": {
          "items": {
            "$ref": "#/definitions/action"
          }, 
          "type": "array"
        }, 
        "update-node-key": {
          "items": {
            "$ref": "#/definitions/update-node-key"
          }, 
          "type": "array"
        }, 
        "update-node-type": {
          "type": "string"
        }, 
        "update-node-uri": {
          "type": "string"
        }
      }, 
      "required": [
        "update-node-type"
      ]
    }, 
    "update-node-key": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "vce": {
      "description": "Virtual Customer Edge Router, used specifically for Gamma.  This object is deprecated.\n###### Related Nodes\n- TO availability-zone( vce Uses availability-zone, MANY2MANY)\n- TO complex( vce LocatedIn complex, MANY2MANY)\n- TO vserver( vce HostedOn vserver, ONE2MANY)\n- FROM entitlement (CHILD of vce, entitlement BelongsTo vce, MANY2ONE)(1)\n- FROM license (CHILD of vce, license BelongsTo vce, MANY2ONE)(1)\n- FROM port-group (CHILD of vce, port-group BelongsTo vce, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vce, ONE2MANY)\n\n-(1) IF this VCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "entitlement-resource-uuid": {
          "description": "OBSOLETE -  see child relationships", 
          "type": "string"
        }, 
        "entitlements": {
          "items": {
            "$ref": "#/definitions/entitlement"
          }, 
          "type": "array"
        }, 
        "equipment-role": {
          "description": "Network role being played by this VNF", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-loopback0-address": {
          "description": "Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure vce, also used for troubleshooting and is IP used for traps generated by VCE.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "licenses": {
          "items": {
            "$ref": "#/definitions/license"
          }, 
          "type": "array"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "port-groups": {
          "items": {
            "$ref": "#/definitions/port-group"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not strictly map to ASDC services, SOON TO BE DEPRECATED.", 
          "type": "string"
        }, 
        "v6-vce-wan-address": {
          "description": "Valid v6 IP address for the WAN Link on this router.  Implied length of /64.", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "vpe-id": {
          "description": "Unique ID of VPE connected to this VCE.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "vces": {
      "description": "Collection of Virtual Customer Edge Routers, used specifically for Gamma.  This object is deprecated.\n", 
      "properties": {
        "vce": {
          "items": {
            "$ref": "#/definitions/vce"
          }, 
          "type": "array"
        }
      }
    }, 
    "vf-module": {
      "description": "a deployment unit of VNFCs\n###### Related Nodes\n- TO generic-vnf (PARENT of vf-module, vf-module BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l3-network( vf-module DependsOn l3-network, MANY2MANY)\n- TO vnfc( vf-module Uses vnfc, ONE2MANY)(2)\n- TO volume-group( vf-module Uses volume-group, ONE2ONE)\n- TO vserver( vf-module Uses vserver, ONE2MANY)\n\n-(2) IF this VF-MODULE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VF-MODULE is DELETED also\n", 
      "properties": {
        "automated-assignment": {
          "description": "Indicates whether vf-module assignment was done via automation or manually", 
          "type": "boolean"
        }, 
        "contrail-service-instance-fqdn": {
          "description": "the Contrail unique ID for a service-instance", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance.", 
          "type": "string"
        }, 
        "is-base-vf-module": {
          "description": "used to indicate whether or not this object is base vf module", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "module-index": {
          "description": "the index will track the number of modules of a given type that have been deployed in a VNF, starting with 0, and always choosing the lowest available digit", 
          "format": "int32", 
          "type": "integer"
        }, 
        "orchestration-status": {
          "description": "orchestration status of this vf-module, mastered by MSO", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "vf-module-id": {
          "description": "Unique ID of vf-module.", 
          "type": "string"
        }, 
        "vf-module-name": {
          "description": "Name of vf-module", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "vf-module-id", 
        "is-base-vf-module", 
        "automated-assignment"
      ]
    }, 
    "vf-modules": {
      "description": "Collection of vf-modules, a deployment unit of VNFCs\n", 
      "properties": {
        "vf-module": {
          "items": {
            "$ref": "#/definitions/vf-module"
          }, 
          "type": "array"
        }
      }
    }, 
    "vig-server": {
      "description": "vig-server contains information about a vig server used for IPSec-configuration. Populated by SDN-C from 1607\n###### Related Nodes\n- TO ipsec-configuration (PARENT of vig-server, vig-server BelongsTo ipsec-configuration, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VIG-SERVER is DELETED also\n", 
      "properties": {
        "ipaddress-v4-vig": {
          "description": "v4 IP of the vig server", 
          "type": "string"
        }, 
        "ipaddress-v6-vig": {
          "description": "v6 IP of the vig server", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vig-address-type": {
          "description": "indicates whether the VIG is for AVPN or INTERNET", 
          "type": "string"
        }
      }, 
      "required": [
        "vig-address-type"
      ]
    }, 
    "vig-servers": {
      "properties": {
        "vig-server": {
          "items": {
            "$ref": "#/definitions/vig-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "vip-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv4-address-list, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- TO cp( vip-ipv4-address-list Uses cp, MANY2MANY)\n- TO instance-group( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vip-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv4-address"
      ]
    }, 
    "vip-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv6-address-list, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- TO cp( vip-ipv6-address-list Uses cp, MANY2MANY)\n- TO instance-group( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vip-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv6-address"
      ]
    }, 
    "virtual-data-center": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n###### Related Nodes\n- FROM connector( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM generic-vnf( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- FROM logical-link( logical-link LocatedIn virtual-data-center, MANY2MANY)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vdc-id": {
          "description": "Unique ID of the vdc", 
          "type": "string"
        }, 
        "vdc-name": {
          "description": "Name of the virtual data center", 
          "type": "string"
        }
      }, 
      "required": [
        "vdc-id", 
        "vdc-name"
      ]
    }, 
    "virtual-data-centers": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n", 
      "properties": {
        "virtual-data-center": {
          "items": {
            "$ref": "#/definitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan": {
      "description": "Definition of vlan\n###### Related Nodes\n- TO l-interface (PARENT of vlan, vlan LinksTo l-interface, MANY2ONE)(4)\n- TO logical-link( vlan Uses logical-link, MANY2MANY)(2)\n- TO multicast-configuration( vlan Uses multicast-configuration, MANY2MANY)\n- FROM allotted-resource( allotted-resource PartOf vlan, MANY2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of vlan, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vlan, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vlan, ONE2MANY)\n\n-(1) IF this VLAN node is deleted, this FROM node is DELETED also\n-(2) IF this VLAN node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VLAN is DELETED also\n", 
      "properties": {
        "backdoor-connection": {
          "description": "Whether customer is going to use this VLAN for backdoor connection to another customer premise device.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "is-ip-unnumbered": {
          "description": "Flag indicating the interface uses the IP Unnumbered configuration.", 
          "type": "boolean"
        }, 
        "is-private": {
          "description": "Private VLAN indicator.", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "orchestration-status": {
          "description": "Status of a vnf's vlan interface, on which the customer circuit resides, mastered by SDN-C.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of the VLAN configuration related to a logical interface. Valid values [PREPROV/NVTPROV/PROV].", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "vlan-description": {
          "description": "Used to describe (the service associated with) the vlan", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-interface": {
          "description": "String that identifies the interface", 
          "type": "string"
        }, 
        "vpn-key": {
          "description": "This indicates the customers VPN ID associated with this vlan", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-interface", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "vlan-mapping": {
      "description": "vlan-mapping object is an optional child object of the forwarder-evc object.  A given forwarder-evc object may have multiple vlan-mapping objects.\n###### Related Nodes\n- TO forwarder-evc (PARENT of vlan-mapping, vlan-mapping BelongsTo forwarder-evc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VLAN-MAPPING is DELETED also\n", 
      "properties": {
        "ivlan": {
          "description": "The internal VLAN ('IVLAN') value.  Specific to Arista devices.", 
          "type": "string"
        }, 
        "nni-cvlan": {
          "description": "CVLAN value from the NNI/egress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "nni-svlan": {
          "description": "SVLAN value from the NNI/egress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }, 
        "uni-cvlan": {
          "description": "CVLAN value from the UNI/ingress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "vlan-mapping-id": {
          "description": "Key for vlan-mapping object.", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-mapping-id"
      ]
    }, 
    "vlan-mappings": {
      "description": "Collection of vlan mappings.\n", 
      "properties": {
        "vlan-mapping": {
          "items": {
            "$ref": "#/definitions/vlan-mapping"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan-tag": {
      "description": "###### Related Nodes\n- TO cloud-region( vlan-tag BelongsTo cloud-region, MANY2ONE)\n- TO cp( vlan-tag Uses cp, MANY2MANY)\n- TO l3-network( vlan-tag BelongsTo l3-network, MANY2MANY)\n", 
      "properties": {
        "is-private": {
          "description": "is VLAN private?", 
          "type": "boolean"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "VLAN inner id", 
          "format": "int32", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "VLAN outer id", 
          "format": "int32", 
          "type": "integer"
        }, 
        "vlan-tag-id": {
          "description": "Unique ID of the vlan-tag", 
          "type": "string"
        }, 
        "vlan-tag-role": {
          "description": "purpose (l3-network to be connected to)", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-tag-id", 
        "vlan-tag-role", 
        "vlan-id-outer", 
        "is-private"
      ]
    }, 
    "vlan-tags": {
      "properties": {
        "vlan-tag": {
          "items": {
            "$ref": "#/definitions/vlan-tag"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlans": {
      "properties": {
        "vlan": {
          "items": {
            "$ref": "#/definitions/vlan"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnf": {
      "description": "Abstract vnf class\n", 
      "properties": {
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id"
      ]
    }, 
    "vnf-image": {
      "description": "Image object that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses vnf-image, MANY2ONE)\n\n-VNF-IMAGE cannot be deleted if related to GENERIC-VNF\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "vnf-image-uuid": {
          "description": "Unique ID of this asset", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-image-uuid", 
        "application", 
        "application-vendor"
      ]
    }, 
    "vnf-images": {
      "description": "Collection of image objects that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n", 
      "properties": {
        "vnf-image": {
          "items": {
            "$ref": "#/definitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnfc": {
      "description": "###### Related Nodes\n- TO cp (PARENT of vnfc, vnfc BelongsTo cp, ONE2MANY)\ncp is child of vnfc(2)\n- TO generic-vnf( vnfc BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( vnfc MemberOf instance-group, MANY2MANY)\n- TO vip-ipv4-address-list( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n- TO vip-ipv6-address-list( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n- TO vserver( vnfc HostedOn vserver, ONE2MANY)\n- FROM configuration( configuration Uses vnfc, ONE2ONE)(1)\n- FROM l3-interface-ipv4-address-list (CHILD of vnfc, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vnfc, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM vf-module( vf-module Uses vnfc, ONE2MANY)(3)\n\n-(1) IF this VNFC node is deleted, this FROM node is DELETED also\n-(2) IF this VNFC node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this VNFC is DELETED also\n-(4) IF this TO node is deleted, this VNFC is DELETED also\n", 
      "properties": {
        "cps": {
          "items": {
            "$ref": "#/definitions/cp"
          }, 
          "type": "array"
        }, 
        "group-notation": {
          "description": "Group notation of VNFC", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "ipaddress-v4-oam-vip": {
          "description": "Oam V4 vip address of this vnfc", 
          "type": "string"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "nfc-function": {
          "description": "English description of function that the specific resource deployment is providing. Assigned as part of the customization of a resource in a service", 
          "type": "string"
        }, 
        "nfc-naming-code": {
          "description": "Short code that is used in naming instances of the item being modeled", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by APP-C", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "prov status of this vnfc", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vnfc-name": {
          "description": "Unique ID of vnfc.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfc-name", 
        "nfc-naming-code", 
        "nfc-function", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vnfcs": {
      "description": "virtual network components associated with a vserver from application controller.\n", 
      "properties": {
        "vnfc": {
          "items": {
            "$ref": "#/definitions/vnfc"
          }, 
          "type": "array"
        }
      }
    }, 
    "volume": {
      "description": "Ephemeral Block storage volume.\n###### Related Nodes\n- FROM vserver (PARENT of volume, vserver AttachesTo volume, ONE2MANY)(3)\n\n-(3) IF this FROM node is deleted, this VOLUME is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "volume-id": {
          "description": "Unique ID of block storage volume relative to the vserver.", 
          "type": "string"
        }, 
        "volume-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-id", 
        "volume-selflink"
      ]
    }, 
    "volume-group": {
      "description": "Persistent block-level storage.\n###### Related Nodes\n- TO cloud-region (PARENT of volume-group, volume-group BelongsTo cloud-region, MANY2ONE)\n- TO complex( volume-group LocatedIn complex, MANY2ONE)\n- FROM generic-vnf( generic-vnf DependsOn volume-group, ONE2MANY)\n- FROM tenant( tenant DependsOn volume-group, ONE2MANY)\n- FROM vf-module( vf-module Uses volume-group, ONE2ONE)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this volume-group", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this volume-group", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vf-module-model-customization-id": {
          "description": "helps relate the volume group to the vf-module whose components will require the volume group", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "volume-group-id": {
          "description": "Unique ID of volume-group.", 
          "type": "string"
        }, 
        "volume-group-name": {
          "description": "Name of the volume group.", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-group-id", 
        "vnf-type"
      ]
    }, 
    "volume-groups": {
      "description": "Collection of persistent block-level storage.\n", 
      "properties": {
        "volume-group": {
          "items": {
            "$ref": "#/definitions/volume-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "volumes": {
      "description": "Collection of ephemeral Block storage volumes.\n", 
      "properties": {
        "volume": {
          "items": {
            "$ref": "#/definitions/volume"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpls-pe": {
      "description": "VPLS Provider Edge routers.\n###### Related Nodes\n- TO complex( vpls-pe LocatedIn complex, MANY2ONE)\n- TO ctag-pool( vpls-pe Uses ctag-pool, MANY2MANY)\n- FROM lag-interface (CHILD of vpls-pe, lag-interface BindsTo vpls-pe, MANY2ONE)(1)\n- FROM p-interface (CHILD of vpls-pe, p-interface BindsTo vpls-pe, MANY2ONE)(1)\n\n-(1) IF this VPLS-PE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-name": {
          "type": "string"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value, e.g., VPLS-PE.", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for stag to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "equipment-name"
      ]
    }, 
    "vpls-pes": {
      "description": "Collection of VPLS Provider Edge routers\n", 
      "properties": {
        "vpls-pe": {
          "items": {
            "$ref": "#/definitions/vpls-pe"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpn-binding": {
      "description": "VPN binding\n###### Related Nodes\n- TO customer( vpn-binding Uses customer, MANY2MANY)\n- TO ext-aai-network( vpn-binding BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO p-interface( vpn-binding BindsTo p-interface, ONE2MANY)\nFor CCVPN Usecase\n- FROM allotted-resource( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses vpn-binding, MANY2ONE)\n- FROM connectivity( connectivity PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM l3-network( l3-network Uses vpn-binding, MANY2MANY)\n- FROM logical-link( logical-link Uses vpn-binding, MANY2MANY)\n- FROM network-resource( network-resource Uses vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM route-target (CHILD of vpn-binding, route-target BelongsTo vpn-binding, MANY2ONE)(1)\n- FROM sdwan-vpn( sdwan-vpn PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM vrf( vrf AppliesTo vpn-binding, MANY2ONE)\nA vrf uses a vpn-binding.\n\n-(1) IF this VPN-BINDING node is deleted, this FROM node is DELETED also\n-VPN-BINDING cannot be deleted if related to ALLOTTED-RESOURCE,L3-NETWORK,LOGICAL-LINK\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this vpn.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this vpn.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this vpn.", 
          "type": "string"
        }, 
        "customer-vpn-id": {
          "description": "id for this customer vpn", 
          "type": "string"
        }, 
        "dst-access-ltp-id": {
          "description": "Store the id of the dst-access-ltp of this vpn.", 
          "type": "string"
        }, 
        "dst-access-node-id": {
          "description": "Store the id of the dst-access-node of this vpn.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "description": "l3-networks relate to vpn-bindings", 
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-distinguisher": {
          "description": "Used to distinguish the distinct VPN routes of separate customers who connect to the provider in an MPLS network.", 
          "type": "string"
        }, 
        "route-targets": {
          "items": {
            "$ref": "#/definitions/route-target"
          }, 
          "type": "array"
        }, 
        "src-access-ltp-id": {
          "description": "Store the id of the src-access-ltp of this vpn.", 
          "type": "string"
        }, 
        "src-access-node-id": {
          "description": "Store the id of the src-access-node of this vpn.", 
          "type": "string"
        }, 
        "vpn-id": {
          "description": "VPN ID, globally unique within A&AI", 
          "type": "string"
        }, 
        "vpn-name": {
          "description": "VPN Name", 
          "type": "string"
        }, 
        "vpn-platform": {
          "description": "the platform associated with the VPN example AVPN, Mobility", 
          "type": "string"
        }, 
        "vpn-region": {
          "description": "region of customer vpn", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Type of the vpn, should be taken from enumerated/valid values", 
          "type": "string"
        }
      }, 
      "required": [
        "vpn-id", 
        "vpn-name"
      ]
    }, 
    "vpn-bindings": {
      "properties": {
        "vpn-binding": {
          "items": {
            "$ref": "#/definitions/vpn-binding"
          }, 
          "type": "array"
        }
      }
    }, 
    "vrf": {
      "description": "Definition of vrf\n###### Related Nodes\n- TO l-interface( vrf Uses l-interface, ONE2MANY)\n- TO l3-network( vrf Uses l3-network, ONE2MANY)\nA vrf uses many l3-networks\n- TO pnf (PARENT of vrf, vrf BelongsTo pnf, MANY2ONE)\nA vrf belongs to a pnf.(4)\n- TO vpn-binding( vrf AppliesTo vpn-binding, MANY2ONE)\nA vrf uses a vpn-binding.\n- FROM configuration( configuration Uses vrf, ONE2MANY)\nA Configuration uses VRFs\n- FROM route-target (CHILD of vrf, route-target BelongsTo vrf, MANY2ONE)(1)\n\n-(1) IF this VRF node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this VRF is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-distinguisher": {
          "description": "Route Distinguisher", 
          "type": "string"
        }, 
        "route-targets": {
          "items": {
            "$ref": "#/definitions/route-target"
          }, 
          "type": "array"
        }, 
        "vrf-address-family": {
          "description": "IP address family (v6/v4/both)", 
          "type": "string"
        }, 
        "vrf-description": {
          "description": "VRF Description", 
          "type": "string"
        }, 
        "vrf-id": {
          "description": "VRF UUID.", 
          "type": "string"
        }, 
        "vrf-name": {
          "description": "VRF Name", 
          "type": "string"
        }, 
        "vrf-type": {
          "description": "The type of vrf (bridge-domain as an example)", 
          "type": "string"
        }
      }, 
      "required": [
        "vrf-id", 
        "vrf-name"
      ]
    }, 
    "vrfs": {
      "properties": {
        "vrf": {
          "items": {
            "$ref": "#/definitions/vrf"
          }, 
          "type": "array"
        }
      }
    }, 
    "vserver": {
      "description": "Virtual Servers, aka virtual machine or VM.\n###### Related Nodes\n- TO flavor( vserver Uses flavor, MANY2ONE)\n- TO image( vserver Uses image, MANY2ONE)\n- TO pserver( vserver HostedOn pserver, MANY2ONE)\n- TO snapshot( vserver Uses snapshot, ONE2ONE)\n- TO tenant (PARENT of vserver, vserver BelongsTo tenant, MANY2ONE)\n- TO volume (PARENT of vserver, vserver AttachesTo volume, ONE2MANY)(2)\n- FROM generic-vnf( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM l-interface (CHILD of vserver, l-interface BindsTo vserver, MANY2ONE)(1)\n- FROM vce( vce HostedOn vserver, ONE2MANY)\n- FROM vf-module( vf-module Uses vserver, ONE2MANY)\n- FROM vnfc( vnfc HostedOn vserver, ONE2MANY)\n\n-(1) IF this VSERVER node is deleted, this FROM node is DELETED also\n-(2) IF this VSERVER node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "is-closed-loop-disabled": {
          "description": "Used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "volumes": {
          "items": {
            "$ref": "#/definitions/volume"
          }, 
          "type": "array"
        }, 
        "vserver-id": {
          "description": "Unique identifier for this vserver relative to its tenant", 
          "type": "string"
        }, 
        "vserver-name": {
          "description": "Name of vserver", 
          "type": "string"
        }, 
        "vserver-name2": {
          "description": "Alternative name of vserver", 
          "type": "string"
        }, 
        "vserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "vserver-id", 
        "vserver-name", 
        "vserver-selflink", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vservers": {
      "description": "Collection of virtual Servers, aka virtual machines or VMs.\n", 
      "properties": {
        "vserver": {
          "items": {
            "$ref": "#/definitions/vserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "wan-port-config": {
      "description": "Instance of a wan-port-config\n###### Related Nodes\n- TO ext-aai-network( wan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( wan-port-config PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "description": {
          "description": "Store the description of this wan-port-config.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Store the id of the device of this wan-port-config.", 
          "type": "string"
        }, 
        "device-port-id": {
          "description": "Store the device-port-id of this wan-port-config.", 
          "type": "string"
        }, 
        "input-bandwidth": {
          "description": "Store the input-bandwidth of this wan-port-config.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "Store the ip-address of this wan-port-config.", 
          "type": "string"
        }, 
        "ipv4-address": {
          "description": "Store the ipv4-address of this wan-port-config.", 
          "type": "string"
        }, 
        "ipv6-address": {
          "description": "Store the ipv6-address of this wan-port-config.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "output-bandwidth": {
          "description": "Store the output-bandwidth of this wan-port-config.", 
          "type": "string"
        }, 
        "port-number": {
          "description": "Store the port-number of this wan-port-config.", 
          "type": "string"
        }, 
        "port-type": {
          "description": "Store the port-type of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ip-address": {
          "description": "Store the provider-ip-address of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ipv4-address": {
          "description": "Store the provider-ipv4-address of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ipv6-address": {
          "description": "Store the provider-ipv6-address of this wan-port-config.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "transport-network-name": {
          "description": "Store the transport-network-name of this wan-port-config.", 
          "type": "string"
        }, 
        "vlan-id": {
          "description": "Store the id of the vlan of this wan-port-config.", 
          "type": "string"
        }, 
        "wan-port-config-id": {
          "description": "Uniquely identifies this wan-port-config by id", 
          "type": "string"
        }, 
        "wan-port-config-name": {
          "description": "Store the name of this wan-port-config.", 
          "type": "string"
        }, 
        "wan-port-id": {
          "description": "Store the wan-port-id of this wan-port-config.", 
          "type": "string"
        }
      }, 
      "required": [
        "wan-port-config-id"
      ]
    }, 
    "wan-port-configs": {
      "description": "Collection of wan-port-configs\n", 
      "properties": {
        "wan-port-config": {
          "items": {
            "$ref": "#/definitions/wan-port-config"
          }, 
          "type": "array"
        }
      }
    }, 
    "zone": {
      "description": "A zone is a grouping of assets in a location homing to the same connections into the CBB\n###### Related Nodes\n- TO complex( zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn zone, MANY2ONE)\n- FROM pnf( pnf LocatedIn zone, MANY2ONE)\n- FROM pserver( pserver LocatedIn zone, MANY2ONE)\n- FROM service-instance( service-instance LocatedIn zone, MANY2ONE)\n", 
      "properties": {
        "design-type": {
          "description": "Design of zone [Medium/Large\u2026]", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "status": {
          "description": "Status of a zone.", 
          "type": "string"
        }, 
        "zone-context": {
          "description": "Context of zone [production/test]", 
          "type": "string"
        }, 
        "zone-id": {
          "description": "Code assigned by AIC to the zone", 
          "type": "string"
        }, 
        "zone-name": {
          "description": "English name associated with the zone", 
          "type": "string"
        }
      }, 
      "required": [
        "zone-id", 
        "zone-name", 
        "design-type", 
        "zone-context"
      ]
    }, 
    "zones": {
      "description": "Collection of zones\n", 
      "properties": {
        "zone": {
          "items": {
            "$ref": "#/definitions/zone"
          }, 
          "type": "array"
        }
      }
    }
  }, 
  "getDefinitions": {
    "action": {
      "properties": {
        "action-data": {
          "items": {
            "$ref": "#/getDefinitions/action-data"
          }, 
          "type": "array"
        }, 
        "action-type": {
          "type": "string"
        }
      }
    }, 
    "action-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "actions": {
      "description": "APIs that are more action related than REST (e.g., notify, update).\n", 
      "properties": {
        "notify": {
          "$ref": "#/getDefinitions/notify", 
          "type": "object"
        }, 
        "update": {
          "$ref": "#/getDefinitions/update", 
          "type": "object"
        }
      }
    }, 
    "aggregate-route": {
      "description": "Aggregate route configs are used on the D2 IPE\u2019s for the Voice services.  In 1902, SDNC will create aggregate-route objects and write them to A&AI. \n###### Related Nodes\n- TO l3-network (PARENT of aggregate-route, aggregate-route BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this AGGREGATE-ROUTE is DELETED also\n", 
      "properties": {
        "cidr-mask": {
          "description": "CIDR-mask for aggregate route subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "Identifies is aggregate route is ipv4 or ipv6", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "Name of the forwarding-path", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-id": {
          "description": "Unique id of the aggregate-route instance", 
          "type": "string"
        }
      }, 
      "required": [
        "route-id", 
        "network-start-address", 
        "cidr-mask", 
        "ip-version"
      ]
    }, 
    "aggregate-routes": {
      "description": "Collection of aggregate routes.\n", 
      "properties": {
        "aggregate-route": {
          "items": {
            "$ref": "#/getDefinitions/aggregate-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "allotted-resource": {
      "description": "Represents a slice or partial piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource( allotted-resource BindsTo allotted-resource, ONE2ONE)\nAAI-1925\n- TO generic-vnf( allotted-resource PartOf generic-vnf, MANY2MANY)\n- TO instance-group( allotted-resource MemberOf instance-group, MANY2MANY)\n- TO l-interface( allotted-resource Uses l-interface, ONE2MANY)\n- TO l3-network( allotted-resource PartOf l3-network, MANY2MANY)\n- TO network-policy( allotted-resource Uses network-policy, ONE2ONE)\n- TO p-interface( allotted-resource Uses p-interface, ONE2MANY)\nAAI-1925 For CCVPN Usecase\n- TO service-instance (PARENT of allotted-resource, allotted-resource BelongsTo service-instance, MANY2ONE)(4)\n- TO vlan( allotted-resource PartOf vlan, MANY2MANY)\n- TO vpn-binding( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM allotted-resource( allotted-resource BindsTo allotted-resource, ONE2ONE)\nAAI-1925\n- FROM configuration( configuration Uses allotted-resource, ONE2ONE)(3)\n- FROM service-instance( service-instance Uses allotted-resource, MANY2MANY)\n- FROM site-resource( site-resource Uses allotted-resource, MANY2MANY)\nFor CCVPN Usecase\n- FROM tunnel-xconnect (CHILD of allotted-resource, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(1)\n\n-(1) IF this ALLOTTED-RESOURCE node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this ALLOTTED-RESOURCE is DELETED also\n-(4) IF this TO node is deleted, this ALLOTTED-RESOURCE is DELETED also\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this allotted-resource.", 
          "type": "string"
        }, 
        "access-ltp-id": {
          "description": "Store the id of the access ltp of this allotted-resource.", 
          "type": "string"
        }, 
        "access-node-id": {
          "description": "Store the id of the access node of this allotted-resource.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this allotted-resource.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this allotted-resource.", 
          "type": "string"
        }, 
        "allotted-resource-name": {
          "description": "Store the name of this allotted-resource.", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "Store the cvlan of this allotted-resource.", 
          "type": "string"
        }, 
        "description": {
          "description": "The descriptive information assigned to this allotted resource instance", 
          "type": "string"
        }, 
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "role": {
          "description": "role in the network that this resource will be providing.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Link back to more information in the controller", 
          "type": "string"
        }, 
        "tunnel-xconnects": {
          "items": {
            "$ref": "#/getDefinitions/tunnel-xconnect"
          }, 
          "type": "array"
        }, 
        "type": {
          "description": "Generic description of the type of allotted resource.", 
          "type": "string"
        }, 
        "vpn-name": {
          "description": "Store the vpn-name of this allotted-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "allotted-resources": {
      "description": "This object is used to store slices of services being offered\n", 
      "properties": {
        "allotted-resource": {
          "items": {
            "$ref": "#/getDefinitions/allotted-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "availability-zone": {
      "description": "Availability zone, a collection of compute hosts/pservers\n###### Related Nodes\n- TO cloud-region (PARENT of availability-zone, availability-zone BelongsTo cloud-region, MANY2ONE)(4)\n- TO complex( availability-zone LocatedIn complex, MANY2ONE)\n- TO service-capability( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM ctag-pool( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- FROM dvs-switch( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses availability-zone, MANY2MANY)\n- FROM pserver( pserver MemberOf availability-zone, MANY2ONE)\n- FROM vce( vce Uses availability-zone, MANY2MANY)\n\n-(4) IF this TO node is deleted, this AVAILABILITY-ZONE is DELETED also\n-AVAILABILITY-ZONE cannot be deleted if related to CTAG-POOL,DVS-SWITCH,GENERIC-VNF,PSERVER,VCE\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone.  Unique across a cloud region", 
          "type": "string"
        }, 
        "hypervisor-type": {
          "description": "Type of hypervisor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "State that indicates whether the availability zone should be used, etc.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "availability-zone-name", 
        "hypervisor-type"
      ]
    }, 
    "availability-zones": {
      "description": "Collection of availability zones\n", 
      "properties": {
        "availability-zone": {
          "items": {
            "$ref": "#/getDefinitions/availability-zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "az-and-dvs-switches": {
      "properties": {
        "availability-zone": {
          "$ref": "#/getDefinitions/availability-zone", 
          "type": "object"
        }, 
        "dvs-switches": {
          "$ref": "#/getDefinitions/dvs-switches", 
          "type": "object"
        }
      }
    }, 
    "business": {
      "description": "Namespace for business related constructs\n", 
      "properties": {
        "connectors": {
          "items": {
            "$ref": "#/getDefinitions/connector"
          }, 
          "type": "array"
        }, 
        "customers": {
          "items": {
            "$ref": "#/getDefinitions/customer"
          }, 
          "type": "array"
        }, 
        "lines-of-business": {
          "items": {
            "$ref": "#/getDefinitions/line-of-business"
          }, 
          "type": "array"
        }, 
        "owning-entities": {
          "items": {
            "$ref": "#/getDefinitions/owning-entity"
          }, 
          "type": "array"
        }, 
        "platforms": {
          "items": {
            "$ref": "#/getDefinitions/platform"
          }, 
          "type": "array"
        }, 
        "projects": {
          "items": {
            "$ref": "#/getDefinitions/project"
          }, 
          "type": "array"
        }, 
        "sp-partners": {
          "items": {
            "$ref": "#/getDefinitions/sp-partner"
          }, 
          "type": "array"
        }
      }
    }, 
    "class-of-service": {
      "description": "###### Related Nodes\n- TO site-pair (PARENT of class-of-service, class-of-service BelongsTo site-pair, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this CLASS-OF-SERVICE is DELETED also\n", 
      "properties": {
        "cos": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "probe-id": {
          "description": "identifier of probe", 
          "type": "string"
        }, 
        "probe-type": {
          "description": "type of probe", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cos"
      ]
    }, 
    "classes-of-service": {
      "description": "class-of-service of probe\n", 
      "properties": {
        "class-of-service": {
          "items": {
            "$ref": "#/getDefinitions/class-of-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-infrastructure": {
      "description": "Namespace for cloud infrastructure.\n", 
      "properties": {
        "cloud-regions": {
          "items": {
            "$ref": "#/getDefinitions/cloud-region"
          }, 
          "type": "array"
        }, 
        "complexes": {
          "items": {
            "$ref": "#/getDefinitions/complex"
          }, 
          "type": "array"
        }, 
        "network-profiles": {
          "items": {
            "$ref": "#/getDefinitions/network-profile"
          }, 
          "type": "array"
        }, 
        "network-technologies": {
          "items": {
            "$ref": "#/getDefinitions/network-technology"
          }, 
          "type": "array"
        }, 
        "operational-environments": {
          "items": {
            "$ref": "#/getDefinitions/operational-environment"
          }, 
          "type": "array"
        }, 
        "pservers": {
          "items": {
            "$ref": "#/getDefinitions/pserver"
          }, 
          "type": "array"
        }, 
        "virtual-data-centers": {
          "items": {
            "$ref": "#/getDefinitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-region": {
      "description": "cloud-region designates an installation of a cloud cluster or region or instantiation. In AT&Ts AIC cloud, this could be an LCP or DCP. Cloud regions are uniquely identified by a composite key, cloud-owner + cloud-region-id. The format of the cloud-owner is vendor-cloudname and we will use att-aic for AT&T's AIC.\n###### Related Nodes\n- TO complex( cloud-region LocatedIn complex, MANY2ONE)\n- TO instance-group( cloud-region Uses instance-group, ONE2MANY)\n- TO l3-network( cloud-region Uses l3-network, MANY2MANY)\n- TO network-technology( cloud-region Uses network-technology, MANY2MANY)\n- TO zone( cloud-region LocatedIn zone, MANY2ONE)\n- FROM availability-zone (CHILD of cloud-region, availability-zone BelongsTo cloud-region, MANY2ONE)(1)\n- FROM dvs-switch (CHILD of cloud-region, dvs-switch BelongsTo cloud-region, MANY2ONE)\n- FROM esr-system-info (CHILD of cloud-region, esr-system-info BelongsTo cloud-region, MANY2ONE)(1)\n- FROM flavor (CHILD of cloud-region, flavor BelongsTo cloud-region, MANY2ONE)\n- FROM generic-vnf( generic-vnf LocatedIn cloud-region, MANY2ONE)\n- FROM group-assignment (CHILD of cloud-region, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM hpa-capability (CHILD of cloud-region, hpa-capability BelongsTo cloud-region, MANY2ONE)\n- FROM image (CHILD of cloud-region, image BelongsTo cloud-region, MANY2ONE)\n- FROM logical-link( logical-link LocatedIn cloud-region, MANY2MANY)\n- FROM oam-network (CHILD of cloud-region, oam-network BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver LocatedIn cloud-region, MANY2ONE)\n- FROM snapshot (CHILD of cloud-region, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM tenant (CHILD of cloud-region, tenant BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv4-address-list (CHILD of cloud-region, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv6-address-list (CHILD of cloud-region, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vlan-tag( vlan-tag BelongsTo cloud-region, MANY2ONE)\n- FROM volume-group (CHILD of cloud-region, volume-group BelongsTo cloud-region, MANY2ONE)\n\n-(1) IF this CLOUD-REGION node is deleted, this FROM node is DELETED also\n-CLOUD-REGION cannot be deleted if related to DVS-SWITCH,FLAVOR,GROUP-ASSIGNMENT,HPA-CAPABILITY,IMAGE,OAM-NETWORK,SNAPSHOT,TENANT,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST,VOLUME-GROUP\n", 
      "properties": {
        "availability-zones": {
          "items": {
            "$ref": "#/getDefinitions/availability-zone"
          }, 
          "type": "array"
        }, 
        "cloud-extra-info": {
          "description": "ESR inputs extra information about the VIM or Cloud which will be decoded by MultiVIM.", 
          "type": "string"
        }, 
        "cloud-owner": {
          "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
          "type": "string"
        }, 
        "cloud-region-id": {
          "description": "Identifier used by the vendor for the region. Second part of composite key", 
          "type": "string"
        }, 
        "cloud-region-version": {
          "description": "Software version employed at the site.  NOTE - THIS FIELD IS NOT KEPT UP TO DATE.", 
          "type": "string"
        }, 
        "cloud-type": {
          "description": "Type of the cloud (e.g., openstack)", 
          "type": "string"
        }, 
        "cloud-zone": {
          "description": "Zone where the cloud is homed.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "complex-name": {
          "description": "complex name for cloud-region instance.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "dvs-switches": {
          "items": {
            "$ref": "#/getDefinitions/dvs-switch"
          }, 
          "type": "array"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "flavors": {
          "items": {
            "$ref": "#/getDefinitions/flavor"
          }, 
          "type": "array"
        }, 
        "group-assignments": {
          "items": {
            "$ref": "#/getDefinitions/group-assignment"
          }, 
          "type": "array"
        }, 
        "hpa-capabilities": {
          "description": "List of cloud-region specific HPA Capabilities", 
          "items": {
            "$ref": "#/getDefinitions/hpa-capability"
          }, 
          "type": "array"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "images": {
          "items": {
            "$ref": "#/getDefinitions/image"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "items": {
            "$ref": "#/getDefinitions/oam-network"
          }, 
          "type": "array"
        }, 
        "owner-defined-type": {
          "description": "Cloud-owner defined type indicator (e.g., dcp, lcp)", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "snapshots": {
          "items": {
            "$ref": "#/getDefinitions/snapshot"
          }, 
          "type": "array"
        }, 
        "sriov-automation": {
          "description": "Whether the cloud region supports (true) or does not support (false) SR-IOV automation.", 
          "type": "string"
        }, 
        "tenants": {
          "items": {
            "$ref": "#/getDefinitions/tenant"
          }, 
          "type": "array"
        }, 
        "upgrade-cycle": {
          "description": "Upgrade cycle for the cloud region. For AIC regions upgrade cycle is designated by A,B,C etc.", 
          "type": "string"
        }, 
        "vip-ipv4-address-list": {
          "items": {
            "$ref": "#/getDefinitions/vip-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "vip-ipv6-address-list": {
          "items": {
            "$ref": "#/getDefinitions/vip-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "volume-groups": {
          "items": {
            "$ref": "#/getDefinitions/volume-group"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "cloud-owner", 
        "cloud-region-id"
      ]
    }, 
    "cloud-regions": {
      "properties": {
        "cloud-region": {
          "items": {
            "$ref": "#/getDefinitions/cloud-region"
          }, 
          "type": "array"
        }
      }
    }, 
    "collection": {
      "description": "represents the collection resource in the TOSCA model\n###### Related Nodes\n- FROM instance-group( instance-group BelongsTo collection, ONE2ONE)\n- FROM service-instance( service-instance ComposedOf collection, ONE2ONE)\n", 
      "properties": {
        "collection-customization-id": {
          "description": "Captures the id of all the configuration used to customize the resource for the service", 
          "type": "string"
        }, 
        "collection-function": {
          "description": "Collection function", 
          "type": "string"
        }, 
        "collection-id": {
          "description": "Collection Object UUID", 
          "type": "string"
        }, 
        "collection-name": {
          "description": "collection name", 
          "type": "string"
        }, 
        "collection-role": {
          "description": "Collection Role", 
          "type": "string"
        }, 
        "collection-type": {
          "description": "Collection type", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "Model Version", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "orchestration status", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "collection-id"
      ]
    }, 
    "collections": {
      "properties": {
        "collection": {
          "items": {
            "$ref": "#/getDefinitions/collection"
          }, 
          "type": "array"
        }
      }
    }, 
    "common": {
      "description": "Namespace for common inventory resources.\n", 
      "properties": {
        "contacts": {
          "items": {
            "$ref": "#/getDefinitions/contact"
          }, 
          "type": "array"
        }
      }
    }, 
    "complex": {
      "description": "Collection of physical locations that can house cloud-regions.\n###### Related Nodes\n- TO l3-network( complex Uses l3-network, MANY2MANY)\n- FROM availability-zone( availability-zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn complex, MANY2ONE)\n- FROM ctag-pool (CHILD of complex, ctag-pool BelongsTo complex, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf LocatedIn complex, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo complex, MANY2MANY)\n- FROM pnf( pnf LocatedIn complex, MANY2ONE)\n- FROM pserver( pserver LocatedIn complex, MANY2ONE)\n- FROM site-resource( site-resource Uses complex, MANY2MANY)\nFor CCVPN Usecase\n- FROM vce( vce LocatedIn complex, MANY2MANY)\n- FROM volume-group( volume-group LocatedIn complex, MANY2ONE)\n- FROM vpls-pe( vpls-pe LocatedIn complex, MANY2ONE)\n- FROM zone( zone LocatedIn complex, MANY2ONE)\n\n-(1) IF this COMPLEX node is deleted, this FROM node is DELETED also\n-COMPLEX cannot be deleted if related to AVAILABILITY-ZONE,CLOUD-REGION,GENERIC-VNF,OAM-NETWORK,PNF,PSERVER,VCE,VOLUME-GROUP,VPLS-PE,ZONE\n", 
      "properties": {
        "city": {
          "type": "string"
        }, 
        "complex-name": {
          "description": "Gamma complex name for LCP instance.", 
          "type": "string"
        }, 
        "country": {
          "type": "string"
        }, 
        "ctag-pools": {
          "items": {
            "$ref": "#/getDefinitions/ctag-pool"
          }, 
          "type": "array"
        }, 
        "data-center-code": {
          "description": "Data center code which can be an alternate way to identify a complex", 
          "type": "string"
        }, 
        "elevation": {
          "type": "string"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "lata": {
          "type": "string"
        }, 
        "latitude": {
          "type": "string"
        }, 
        "longitude": {
          "type": "string"
        }, 
        "physical-location-id": {
          "description": "Unique identifier for physical location, e.g., CLLI", 
          "type": "string"
        }, 
        "physical-location-type": {
          "description": "Type, e.g., central office, data center.", 
          "type": "string"
        }, 
        "postal-code": {
          "type": "string"
        }, 
        "region": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "state": {
          "type": "string"
        }, 
        "street1": {
          "type": "string"
        }, 
        "street2": {
          "type": "string"
        }
      }, 
      "required": [
        "physical-location-id", 
        "physical-location-type", 
        "street1", 
        "city", 
        "postal-code", 
        "country", 
        "region"
      ]
    }, 
    "complexes": {
      "description": "Collection of physical locations that can house cloud-regions.\n", 
      "properties": {
        "complex": {
          "items": {
            "$ref": "#/getDefinitions/complex"
          }, 
          "type": "array"
        }
      }
    }, 
    "configuration": {
      "description": "Generic configuration object.\n###### Related Nodes\n- TO allotted-resource( configuration Uses allotted-resource, ONE2ONE)(2)\n- TO configuration( configuration BindsTo configuration, ONE2ONE)\n- TO l-interface( configuration AppliesTo l-interface, ONE2MANY)\n- TO l3-network( configuration PartOf l3-network, MANY2MANY)\n- TO logical-link( configuration Uses logical-link, ONE2MANY)(2)\n- TO pnf( configuration AppliesTo pnf, MANY2MANY)\n- TO vnfc( configuration Uses vnfc, ONE2ONE)(4)\n- TO vpn-binding( configuration Uses vpn-binding, MANY2ONE)\n- TO vrf( configuration Uses vrf, ONE2MANY)\nA Configuration uses VRFs\n- FROM configuration( configuration BindsTo configuration, ONE2ONE)\n- FROM evc (CHILD of configuration, evc BelongsTo configuration, ONE2ONE)(1)\n- FROM forwarder( forwarder Uses configuration, ONE2ONE)(3)\n- FROM forwarder-evc (CHILD of configuration, forwarder-evc BelongsTo configuration, ONE2ONE)(1)\n- FROM forwarding-path( forwarding-path Uses configuration, ONE2ONE)(3)\n- FROM generic-vnf( generic-vnf Uses configuration, ONE2MANY)(3)\n- FROM metadatum (CHILD of configuration, metadatum BelongsTo configuration, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses configuration, ONE2MANY)\n- FROM service-instance( service-instance ComposedOf configuration, MANY2MANY)\n\n-(1) IF this CONFIGURATION node is deleted, this FROM node is DELETED also\n-(2) IF this CONFIGURATION node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this CONFIGURATION is DELETED also\n-(4) IF this TO node is deleted, this CONFIGURATION is DELETED also\n", 
      "properties": {
        "config-policy-name": {
          "description": "Used to capture the name of the fabric configuration policy that was used to generate the payload sent to PINC for fabric configuration.", 
          "type": "string"
        }, 
        "configuration-id": {
          "description": "UUID assigned to configuration.", 
          "type": "string"
        }, 
        "configuration-name": {
          "description": "Name of the configuration.", 
          "type": "string"
        }, 
        "configuration-selflink": {
          "description": "URL to endpoint where AAI can get more details from SDN-GC.", 
          "type": "string"
        }, 
        "configuration-sub-type": {
          "description": "vprobe, pprobe.", 
          "type": "string"
        }, 
        "configuration-type": {
          "description": "port-mirroring-configuration.", 
          "type": "string"
        }, 
        "evcs": {
          "items": {
            "$ref": "#/getDefinitions/evc"
          }, 
          "type": "array"
        }, 
        "forwarder-evcs": {
          "items": {
            "$ref": "#/getDefinitions/forwarder-evc"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "Indicates the entity that will manage this feature. Could be an organization or the name of the application as well.", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/getDefinitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-customization-id": {
          "description": "id of  the configuration used to customize the resource", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of the configuration.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tunnel-bandwidth": {
          "description": "DHV Site Effective Bandwidth", 
          "type": "string"
        }, 
        "vendor-allowed-max-bandwidth": {
          "description": "Velocloud Nominal Throughput - VNT", 
          "type": "string"
        }
      }, 
      "required": [
        "configuration-id", 
        "configuration-type"
      ]
    }, 
    "configurations": {
      "description": "Collection of configurations\n", 
      "properties": {
        "configuration": {
          "items": {
            "$ref": "#/getDefinitions/configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "connectivities": {
      "description": "Collection of connectivities\n", 
      "properties": {
        "connectivity": {
          "items": {
            "$ref": "#/getDefinitions/connectivity"
          }, 
          "type": "array"
        }
      }
    }, 
    "connectivity": {
      "description": "Instance of a connectivity\n###### Related Nodes\n- TO ext-aai-network( connectivity BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( connectivity PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( connectivity PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this connectivity.", 
          "type": "string"
        }, 
        "access-ltp-id": {
          "description": "Store the id of the access ltp of this connectivity.", 
          "type": "string"
        }, 
        "access-node-id": {
          "description": "Store the id of the access node of this connectivity.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this connectivity.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this connectivity.", 
          "type": "string"
        }, 
        "bandwidth-profile-name": {
          "description": "Store the name of a bandwidth profile.", 
          "type": "string"
        }, 
        "cbs": {
          "description": "Store the CBS of this connectivity.", 
          "type": "string"
        }, 
        "cir": {
          "description": "Store the CIR of this connectivity.", 
          "type": "string"
        }, 
        "color-aware": {
          "description": "Store the color-awareness of this connectivity.", 
          "type": "string"
        }, 
        "connectivity-id": {
          "description": "Uniquely identifies this connectivity by id", 
          "type": "string"
        }, 
        "connectivity-selflink": {
          "description": "Store the link to get more information for this connectivity.", 
          "type": "string"
        }, 
        "coupling-flag": {
          "description": "Store the coupling flag of this connectivity.", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "Store the cvlan for this connectivity.", 
          "type": "string"
        }, 
        "ebs": {
          "description": "Store the EBS of this connectivity.", 
          "type": "string"
        }, 
        "eir": {
          "description": "Store the EIR of this connectivity.", 
          "type": "string"
        }, 
        "etht-svc-name": {
          "description": "The ethernet service name for this connectivity.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Store the type of a bandwidth profile.", 
          "type": "string"
        }
      }, 
      "required": [
        "connectivity-id"
      ]
    }, 
    "connector": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n###### Related Nodes\n- TO virtual-data-center( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM metadatum (CHILD of connector, metadatum BelongsTo connector, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses connector, MANY2MANY)\n\n-(1) IF this CONNECTOR node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "metadata": {
          "items": {
            "$ref": "#/getDefinitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-instance-id": {
          "description": "Unique id of resource instance.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "resource-instance-id"
      ]
    }, 
    "connectors": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n", 
      "properties": {
        "connector": {
          "items": {
            "$ref": "#/getDefinitions/connector"
          }, 
          "type": "array"
        }
      }
    }, 
    "constrained-element-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-constraint (PARENT of constrained-element-set, constrained-element-set BelongsTo model-constraint, MANY2ONE)(4)\n- TO model-element (PARENT of constrained-element-set, constrained-element-set BelongsTo model-element, MANY2ONE)(4)\n- FROM element-choice-set (CHILD of constrained-element-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(1)\n\n-(1) IF this CONSTRAINED-ELEMENT-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this CONSTRAINED-ELEMENT-SET is DELETED also\n", 
      "properties": {
        "check-type": {
          "type": "string"
        }, 
        "constrained-element-set-uuid": {
          "type": "string"
        }, 
        "constraint-type": {
          "type": "string"
        }, 
        "element-choice-sets": {
          "items": {
            "$ref": "#/getDefinitions/element-choice-set"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "constrained-element-set-uuid", 
        "constraint-type", 
        "check-type"
      ]
    }, 
    "constrained-element-sets": {
      "properties": {
        "constrained-element-set": {
          "items": {
            "$ref": "#/getDefinitions/constrained-element-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "contact": {
      "description": "Contacts store the vendor information and have a relationship to the generic-vnf.  In 1902, this will be populated by SDN-GC\n###### Related Nodes\n- TO generic-vnf( contact supports generic-vnf, MANY2MANY)\n", 
      "properties": {
        "contact-email": {
          "description": "e-mail of contact", 
          "type": "string"
        }, 
        "contact-name": {
          "description": "Name of the contact", 
          "type": "string"
        }, 
        "contact-telephone": {
          "description": "Tel no. of contact", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vendor-type": {
          "description": "NI (Network Integrator)SI (System Integrator) 3rd Party LCM", 
          "type": "string"
        }
      }, 
      "required": [
        "contact-name"
      ]
    }, 
    "contacts": {
      "description": "Collection of contacts\n", 
      "properties": {
        "contact": {
          "items": {
            "$ref": "#/getDefinitions/contact"
          }, 
          "type": "array"
        }
      }
    }, 
    "cp": {
      "description": "point of attachment from services or resources to a virtual link or network.\n###### Related Nodes\n- FROM l-interface( l-interface LinksTo cp, ONE2ONE)\n- FROM l3-interface-ipv4-address-list (CHILD of cp, l3-interface-ipv4-address-list BelongsTo cp, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of cp, l3-interface-ipv6-address-list BelongsTo cp, MANY2ONE)(1)\n- FROM l3-network( l3-network LinksTo cp, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list Uses cp, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list Uses cp, MANY2MANY)\n- FROM vlan-tag( vlan-tag Uses cp, MANY2MANY)\n- FROM vnfc (PARENT of cp, vnfc BelongsTo cp, ONE2MANY)\ncp is child of vnfc(3)\n\n-(1) IF this CP node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this CP is DELETED also\n", 
      "properties": {
        "cp-instance-id": {
          "description": "Unique ID of the connection point.", 
          "type": "string"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "port-id": {
          "description": "port index to represent multiple CPs on VNFC connected to same network.", 
          "format": "int32", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cp-instance-id"
      ]
    }, 
    "cps": {
      "description": "Collection of connection points.\n", 
      "properties": {
        "cp": {
          "items": {
            "$ref": "#/getDefinitions/cp"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-assignment": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of ctag-assignment, ctag-assignment BelongsTo l3-network, MANY2ONE)(4)\n- FROM service-instance( service-instance Uses ctag-assignment, ONE2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "id.", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vlan-id-inner"
      ]
    }, 
    "ctag-assignments": {
      "properties": {
        "ctag-assignment": {
          "items": {
            "$ref": "#/getDefinitions/ctag-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-pool": {
      "description": "A collection of C tags (vlan tags) grouped for a specific purpose.\n###### Related Nodes\n- TO availability-zone( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- TO complex (PARENT of ctag-pool, ctag-pool BelongsTo complex, MANY2ONE)(4)\n- FROM generic-vnf( generic-vnf Uses ctag-pool, MANY2MANY)\n- FROM vpls-pe( vpls-pe Uses ctag-pool, MANY2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-POOL is DELETED also\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone", 
          "type": "string"
        }, 
        "ctag-pool-purpose": {
          "description": "Describes what the intended purpose of this pool is.", 
          "type": "string"
        }, 
        "ctag-values": {
          "description": "Comma separated list of ctags", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "target-pe": {
          "description": "The Target provider edge router", 
          "type": "string"
        }
      }, 
      "required": [
        "target-pe", 
        "availability-zone-name", 
        "ctag-pool-purpose"
      ]
    }, 
    "ctag-pools": {
      "properties": {
        "ctag-pool": {
          "items": {
            "$ref": "#/getDefinitions/ctag-pool"
          }, 
          "type": "array"
        }
      }
    }, 
    "customer": {
      "description": "customer identifiers to provide linkage back to BSS information.\n###### Related Nodes\n- FROM service-subscription (CHILD of customer, service-subscription BelongsTo customer, MANY2ONE)(1)\n- FROM vpn-binding( vpn-binding Uses customer, MANY2MANY)\n\n-(1) IF this CUSTOMER node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "global-customer-id": {
          "description": "Global customer id used across ECOMP to uniquely identify customer.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-subscriptions": {
          "items": {
            "$ref": "#/getDefinitions/service-subscription"
          }, 
          "type": "array"
        }, 
        "subscriber-name": {
          "description": "Subscriber name, an alternate way to retrieve a customer.", 
          "type": "string"
        }, 
        "subscriber-type": {
          "description": "Subscriber type, a way to provide VID with only the INFRA customers.", 
          "type": "string"
        }
      }, 
      "required": [
        "global-customer-id", 
        "subscriber-name", 
        "subscriber-type"
      ]
    }, 
    "customers": {
      "description": "Collection of customer identifiers to provide linkage back to BSS information.\n", 
      "properties": {
        "customer": {
          "items": {
            "$ref": "#/getDefinitions/customer"
          }, 
          "type": "array"
        }
      }
    }, 
    "cvlan-tag-entry": {
      "properties": {
        "cvlan-tag": {
          "description": "See mis-na-virtualization-platform.yang", 
          "format": "int64", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cvlan-tag"
      ]
    }, 
    "cvlan-tags": {
      "properties": {
        "cvlan-tag-entry": {
          "items": {
            "$ref": "#/getDefinitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }
      }
    }, 
    "device": {
      "description": "Instance of a device\n###### Related Nodes\n- TO ext-aai-network( device BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO generic-vnf( device Uses generic-vnf, ONE2MANY)\nFor CCVPN Usecase\n- TO service-instance( device PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "class": {
          "description": "Store the class of this device.", 
          "type": "string"
        }, 
        "description": {
          "description": "Store the description of this device.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Uniquely identifies this device by id", 
          "type": "string"
        }, 
        "device-name": {
          "description": "Store the name of this device.", 
          "type": "string"
        }, 
        "esn": {
          "description": "Store the esn of this device.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "system-ip": {
          "description": "Store the system-ip of this device.", 
          "type": "string"
        }, 
        "system-ipv4": {
          "description": "Store the system-ipv4 of this device.", 
          "type": "string"
        }, 
        "system-ipv6": {
          "description": "Store the system-ipv6 of this device.", 
          "type": "string"
        }, 
        "type": {
          "description": "Store the type of this device.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "Store the vendor of this device.", 
          "type": "string"
        }, 
        "version": {
          "description": "Store the version of this device.", 
          "type": "string"
        }
      }, 
      "required": [
        "device-id"
      ]
    }, 
    "devices": {
      "description": "Collection of devices\n", 
      "properties": {
        "device": {
          "items": {
            "$ref": "#/getDefinitions/device"
          }, 
          "type": "array"
        }
      }
    }, 
    "dhcp-service": {
      "description": "Instance of a dhcp-service\n###### Related Nodes\n- FROM lan-port-config (PARENT of dhcp-service, lan-port-config Uses dhcp-service, ONE2MANY)\nFor CCVPN Usecase(3)\n\n-(3) IF this FROM node is deleted, this DHCP-SERVICE is DELETED also\n", 
      "properties": {
        "dhcp-service-id": {
          "description": "Uniquely identifies this dhcp-service by id", 
          "type": "string"
        }, 
        "dhcp-service-type": {
          "description": "Store the dhcp-service-type of this dhcp-service.", 
          "type": "string"
        }, 
        "dns": {
          "description": "Store the dns of this dhcp-service.", 
          "type": "string"
        }, 
        "domain-name": {
          "description": "Store the domain-name of this dhcp-service.", 
          "type": "string"
        }, 
        "lease-time": {
          "description": "Store the lease-time of this dhcp-service.", 
          "type": "string"
        }, 
        "nbns": {
          "description": "Store the nbns of this dhcp-service.", 
          "type": "string"
        }, 
        "ntp-primary": {
          "description": "Store the ntp-primary of this dhcp-service.", 
          "type": "string"
        }, 
        "ntp-secondary": {
          "description": "Store the ntp-secondary of this dhcp-service.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "server-ipv4-address": {
          "description": "Store the server-ip4-address of this dhcp-service.", 
          "type": "string"
        }, 
        "server-ipv6-address": {
          "description": "Store the server-ipv6-address of this dhcp-service.", 
          "type": "string"
        }, 
        "service-enable": {
          "description": "Store the service-enable of this dhcp-service.", 
          "type": "string"
        }
      }, 
      "required": [
        "dhcp-service-id"
      ]
    }, 
    "dhcp-services": {
      "description": "Collection of dhcp-services\n", 
      "properties": {
        "dhcp-service": {
          "items": {
            "$ref": "#/getDefinitions/dhcp-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "dvs-switch": {
      "description": "Digital virtual switch metadata, used by SDN-C to configure VCEs.  A&AI needs to receive this data from the PO deployment team and administer it using the provisioningTool.sh into A&AI. \n###### Related Nodes\n- TO availability-zone( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- TO cloud-region (PARENT of dvs-switch, dvs-switch BelongsTo cloud-region, MANY2ONE)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "switch-name": {
          "description": "DVS switch name", 
          "type": "string"
        }, 
        "vcenter-url": {
          "description": "URL used to reach the vcenter", 
          "type": "string"
        }
      }, 
      "required": [
        "switch-name", 
        "vcenter-url"
      ]
    }, 
    "dvs-switches": {
      "description": "Collection of digital virtual switch metadata used for vmWare VCEs and GenericVnfs.\n", 
      "properties": {
        "dvs-switch": {
          "items": {
            "$ref": "#/getDefinitions/dvs-switch"
          }, 
          "type": "array"
        }
      }
    }, 
    "edge-prop-names": {
      "description": "Internal map to define the properties of an edge and interpret the map EdgeRules\n", 
      "properties": {
        "SVC-INFRA": {
          "type": "string"
        }, 
        "aai-uuid": {
          "type": "string"
        }, 
        "contains-other-v": {
          "type": "string"
        }, 
        "delete-other-v": {
          "type": "string"
        }, 
        "direction": {
          "type": "string"
        }, 
        "edgeLabel": {
          "type": "string"
        }, 
        "multiplicityRule": {
          "type": "string"
        }, 
        "prevent-delete": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-request": {
      "properties": {
        "edge-tag": {
          "type": "string"
        }, 
        "include-node-filter": {
          "items": {
            "$ref": "#/getDefinitions/include-node-filter"
          }, 
          "type": "array"
        }, 
        "result-detail": {
          "type": "string"
        }, 
        "secondary-filter": {
          "items": {
            "$ref": "#/getDefinitions/secondary-filter"
          }, 
          "type": "array"
        }, 
        "start-node-filter": {
          "items": {
            "$ref": "#/getDefinitions/start-node-filter"
          }, 
          "type": "array"
        }, 
        "start-node-type": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-result": {
      "properties": {
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/getDefinitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }
      }
    }, 
    "element-choice-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO constrained-element-set (PARENT of element-choice-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(4)\n- FROM model-element (CHILD of element-choice-set, model-element BelongsTo element-choice-set, MANY2ONE)(1)\n\n-(1) IF this ELEMENT-CHOICE-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ELEMENT-CHOICE-SET is DELETED also\n", 
      "properties": {
        "cardinality": {
          "type": "string"
        }, 
        "element-choice-set-name": {
          "type": "string"
        }, 
        "element-choice-set-uuid": {
          "type": "string"
        }, 
        "model-elements": {
          "items": {
            "$ref": "#/getDefinitions/model-element"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "element-choice-set-uuid", 
        "element-choice-set-name"
      ]
    }, 
    "element-choice-sets": {
      "properties": {
        "element-choice-set": {
          "items": {
            "$ref": "#/getDefinitions/element-choice-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "entitlement": {
      "description": "Metadata for entitlement group.\n###### Related Nodes\n- TO generic-vnf (PARENT of entitlement, entitlement BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of entitlement, entitlement BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ENTITLEMENT is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-uuid": {
          "description": "Unique ID of an entitlement resource.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "entitlements": {
      "description": "Entitlements, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "entitlement": {
          "items": {
            "$ref": "#/getDefinitions/entitlement"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-ems": {
      "description": "Persist EMS address information used by EMS driver.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-ems, esr-system-info BelongsTo esr-ems, MANY2ONE)(1)\n\n-(1) IF this ESR-EMS node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "ems-id": {
          "description": "Unique ID of EMS.", 
          "type": "string"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "ems-id"
      ]
    }, 
    "esr-ems-list": {
      "properties": {
        "esr-ems": {
          "items": {
            "$ref": "#/getDefinitions/esr-ems"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-system-info": {
      "description": "Persist common address information of external systems.\n###### Related Nodes\n- TO cloud-region (PARENT of esr-system-info, esr-system-info BelongsTo cloud-region, MANY2ONE)(4)\n- TO esr-ems (PARENT of esr-system-info, esr-system-info BelongsTo esr-ems, MANY2ONE)(4)\n- TO esr-thirdparty-sdnc (PARENT of esr-system-info, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(4)\n- TO esr-vnfm (PARENT of esr-system-info, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(4)\n- FROM ext-aai-network (PARENT of esr-system-info, ext-aai-network Uses esr-system-info, ONE2MANY)\nFor CCVPN Usecase(3)\n\n-(3) IF this FROM node is deleted, this ESR-SYSTEM-INFO is DELETED also\n-(4) IF this TO node is deleted, this ESR-SYSTEM-INFO is DELETED also\n", 
      "properties": {
        "cloud-domain": {
          "description": "domain info for authentication.", 
          "type": "string"
        }, 
        "default-tenant": {
          "description": "default tenant of VIM.", 
          "type": "string"
        }, 
        "esr-system-info-id": {
          "description": "Unique ID of esr system info.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "service IP of ftp server.", 
          "type": "string"
        }, 
        "openstack-region-id": {
          "description": "OpenStack region ID used by MultiCloud plugin to interact with an OpenStack instance.", 
          "type": "string"
        }, 
        "passive": {
          "description": "ftp passive mode or not.", 
          "type": "boolean"
        }, 
        "password": {
          "description": "password used to access external systems.", 
          "type": "string"
        }, 
        "port": {
          "description": "service port of ftp server.", 
          "type": "string"
        }, 
        "protocol": {
          "description": "protocol of third party SDNC, for example netconf/snmp.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "remote-path": {
          "description": "resource or performance data file path.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-url": {
          "description": "url used to access external systems.", 
          "type": "string"
        }, 
        "ssl-cacert": {
          "description": "ca file content if enabled ssl on auth-url.", 
          "type": "string"
        }, 
        "ssl-insecure": {
          "description": "Whether to verify VIM's certificate.", 
          "type": "boolean"
        }, 
        "system-name": {
          "description": "name of external system.", 
          "type": "string"
        }, 
        "system-status": {
          "description": "the status of external system.", 
          "type": "string"
        }, 
        "system-type": {
          "description": "it could be vim/vnfm/thirdparty-sdnc/ems-resource/ems-performance/ems-alarm.", 
          "type": "string"
        }, 
        "type": {
          "description": "type of external systems.", 
          "type": "string"
        }, 
        "user-name": {
          "description": "username used to access external systems.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "vendor of external systems.", 
          "type": "string"
        }, 
        "version": {
          "description": "version of external systems.", 
          "type": "string"
        }
      }, 
      "required": [
        "esr-system-info-id", 
        "user-name", 
        "password", 
        "system-type"
      ]
    }, 
    "esr-system-info-list": {
      "description": "Collection of persistent block-level external system auth info.\n", 
      "properties": {
        "esr-system-info": {
          "items": {
            "$ref": "#/getDefinitions/esr-system-info"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-thirdparty-sdnc": {
      "description": "Persist SDNC address information used by ONAP SDNC.\n###### Related Nodes\n- TO pnf( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM esr-system-info (CHILD of esr-thirdparty-sdnc, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(1)\n\n-(1) IF this ESR-THIRDPARTY-SDNC node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "esr-system-info-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "location": {
          "description": "used for DC type to indicate the location of SDNC, such as Core or Edge.", 
          "type": "string"
        }, 
        "product-name": {
          "description": "password used to access SDNC server.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "thirdparty-sdnc-id": {
          "description": "Unique ID of SDNC.", 
          "type": "string"
        }
      }, 
      "required": [
        "thirdparty-sdnc-id"
      ]
    }, 
    "esr-thirdparty-sdnc-list": {
      "properties": {
        "esr-thirdparty-sdnc": {
          "items": {
            "$ref": "#/getDefinitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-vnfm": {
      "description": "Persist VNFM address information used by VF-C.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-vnfm, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(1)\n- FROM generic-vnf( generic-vnf DependsOn esr-vnfm, MANY2ONE)\n\n-(1) IF this ESR-VNFM node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "certificate-url": {
          "description": "certificate url of VNFM.", 
          "type": "string"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vim-id": {
          "description": "indecate the VIM to deploy VNF.", 
          "type": "string"
        }, 
        "vnfm-id": {
          "description": "Unique ID of VNFM.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfm-id"
      ]
    }, 
    "esr-vnfm-list": {
      "properties": {
        "esr-vnfm": {
          "items": {
            "$ref": "#/getDefinitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "evc": {
      "description": "evc object is an optional child object of the Configuration object.\n###### Related Nodes\n- TO configuration (PARENT of evc, evc BelongsTo configuration, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this EVC is DELETED also\n", 
      "properties": {
        "cir-units": {
          "description": "CIR units", 
          "type": "string"
        }, 
        "cir-value": {
          "description": "Commited Information Rate", 
          "type": "string"
        }, 
        "collector-pop-clli": {
          "description": "Collector POP CLLI (from the hostname of the access pnf)", 
          "type": "string"
        }, 
        "connection-diversity-group-id": {
          "description": "Diversity Group ID", 
          "type": "string"
        }, 
        "esp-evc-cir-units": {
          "description": "CIR units (For ESP)", 
          "type": "string"
        }, 
        "esp-evc-cir-value": {
          "description": "Committed Information Rate (For ESP)", 
          "type": "string"
        }, 
        "esp-evc-circuit-id": {
          "description": "EVC Circuit ID of ESP EVC", 
          "type": "string"
        }, 
        "esp-itu-code": {
          "description": "Identifies ESP", 
          "type": "string"
        }, 
        "evc-id": {
          "description": "Unique/key field for the evc object", 
          "type": "string"
        }, 
        "forwarding-path-topology": {
          "description": "Point-to-Point, Multi-Point", 
          "type": "string"
        }, 
        "inter-connect-type-ingress": {
          "description": "Interconnect type on ingress side of EVC.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-hours": {
          "description": "formerly Performance Group", 
          "type": "string"
        }, 
        "tagmode-access-egress": {
          "description": "tagMode for network side of EVC", 
          "type": "string"
        }, 
        "tagmode-access-ingress": {
          "description": "tagode for collector side of EVC", 
          "type": "string"
        }
      }, 
      "required": [
        "evc-id"
      ]
    }, 
    "evcs": {
      "properties": {
        "evc": {
          "items": {
            "$ref": "#/getDefinitions/evc"
          }, 
          "type": "array"
        }
      }
    }, 
    "ext-aai-network": {
      "description": "Refer to an external AAI in another ONAP.\n###### Related Nodes\n- TO esr-system-info (PARENT of ext-aai-network, ext-aai-network Uses esr-system-info, ONE2MANY)\nFor CCVPN Usecase(2)\n- FROM connectivity( connectivity BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM device( device BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM lan-port-config( lan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM logical-link( logical-link BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM network-resource( network-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM pnf( pnf BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM sdwan-vpn( sdwan-vpn BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM site-resource( site-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM vpn-binding( vpn-binding BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM wan-port-config( wan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n\n-(2) IF this EXT-AAI-NETWORK node is deleted, this TO node is DELETED also\n-EXT-AAI-NETWORK cannot be deleted if related to CONNECTIVITY,DEVICE,LAN-PORT-CONFIG,LOGICAL-LINK,NETWORK-RESOURCE,PNF,SDWAN-VPN,SITE-RESOURCE,VPN-BINDING,WAN-PORT-CONFIG\n", 
      "properties": {
        "aai-id": {
          "description": "Unique ID of the referenced AAI.", 
          "type": "string"
        }, 
        "esr-system-info": {
          "$ref": "#/getDefinitions/esr-system-info", 
          "type": "object"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "schema-version": {
          "description": "Schema version of the referenced AAI.", 
          "type": "string"
        }
      }, 
      "required": [
        "aai-id"
      ]
    }, 
    "ext-aai-networks": {
      "properties": {
        "ext-aai-network": {
          "items": {
            "$ref": "#/getDefinitions/ext-aai-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "external-system": {
      "description": "Namespace for external system.\n", 
      "properties": {
        "esr-ems-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-ems"
          }, 
          "type": "array"
        }, 
        "esr-thirdparty-sdnc-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }, 
        "esr-vnfm-list": {
          "items": {
            "$ref": "#/getDefinitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-properties": {
      "description": "Extra properties for inventory item for response list\n", 
      "properties": {
        "extra-property": {
          "items": {
            "$ref": "#/getDefinitions/extra-property"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-property": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "flavor": {
      "description": "Openstack flavor.\n###### Related Nodes\n- TO cloud-region (PARENT of flavor, flavor BelongsTo cloud-region, MANY2ONE)\n- TO pserver( flavor CanBeInstantiatedIn pserver, MANY2MANY)\nHPA Capacity getting the compute nodes from given flavor\n- FROM hpa-capability (CHILD of flavor, hpa-capability BelongsTo flavor, MANY2ONE)\n- FROM vserver( vserver Uses flavor, MANY2ONE)\n\n-FLAVOR cannot be deleted if related to HPA-CAPABILITY,VSERVER\n", 
      "properties": {
        "flavor-disabled": {
          "description": "Boolean as to whether this flavor is no longer enabled", 
          "type": "boolean"
        }, 
        "flavor-disk": {
          "description": "Disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-ephemeral": {
          "description": "Amount of ephemeral disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-id": {
          "description": "Flavor id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "flavor-is-public": {
          "description": "whether flavor is available to all users or private to the tenant it was created in.", 
          "type": "boolean"
        }, 
        "flavor-name": {
          "description": "Cloud Region Flavor name", 
          "type": "string"
        }, 
        "flavor-ram": {
          "description": "Amount of memory", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "flavor-swap": {
          "description": "amount of swap space allocation", 
          "type": "string"
        }, 
        "flavor-vcpus": {
          "description": "Number of CPUs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "hpa-capabilities": {
          "description": "List of flavor specific HPA Capabilities", 
          "items": {
            "$ref": "#/getDefinitions/hpa-capability"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "flavor-id", 
        "flavor-name", 
        "flavor-selflink"
      ]
    }, 
    "flavors": {
      "description": "Collection of openstack flavors.\n", 
      "properties": {
        "flavor": {
          "items": {
            "$ref": "#/getDefinitions/flavor"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarder": {
      "description": "Entity describing a sequenced segment of forwarding path\n###### Related Nodes\n- TO configuration( forwarder Uses configuration, ONE2ONE)(2)\n- TO forwarding-path (PARENT of forwarder, forwarder BelongsTo forwarding-path, MANY2ONE)(4)\n- TO generic-vnf( forwarder AppliesTo generic-vnf, MANY2MANY)\nPoints to the generic-vnf(s) involved in this forwarding step.\n- TO l-interface( forwarder ForwardsTo l-interface, MANY2MANY)\n- TO lag-interface( forwarder ForwardsTo lag-interface, MANY2MANY)\n- TO p-interface( forwarder ForwardsTo p-interface, MANY2MANY)\n\n-(2) IF this FORWARDER node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDER is DELETED also\n", 
      "properties": {
        "forwarder-role": {
          "description": "ingress, intermediate, egress", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "sequence": {
          "description": "Unique ID of this segmentation", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "sequence"
      ]
    }, 
    "forwarder-evc": {
      "description": "forwarder object is an optional child object of the Configuration object.\n###### Related Nodes\n- TO configuration (PARENT of forwarder-evc, forwarder-evc BelongsTo configuration, ONE2ONE)(4)\n- FROM vlan-mapping (CHILD of forwarder-evc, vlan-mapping BelongsTo forwarder-evc, MANY2ONE)(1)\n\n-(1) IF this FORWARDER-EVC node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDER-EVC is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit ID from customer/ESP/ingress end of EVC, or reference to beater circuit on gateway/network/egress end of EVC", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "CVLAN value for ingress of egress forwarder.", 
          "type": "string"
        }, 
        "forwarder-evc-id": {
          "description": "Key for forwarder-evc object", 
          "type": "string"
        }, 
        "ivlan": {
          "description": "Internal VLAN.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "svlan": {
          "description": "SVLAN value for ingress of egress forwarder.", 
          "type": "string"
        }, 
        "vlan-mappings": {
          "items": {
            "$ref": "#/getDefinitions/vlan-mapping"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "forwarder-evc-id"
      ]
    }, 
    "forwarder-evcs": {
      "properties": {
        "forwarder-evc": {
          "items": {
            "$ref": "#/getDefinitions/forwarder-evc"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarders": {
      "properties": {
        "forwarder": {
          "items": {
            "$ref": "#/getDefinitions/forwarder"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarding-path": {
      "description": "Entity that describes the sequenced forwarding path between interfaces of services or resources\n###### Related Nodes\n- TO configuration( forwarding-path Uses configuration, ONE2ONE)(2)\n- TO service-instance( forwarding-path AppliesTo service-instance, MANY2ONE)(4)\n- FROM forwarder (CHILD of forwarding-path, forwarder BelongsTo forwarding-path, MANY2ONE)(1)\n\n-(1) IF this FORWARDING-PATH node is deleted, this FROM node is DELETED also\n-(2) IF this FORWARDING-PATH node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDING-PATH is DELETED also\n", 
      "properties": {
        "forwarders": {
          "items": {
            "$ref": "#/getDefinitions/forwarder"
          }, 
          "type": "array"
        }, 
        "forwarding-path-id": {
          "description": "Unique ID of this FP", 
          "type": "string"
        }, 
        "forwarding-path-name": {
          "description": "Name of the FP", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency. Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "the self link for this FP", 
          "type": "string"
        }
      }, 
      "required": [
        "forwarding-path-id", 
        "forwarding-path-name"
      ]
    }, 
    "forwarding-paths": {
      "properties": {
        "forwarding-path": {
          "items": {
            "$ref": "#/getDefinitions/forwarding-path"
          }, 
          "type": "array"
        }
      }
    }, 
    "generic-vnf": {
      "description": "General purpose VNF\n###### Related Nodes\n- TO availability-zone( generic-vnf Uses availability-zone, MANY2MANY)\n- TO cloud-region( generic-vnf LocatedIn cloud-region, MANY2ONE)\n- TO complex( generic-vnf LocatedIn complex, MANY2MANY)\n- TO configuration( generic-vnf Uses configuration, ONE2MANY)(2)\n- TO ctag-pool( generic-vnf Uses ctag-pool, MANY2MANY)\n- TO esr-vnfm( generic-vnf DependsOn esr-vnfm, MANY2ONE)\n- TO instance-group( generic-vnf MemberOf instance-group, MANY2MANY)\n- TO instance-group( generic-vnf Uses instance-group, ONE2MANY)\n- TO ipsec-configuration( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- TO l3-network( generic-vnf Uses l3-network, MANY2MANY)\n- TO nos-server( generic-vnf HostedOn nos-server, MANY2ONE)\n- TO pnf( generic-vnf HostedOn pnf, MANY2MANY)\n- TO pserver( generic-vnf HostedOn pserver, MANY2MANY)\n- TO tenant( generic-vnf BelongsTo tenant, MANY2ONE)\n- TO virtual-data-center( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- TO vnf-image( generic-vnf Uses vnf-image, MANY2ONE)\n- TO volume-group( generic-vnf DependsOn volume-group, ONE2MANY)\n- TO vserver( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM allotted-resource( allotted-resource PartOf generic-vnf, MANY2MANY)\n- FROM contact( contact supports generic-vnf, MANY2MANY)\n- FROM device( device Uses generic-vnf, ONE2MANY)\nFor CCVPN Usecase\n- FROM entitlement (CHILD of generic-vnf, entitlement BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM forwarder( forwarder AppliesTo generic-vnf, MANY2MANY)\nPoints to the generic-vnf(s) involved in this forwarding step.\n- FROM instance-group( instance-group BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM l-interface (CHILD of generic-vnf, l-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM lag-interface (CHILD of generic-vnf, lag-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM license (CHILD of generic-vnf, license BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM line-of-business( line-of-business Uses generic-vnf, MANY2MANY)\n- FROM logical-link( logical-link BridgedTo generic-vnf, MANY2MANY)\n- FROM network-profile( network-profile AppliesTo generic-vnf, MANY2MANY)\n- FROM platform( platform Uses generic-vnf, MANY2MANY)\n- FROM service-instance( service-instance ComposedOf generic-vnf, ONE2MANY)\n- FROM site-pair-set( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM vf-module (CHILD of generic-vnf, vf-module BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM vnfc( vnfc BelongsTo generic-vnf, MANY2ONE)(1)\n\n-(1) IF this GENERIC-VNF node is deleted, this FROM node is DELETED also\n-(2) IF this GENERIC-VNF node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "as-number": {
          "description": "as-number of the VNF", 
          "type": "string"
        }, 
        "encrypted-access-flag": {
          "description": "indicates whether generic-vnf access uses SSH", 
          "type": "boolean"
        }, 
        "entitlement-assignment-group-uuid": {
          "description": "UUID of the Entitlement group used for licensing VNFs, OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "entitlement-resource-uuid": {
          "description": "UUID of the specific entitlement resource.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "entitlements": {
          "items": {
            "$ref": "#/getDefinitions/entitlement"
          }, 
          "type": "array"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by generic-vnf.", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Gateway address", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Prefix length for oam-address", 
          "format": "int32", 
          "type": "integer"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "job-id": {
          "description": "job id corresponding to vnf", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "license-assignment-group-uuid": {
          "description": "UUID of the license assignment group.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "license-key-uuid": {
          "description": "UUID of the actual license resource.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "licenses": {
          "items": {
            "$ref": "#/getDefinitions/license"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "management-v6-address": {
          "description": "v6 management address", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "nf-function": {
          "description": "English description of Network function that the specific VNF deployment is providing", 
          "type": "string"
        }, 
        "nf-naming-code": {
          "description": "string assigned to this model used for naming purposes", 
          "type": "string"
        }, 
        "nf-role": {
          "description": "role in the network that this model will be providing", 
          "type": "string"
        }, 
        "nf-type": {
          "description": "Generic description of the type of NF", 
          "type": "string"
        }, 
        "nm-lan-v6-address": {
          "description": "v6 Loopback address", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Network Management profile of this VNF", 
          "type": "string"
        }, 
        "nnet": {
          "description": "number of network in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nshd": {
          "description": "number of associated SHD in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nvm": {
          "description": "number of vms in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.  Valid values are in-service-path and out-of-service-path.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, used by MSO.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-subzone": {
          "description": "represents sub zone of the rr plane", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not necessarily map to ASDC service models.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "summary-status": {
          "description": "details regarding the generic-vnf operation, PLEASE DISCONTINUE USE OF THIS FIELD.", 
          "type": "string"
        }, 
        "vcpu": {
          "description": "number of vcpus ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vcpu-units": {
          "description": "units associated with vcpu, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vdisk": {
          "description": "number of vdisks ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vdisk-units": {
          "description": "units associated with vdisk, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vf-modules": {
          "items": {
            "$ref": "#/getDefinitions/vf-module"
          }, 
          "type": "array"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for S-TAG to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory": {
          "description": "number of GB of memory ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory-units": {
          "description": "units associated with vmemory, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vnf-discriptor-name": {
          "description": "vnf discriptor name", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-instance-id": {
          "description": "vnf instance id.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-package-name": {
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-type", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "generic-vnfs": {
      "description": "Collection of VNFs\n", 
      "properties": {
        "generic-vnf": {
          "items": {
            "$ref": "#/getDefinitions/generic-vnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "group-assignment": {
      "description": "Openstack group-assignment used to store exclusivity groups (EG).\n###### Related Nodes\n- TO cloud-region (PARENT of group-assignment, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver MemberOf group-assignment, MANY2ONE)\n- FROM tenant( tenant MemberOf group-assignment, MANY2MANY)\n", 
      "properties": {
        "group-description": {
          "description": "Group description - description of the group", 
          "type": "string"
        }, 
        "group-id": {
          "description": "Group id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "group-name": {
          "description": "Group name - name assigned to the group", 
          "type": "string"
        }, 
        "group-type": {
          "description": "Group type - the type of group this instance refers to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "group-id", 
        "group-type", 
        "group-name"
      ]
    }, 
    "group-assignments": {
      "description": "Collection of openstack group assignments\n", 
      "properties": {
        "group-assignment": {
          "items": {
            "$ref": "#/getDefinitions/group-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "host-route": {
      "description": "###### Related Nodes\n- TO subnet (PARENT of host-route, host-route BelongsTo subnet, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HOST-ROUTE is DELETED also\n", 
      "properties": {
        "host-route-id": {
          "description": "host-route id", 
          "type": "string"
        }, 
        "next-hop": {
          "description": "Could be ip-address, hostname, or service-instance", 
          "type": "string"
        }, 
        "next-hop-type": {
          "description": "Should be ip-address, hostname, or service-instance to match next-hop", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-prefix": {
          "description": "subnet prefix", 
          "type": "string"
        }
      }, 
      "required": [
        "host-route-id", 
        "route-prefix", 
        "next-hop"
      ]
    }, 
    "host-routes": {
      "properties": {
        "host-route": {
          "items": {
            "$ref": "#/getDefinitions/host-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "hpa-capabilities": {
      "description": "Collection of HPA Capabilities\n", 
      "properties": {
        "hpa-capability": {
          "items": {
            "$ref": "#/getDefinitions/hpa-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "hpa-capability": {
      "description": "Represents a HPA capability\n###### Related Nodes\n- TO cloud-region (PARENT of hpa-capability, hpa-capability BelongsTo cloud-region, MANY2ONE)\n- TO flavor (PARENT of hpa-capability, hpa-capability BelongsTo flavor, MANY2ONE)\n- FROM hpa-feature-attributes (CHILD of hpa-capability, hpa-feature-attributes BelongsTo hpa-capability, MANY2ONE)(1)\n\n-(1) IF this HPA-CAPABILITY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "architecture": {
          "description": "Hardware architecture", 
          "type": "string"
        }, 
        "hpa-capability-id": {
          "description": "UUID to uniquely identify a HPA capability", 
          "type": "string"
        }, 
        "hpa-feature": {
          "description": "Name of the HPACapability", 
          "type": "string"
        }, 
        "hpa-feature-attributes": {
          "items": {
            "$ref": "#/getDefinitions/hpa-feature-attributes"
          }, 
          "type": "array"
        }, 
        "hpa-version": {
          "description": "HPA schema version", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-capability-id", 
        "hpa-feature"
      ]
    }, 
    "hpa-capacity": {
      "description": "HPA Capacity information for compute node\n###### Related Nodes\n- TO pserver (PARENT of hpa-capacity, hpa-capacity BelongsTo pserver, MANY2ONE)\nHPA Capacity KV for given compute node(4)\n\n-(4) IF this TO node is deleted, this HPA-CAPACITY is DELETED also\n", 
      "properties": {
        "hpa-capacity-key": {
          "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
          "type": "string"
        }, 
        "hpa-capacity-value": {
          "description": "JSON string specifying the capacity (total,free), unit and metadata of the specific HPA attribute", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-capacity-key"
      ]
    }, 
    "hpa-feature-attributes": {
      "description": "HPA Capability Feature attributes\n###### Related Nodes\n- TO hpa-capability (PARENT of hpa-feature-attributes, hpa-feature-attributes BelongsTo hpa-capability, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HPA-FEATURE-ATTRIBUTES is DELETED also\n", 
      "properties": {
        "hpa-attribute-key": {
          "description": "name of the specific HPA attribute", 
          "type": "string"
        }, 
        "hpa-attribute-value": {
          "description": "JSON string specifying the value, unit and type of the specific HPA attribute", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-attribute-key"
      ]
    }, 
    "image": {
      "description": "Openstack image.\n###### Related Nodes\n- TO cloud-region (PARENT of image, image BelongsTo cloud-region, MANY2ONE)\n- FROM metadatum (CHILD of image, metadatum BelongsTo image, MANY2ONE)(1)\n- FROM vserver( vserver Uses image, MANY2ONE)\n\n-(1) IF this IMAGE node is deleted, this FROM node is DELETED also\n-IMAGE cannot be deleted if related to VSERVER\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "image-architecture": {
          "description": "Operating system architecture.", 
          "type": "string"
        }, 
        "image-id": {
          "description": "Image id, expected to be unique across cloud region", 
          "type": "string"
        }, 
        "image-name": {
          "description": "Image name", 
          "type": "string"
        }, 
        "image-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "image-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "image-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/getDefinitions/metadatum"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "image-id", 
        "image-name", 
        "image-os-distro", 
        "image-os-version", 
        "image-selflink"
      ]
    }, 
    "images": {
      "description": "Collectio of Openstack images.\n", 
      "properties": {
        "image": {
          "items": {
            "$ref": "#/getDefinitions/image"
          }, 
          "type": "array"
        }
      }
    }, 
    "include-node-filter": {
      "properties": {
        "include-node-type": {
          "type": "string"
        }
      }
    }, 
    "instance-filter": {
      "description": "InstanceFilter for performing a named-query or model query\n"
    }, 
    "instance-filters": {
      "description": "InstanceFilters for performing a named-query or model query\n", 
      "properties": {
        "instance-filter": {
          "items": {
            "$ref": "#/getDefinitions/instance-filter"
          }, 
          "type": "array"
        }
      }
    }, 
    "instance-group": {
      "description": "General mechanism for grouping instances\n###### Related Nodes\n- TO collection( instance-group BelongsTo collection, ONE2ONE)\n- TO generic-vnf( instance-group BelongsTo generic-vnf, MANY2ONE)(4)\n- TO model( instance-group Targets model, MANY2MANY)\n- FROM allotted-resource( allotted-resource MemberOf instance-group, MANY2MANY)\n- FROM cloud-region( cloud-region Uses instance-group, ONE2MANY)\n- FROM generic-vnf( generic-vnf MemberOf instance-group, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses instance-group, ONE2MANY)\n- FROM l-interface( l-interface MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-network( l3-network MemberOf instance-group, MANY2MANY)\n- FROM pnf( pnf MemberOf instance-group, MANY2MANY)\n- FROM service-instance( service-instance Uses instance-group, ONE2MANY)\nMSO creates this edge on VNF Group Service creation\n- FROM service-instance( service-instance MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM vnfc( vnfc MemberOf instance-group, MANY2MANY)\n\n-(4) IF this TO node is deleted, this INSTANCE-GROUP is DELETED also\n", 
      "properties": {
        "description": {
          "description": "Descriptive text to help identify the usage of this instance-group", 
          "type": "string"
        }, 
        "id": {
          "description": "Instance Group ID, UUID assigned to this instance.", 
          "type": "string"
        }, 
        "instance-group-function": {
          "description": "Instance-Group Function", 
          "type": "string"
        }, 
        "instance-group-name": {
          "description": "Instance-Group Name.", 
          "type": "string"
        }, 
        "instance-group-role": {
          "description": "role of the instance group.", 
          "type": "string"
        }, 
        "instance-group-type": {
          "description": "Only valid value today is lower case ha for high availability", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "ASDC model version uid for this resource model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "instance-group-type"
      ]
    }, 
    "instance-groups": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "instance-group": {
          "items": {
            "$ref": "#/getDefinitions/instance-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory": {
      "properties": {
        "business": {
          "$ref": "#/getDefinitions/business", 
          "type": "object"
        }, 
        "cloud-infrastructure": {
          "$ref": "#/getDefinitions/cloud-infrastructure", 
          "type": "object"
        }, 
        "common": {
          "$ref": "#/getDefinitions/common", 
          "type": "object"
        }, 
        "external-system": {
          "$ref": "#/getDefinitions/external-system", 
          "type": "object"
        }, 
        "network": {
          "$ref": "#/getDefinitions/network", 
          "type": "object"
        }, 
        "service-design-and-creation": {
          "$ref": "#/getDefinitions/service-design-and-creation", 
          "type": "object"
        }
      }
    }, 
    "inventory-item": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/getDefinitions/inventory-item-data"
          }, 
          "type": "array"
        }, 
        "inventory-item-link": {
          "type": "string"
        }, 
        "inventory-item-type": {
          "type": "string"
        }, 
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/getDefinitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory-item-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-item": {
      "description": "Inventory item for response list\n", 
      "properties": {
        "extra-properties": {
          "$ref": "#/getDefinitions/extra-properties", 
          "type": "object"
        }, 
        "inventory-response-items": {
          "$ref": "#/getDefinitions/inventory-response-items", 
          "type": "object"
        }, 
        "model-name": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-items": {
      "description": "Container for inventory items in response list\n", 
      "properties": {
        "inventory-response-item": {
          "items": {
            "$ref": "#/getDefinitions/inventory-response-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "ipsec-configuration": {
      "description": "IPSec configuration node will contain various configuration data for the NMTE VNF. This node will have an edge to the generic-vnf (vnf type = TE). Starting 1607, this data will be populated by SDN-C\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- FROM vig-server (CHILD of ipsec-configuration, vig-server BelongsTo ipsec-configuration, MANY2ONE)(1)\n\n-(1) IF this IPSEC-CONFIGURATION node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "dpd-frequency": {
          "description": "Maximum number of DPD before claiming the tunnel is down", 
          "type": "string"
        }, 
        "dpd-interval": {
          "description": "The time between DPD probe", 
          "type": "string"
        }, 
        "ike-version": {
          "description": "can be 1 or 2", 
          "type": "string"
        }, 
        "ikev1-am-group-id": {
          "description": "Group name defined in VIG for clients using aggressive mode", 
          "type": "string"
        }, 
        "ikev1-am-password": {
          "description": "pre-shared key for the above group name", 
          "type": "string"
        }, 
        "ikev1-authentication": {
          "description": "Contains values like md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ikev1-dh-group": {
          "description": "Diffie-Hellman group like DH-GROUP2, DH-GROUP5, DH-GROUP14", 
          "type": "string"
        }, 
        "ikev1-encryption": {
          "description": "Encyption values like 3des-cbc, des-cbc, aes-128-cbc,\u00c2\u00a0aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ikev1-sa-lifetime": {
          "description": "Lifetime for IKEv1 SA", 
          "type": "string"
        }, 
        "ipsec-authentication": {
          "description": "md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ipsec-configuration-id": {
          "description": "UUID of this configuration", 
          "type": "string"
        }, 
        "ipsec-encryption": {
          "description": "3des-cbc, des-cbc, aes-128-cbc,\u00c2\u00a0aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ipsec-pfs": {
          "description": "enable PFS or not", 
          "type": "string"
        }, 
        "ipsec-sa-lifetime": {
          "description": "Life time for IPSec SA", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "requested-customer-name": {
          "description": "If the DMZ is a custom DMZ, this field will indicate the customer information", 
          "type": "string"
        }, 
        "requested-dmz-type": {
          "description": "ATT can offer a shared DMZ or a DMZ specific to a customer", 
          "type": "string"
        }, 
        "requested-encryption-strength": {
          "description": "Encryption values like 3des-cbc, des-cbc, aes-128-cbc, aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "requested-vig-address-type": {
          "description": "Indicate the type of VIG server like AVPN, INTERNET, BOTH", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "shared-dmz-network-address": {
          "description": "Network address of shared DMZ", 
          "type": "string"
        }, 
        "vig-servers": {
          "items": {
            "$ref": "#/getDefinitions/vig-server"
          }, 
          "type": "array"
        }, 
        "xauth-user-password": {
          "description": "Encrypted using the Juniper $9$ algorithm", 
          "type": "string"
        }, 
        "xauth-userid": {
          "description": "user ID for xAuth, sm-user,ucpeHostName,nmteHostName", 
          "type": "string"
        }
      }, 
      "required": [
        "ipsec-configuration-id"
      ]
    }, 
    "ipsec-configurations": {
      "properties": {
        "ipsec-configuration": {
          "items": {
            "$ref": "#/getDefinitions/ipsec-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "key-data": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "l-interface": {
      "description": "Logical interfaces, e.g., a vnic.\n###### Related Nodes\n- TO cp( l-interface LinksTo cp, ONE2ONE)\n- TO generic-vnf (PARENT of l-interface, l-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( l-interface MemberOf instance-group, MANY2MANY)\n- TO l-interface( l-interface BelongsTo l-interface, MANY2ONE)(4)\n- TO logical-link( l-interface LinksTo logical-link, MANY2MANY)(2)\n- TO newvce (PARENT of l-interface, l-interface BelongsTo newvce, MANY2ONE)(4)\n- TO p-interface (PARENT of l-interface, l-interface BindsTo p-interface, MANY2ONE)(4)\n- TO vserver (PARENT of l-interface, l-interface BindsTo vserver, MANY2ONE)(4)\n- TO lag-interface (PARENT of l-interface, l-interface BelongsTo lag-interface, MANY2ONE)(4)\n- FROM allotted-resource( allotted-resource Uses l-interface, ONE2MANY)\n- FROM configuration( configuration AppliesTo l-interface, ONE2MANY)\n- FROM forwarder( forwarder ForwardsTo l-interface, MANY2MANY)\n- FROM l-interface (PARENT of l-interface, l-interface BelongsTo l-interface, MANY2ONE)(4)\n- FROM logical-link( logical-link Source l-interface, MANY2MANY)(1)\n- FROM logical-link( logical-link Destination l-interface, MANY2MANY)(1)\n- FROM sriov-vf (CHILD of l-interface, sriov-vf BelongsTo l-interface, ONE2ONE)(1)\n- FROM vlan (CHILD of l-interface, vlan LinksTo l-interface, MANY2ONE)(1)\n- FROM vrf( vrf Uses l-interface, ONE2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of l-interface, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of l-interface, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses l-interface, ONE2MANY)\n\n-(1) IF this L-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this L-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this L-INTERFACE is DELETED also\n", 
      "properties": {
        "admin-status": {
          "description": "Administrative status of the interface. Valid values are 'up', 'down', or 'testing'.", 
          "type": "string"
        }, 
        "allowed-address-pairs": {
          "description": "Freeform field for storing an ip address, list of ip addresses or a subnet block.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name given to the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "E.g., CUSTOMER, UPLINK, etc.", 
          "type": "string"
        }, 
        "is-ip-unnumbered": {
          "description": "Flag indicating the interface uses the IP Unnumbered configuration.", 
          "type": "boolean"
        }, 
        "is-port-mirrored": {
          "description": "boolean indicatating whether or not port is a mirrored.", 
          "type": "boolean"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "macaddr": {
          "description": "MAC address for the interface", 
          "type": "string"
        }, 
        "management-option": {
          "description": "Whether A&AI should be managing this interface of not. Could have value like CUSTOMER", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network", 
          "type": "string"
        }, 
        "priority": {
          "description": "Priority used for fail-over. Valid values 1-1024, with 1 being the highest priority.", 
          "format": "int32", 
          "type": "integer"
        }, 
        "prov-status": {
          "description": "Prov Status of the logical interface. Valid values [PREPROV/NVTPROV/PROV].", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "sriov-vfs": {
          "items": {
            "$ref": "#/getDefinitions/sriov-vf"
          }, 
          "type": "array"
        }, 
        "v6-wan-link-ip": {
          "description": "Questionably placed - v6 ip addr of this interface (is in vr-lan-interface from Mary B.", 
          "type": "string"
        }, 
        "vlans": {
          "items": {
            "$ref": "#/getDefinitions/vlan"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "interface-name", 
        "is-port-mirrored", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "l-interfaces": {
      "description": "Collection of logical interfaces.\n", 
      "properties": {
        "l-interface": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "l3-interface-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cp (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo cp, MANY2ONE)(4)\n- TO instance-group( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV4-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv4-address"
      ]
    }, 
    "l3-interface-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cp (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo cp, MANY2ONE)(4)\n- TO instance-group( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV6-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv6-address"
      ]
    }, 
    "l3-network": {
      "description": "Generic network definition\n###### Related Nodes\n- TO cp( l3-network LinksTo cp, MANY2MANY)\n- TO instance-group( l3-network MemberOf instance-group, MANY2MANY)\n- TO l3-network( l3-network Uses l3-network, MANY2MANY)\n- TO network-policy( l3-network Uses network-policy, MANY2MANY)\n- TO route-table-reference( l3-network Uses route-table-reference, MANY2MANY)\n- TO vpn-binding( l3-network Uses vpn-binding, MANY2MANY)\n- FROM aggregate-route (CHILD of l3-network, aggregate-route BelongsTo l3-network, MANY2ONE)(1)\n- FROM allotted-resource( allotted-resource PartOf l3-network, MANY2MANY)\n- FROM cloud-region( cloud-region Uses l3-network, MANY2MANY)\n- FROM complex( complex Uses l3-network, MANY2MANY)\n- FROM configuration( configuration PartOf l3-network, MANY2MANY)\n- FROM ctag-assignment (CHILD of l3-network, ctag-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf Uses l3-network, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-network( l3-network Uses l3-network, MANY2MANY)\n- FROM line-of-business( line-of-business Uses l3-network, MANY2MANY)\n- FROM platform( platform Uses l3-network, MANY2MANY)\n- FROM segmentation-assignment (CHILD of l3-network, segmentation-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf l3-network, ONE2MANY)\n- FROM subnet (CHILD of l3-network, subnet BelongsTo l3-network, MANY2ONE)(1)\n- FROM tenant( tenant Uses l3-network, MANY2MANY)\n- FROM vf-module( vf-module DependsOn l3-network, MANY2MANY)\n- FROM vlan-tag( vlan-tag BelongsTo l3-network, MANY2MANY)\n- FROM vrf( vrf Uses l3-network, ONE2MANY)\nA vrf uses many l3-networks\n\n-(1) IF this L3-NETWORK node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "aggregate-routes": {
          "items": {
            "$ref": "#/getDefinitions/aggregate-route"
          }, 
          "type": "array"
        }, 
        "contrail-network-fqdn": {
          "description": "Contrail FQDN for the network", 
          "type": "string"
        }, 
        "ctag-assignments": {
          "items": {
            "$ref": "#/getDefinitions/ctag-assignment"
          }, 
          "type": "array"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "is-bound-to-vpn": {
          "description": "Set to true if bound to VPN", 
          "type": "boolean"
        }, 
        "is-external-network": {
          "description": "boolean indicatating whether or not network is an external network.", 
          "type": "boolean"
        }, 
        "is-provider-network": {
          "description": "boolean indicatating whether or not network is a provider network.", 
          "type": "boolean"
        }, 
        "is-shared-network": {
          "description": "boolean indicatating whether or not network is a shared network.", 
          "type": "boolean"
        }, 
        "is-trunked": {
          "description": "Trunked network indication.", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "network-id": {
          "description": "Network ID, should be uuid. Unique across A&AI.", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network, governed by some naming convention..", 
          "type": "string"
        }, 
        "network-role": {
          "description": "Role the network plans - who defines these values?", 
          "type": "string"
        }, 
        "network-role-instance": {
          "description": "network role instance", 
          "format": "int64", 
          "type": "integer"
        }, 
        "network-technology": {
          "description": "Network technology - who defines these values?", 
          "type": "string"
        }, 
        "network-type": {
          "description": "Type of the network - who defines these values?", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "physical-network-name": {
          "description": "Name associated with the physical network.", 
          "type": "string"
        }, 
        "relationship-list": {
          "description": "Relates to tenant (or is it a child of tenant), complex, service, vpn-binding", 
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "segmentation-assignments": {
          "items": {
            "$ref": "#/getDefinitions/segmentation-assignment"
          }, 
          "type": "array"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service from ASDC.  Does not strictly map to ASDC services.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "subnets": {
          "items": {
            "$ref": "#/getDefinitions/subnet"
          }, 
          "type": "array"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id", 
        "is-bound-to-vpn", 
        "is-provider-network", 
        "is-shared-network", 
        "is-external-network"
      ]
    }, 
    "l3-networks": {
      "properties": {
        "l3-network": {
          "items": {
            "$ref": "#/getDefinitions/l3-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-interface": {
      "description": "Link aggregate interface\n###### Related Nodes\n- TO generic-vnf (PARENT of lag-interface, lag-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l-interface( lag-interface Uses l-interface, ONE2MANY)\n- TO lag-link( lag-interface LinksTo lag-link, MANY2MANY)(2)\n- TO logical-link( lag-interface Uses logical-link, MANY2MANY)(2)\n- TO p-interface( lag-interface Uses p-interface, MANY2MANY)\n- TO pnf (PARENT of lag-interface, lag-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of lag-interface, lag-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of lag-interface, lag-interface BindsTo vpls-pe, MANY2ONE)(4)\n- FROM forwarder( forwarder ForwardsTo lag-interface, MANY2MANY)\n- FROM l-interface (CHILD of lag-interface, l-interface BelongsTo lag-interface, MANY2ONE)(1)\n\n-(1) IF this LAG-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this LAG-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this LAG-INTERFACE is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name that identifies the link aggregate interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "lag-interfaces": {
      "description": "Collection of link aggregate interfaces.\n", 
      "properties": {
        "lag-interface": {
          "items": {
            "$ref": "#/getDefinitions/lag-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-link": {
      "description": "LAG links can connect lag-interfaces\n###### Related Nodes\n- FROM lag-interface( lag-interface LinksTo lag-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses lag-link, MANY2MANY)\n\n-(3) IF this FROM node is deleted, this LAG-LINK is DELETED also\n", 
      "properties": {
        "link-name": {
          "description": "Alphabetical concatenation of lag-interface names", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "lag-links": {
      "description": "Collection of link aggregation connections\n", 
      "properties": {
        "lag-link": {
          "items": {
            "$ref": "#/getDefinitions/lag-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "lan-port-config": {
      "description": "Instance of a lan-port-config\n###### Related Nodes\n- TO dhcp-service (PARENT of lan-port-config, lan-port-config Uses dhcp-service, ONE2MANY)\nFor CCVPN Usecase(2)\n- TO ext-aai-network( lan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( lan-port-config PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n\n-(2) IF this LAN-PORT-CONFIG node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "description": {
          "description": "Store the description of this lan-port-config.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Store the device-id of this lan-port-config.", 
          "type": "string"
        }, 
        "dhcp-services": {
          "items": {
            "$ref": "#/getDefinitions/dhcp-service"
          }, 
          "type": "array"
        }, 
        "input-bandwidth": {
          "description": "Store the input-bandwidth of this lan-port-config.", 
          "type": "string"
        }, 
        "ipv4-address": {
          "description": "Store the ipv4-address of this lan-port-config.", 
          "type": "string"
        }, 
        "ipv6-address": {
          "description": "Store the ipv6-address of this lan-port-config.", 
          "type": "string"
        }, 
        "lan-port-config-id": {
          "description": "Uniquely identifies this lan-port-config by id", 
          "type": "string"
        }, 
        "lan-port-config-name": {
          "description": "Store the name of this lan-port-config.", 
          "type": "string"
        }, 
        "output-bandwidth": {
          "description": "Store the output-bandwidth of this lan-port-config.", 
          "type": "string"
        }, 
        "port-id": {
          "description": "Store the port-id of this lan-port-config.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-tag": {
          "description": "Store the vlan-tag of this lan-port-config.", 
          "type": "string"
        }
      }, 
      "required": [
        "lan-port-config-id"
      ]
    }, 
    "lan-port-configs": {
      "description": "Collection of lan-port-configs\n", 
      "properties": {
        "lan-port-config": {
          "items": {
            "$ref": "#/getDefinitions/lan-port-config"
          }, 
          "type": "array"
        }
      }
    }, 
    "license": {
      "description": "Metadata for license group.\n###### Related Nodes\n- TO generic-vnf (PARENT of license, license BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of license, license BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this LICENSE is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-uuid": {
          "description": "Unique ID of a license resource.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "licenses": {
      "description": "Licenses to be allocated across resources, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "license": {
          "items": {
            "$ref": "#/getDefinitions/license"
          }, 
          "type": "array"
        }
      }
    }, 
    "line-of-business": {
      "description": "describes a line-of-business\n###### Related Nodes\n- TO generic-vnf( line-of-business Uses generic-vnf, MANY2MANY)\n- TO l3-network( line-of-business Uses l3-network, MANY2MANY)\n", 
      "properties": {
        "line-of-business-name": {
          "description": "Name of the line-of-business (product)", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "line-of-business-name"
      ]
    }, 
    "lines-of-business": {
      "description": "Collection of lines-of-business\n", 
      "properties": {
        "line-of-business": {
          "items": {
            "$ref": "#/getDefinitions/line-of-business"
          }, 
          "type": "array"
        }
      }
    }, 
    "logical-link": {
      "description": "Logical links generally connect l-interfaces but are used to express logical connectivity between two points\n###### Related Nodes\n- TO cloud-region( logical-link LocatedIn cloud-region, MANY2MANY)\n- TO ext-aai-network( logical-link BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO generic-vnf( logical-link BridgedTo generic-vnf, MANY2MANY)\n- TO l-interface( logical-link Source l-interface, MANY2MANY)(4)\n- TO l-interface( logical-link Destination l-interface, MANY2MANY)(4)\n- TO lag-link( logical-link Uses lag-link, MANY2MANY)\n- TO logical-link( logical-link Uses logical-link, MANY2MANY)\n- TO pnf( logical-link BridgedTo pnf, MANY2MANY)\n- TO pserver( logical-link BridgedTo pserver, MANY2MANY)\n- TO virtual-data-center( logical-link LocatedIn virtual-data-center, MANY2MANY)\n- TO vpn-binding( logical-link Uses vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses logical-link, ONE2MANY)(3)\n- FROM l-interface( l-interface LinksTo logical-link, MANY2MANY)(3)\n- FROM lag-interface( lag-interface Uses logical-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses logical-link, MANY2MANY)\n- FROM p-interface( p-interface LinksTo logical-link, MANY2ONE)\n- FROM service-instance( service-instance Uses logical-link, MANY2MANY)(3)\n- FROM vlan( vlan Uses logical-link, MANY2MANY)(3)\n\n-(3) IF this FROM node is deleted, this LOGICAL-LINK is DELETED also\n-(4) IF this TO node is deleted, this LOGICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit id", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ip-version": {
          "description": "v4, v6, or ds for dual stack", 
          "type": "string"
        }, 
        "link-id": {
          "description": "UUID of the logical-link, SDNC generates this.", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
          "type": "string"
        }, 
        "link-name2": {
          "description": "Alias or alternate name (CLCI or D1 name).", 
          "type": "string"
        }, 
        "link-role": {
          "description": "Indication of the network use of the logical link.", 
          "type": "string"
        }, 
        "link-type": {
          "description": "Type of logical link, e.g., evc", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indication of operational status of the logical link.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "purpose": {
          "description": "Reason for this entity, role it is playing", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-protocol": {
          "description": "For example, static or BGP", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name", 
        "in-maint", 
        "link-type"
      ]
    }, 
    "logical-links": {
      "description": "Collection of logical connections\n", 
      "properties": {
        "logical-link": {
          "items": {
            "$ref": "#/getDefinitions/logical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadata": {
      "description": "Collection of metadatum (key/value pairs)\n", 
      "properties": {
        "metadatum": {
          "items": {
            "$ref": "#/getDefinitions/metadatum"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadatum": {
      "description": "Key/value pairs\n###### Related Nodes\n- TO configuration (PARENT of metadatum, metadatum BelongsTo configuration, MANY2ONE)(4)\n- TO connector (PARENT of metadatum, metadatum BelongsTo connector, MANY2ONE)(4)\n- TO image (PARENT of metadatum, metadatum BelongsTo image, MANY2ONE)(4)\n- TO model-ver (PARENT of metadatum, metadatum BelongsTo model-ver, MANY2ONE)(4)\n- TO service-instance (PARENT of metadatum, metadatum BelongsTo service-instance, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this METADATUM is DELETED also\n", 
      "properties": {
        "metaname": {
          "type": "string"
        }, 
        "metaval": {
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "metaname", 
        "metaval"
      ]
    }, 
    "model": {
      "description": "Subgraph definition provided by ASDC to describe an inventory asset and its connections related to ASDC models, independent of version\n###### Related Nodes\n- FROM instance-group( instance-group Targets model, MANY2MANY)\n- FROM model-ver (CHILD of model, model-ver BelongsTo model, MANY2ONE)(1)\n- FROM named-query( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element( named-query-element IsA model, MANY2ONE)\n\n-(1) IF this MODEL node is deleted, this FROM node is DELETED also\n-MODEL cannot be deleted if related to INSTANCE-GROUP,NAMED-QUERY,NAMED-QUERY-ELEMENT\n", 
      "properties": {
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-vers": {
          "items": {
            "$ref": "#/getDefinitions/model-ver"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-type"
      ]
    }, 
    "model-and-named-query-search": {
      "description": "ModelAndNamedQuerySearch holds query-parameters and instance-properties for performing a named-query or model query\n", 
      "properties": {
        "instance-filters": {
          "$ref": "#/getDefinitions/instance-filters", 
          "type": "object"
        }, 
        "query-parameters": {
          "$ref": "#/getDefinitions/query-parameters", 
          "type": "object"
        }, 
        "secondary-filter-cut-point": {
          "type": "string"
        }, 
        "secondary-filts": {
          "$ref": "#/getDefinitions/secondary-filts", 
          "type": "object"
        }, 
        "top-node-type": {
          "type": "string"
        }
      }
    }, 
    "model-constraint": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-element (PARENT of model-constraint, model-constraint BelongsTo model-element, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-constraint, constrained-element-set BelongsTo model-constraint, MANY2ONE)(1)\n\n-(1) IF this MODEL-CONSTRAINT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constrained-element-set-uuid-to-replace": {
          "type": "string"
        }, 
        "constrained-element-sets": {
          "items": {
            "$ref": "#/getDefinitions/constrained-element-set"
          }, 
          "type": "array"
        }, 
        "model-constraint-uuid": {
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-constraint-uuid", 
        "constrained-element-set-uuid-to-replace"
      ]
    }, 
    "model-constraints": {
      "properties": {
        "model-constraint": {
          "items": {
            "$ref": "#/getDefinitions/model-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-element": {
      "description": "Defines how other models combine to make up a higher-level model.\n###### Related Nodes\n- TO element-choice-set (PARENT of model-element, model-element BelongsTo element-choice-set, MANY2ONE)(4)\n- TO model-element( model-element BelongsTo model-element, MANY2ONE)(4)\n- TO model-ver( model-element IsA model-ver, MANY2ONE)\n- TO model-ver (PARENT of model-element, model-element BelongsTo model-ver, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-element, constrained-element-set BelongsTo model-element, MANY2ONE)(1)\n- FROM model-constraint (CHILD of model-element, model-constraint BelongsTo model-element, MANY2ONE)(1)\n- FROM model-element (PARENT of model-element, model-element BelongsTo model-element, MANY2ONE)(4)\n\n-(1) IF this MODEL-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-ELEMENT is DELETED also\n", 
      "properties": {
        "cardinality": {
          "description": "How many of this type of element are required/allowed", 
          "type": "string"
        }, 
        "linkage-points": {
          "type": "string"
        }, 
        "model-constraints": {
          "description": "Describes new constraints on this model element that are not part of that model's definition", 
          "items": {
            "$ref": "#/getDefinitions/model-constraint"
          }, 
          "type": "array"
        }, 
        "model-element-uuid": {
          "type": "string"
        }, 
        "model-elements": {
          "description": "Defines how other models combine to make up a higher-level model", 
          "items": {
            "$ref": "#/getDefinitions/model-element"
          }, 
          "type": "array"
        }, 
        "new-data-del-flag": {
          "description": "Indicates whether this element was created as part of instantiation from this model", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-element-uuid", 
        "new-data-del-flag", 
        "cardinality"
      ]
    }, 
    "model-elements": {
      "properties": {
        "model-element": {
          "items": {
            "$ref": "#/getDefinitions/model-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-ver": {
      "description": "Subgraph definition provided by ASDC to describe a specific version of an inventory asset and its connections related to ASDC models\n###### Related Nodes\n- TO model (PARENT of model-ver, model-ver BelongsTo model, MANY2ONE)(4)\n- FROM metadatum (CHILD of model-ver, metadatum BelongsTo model-ver, MANY2ONE)(1)\n- FROM model-element( model-element IsA model-ver, MANY2ONE)\n- FROM model-element (CHILD of model-ver, model-element BelongsTo model-ver, MANY2ONE)(1)\n\n-(1) IF this MODEL-VER node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-VER is DELETED also\n-MODEL-VER cannot be deleted if related to MODEL-ELEMENT\n", 
      "properties": {
        "distribution-status": {
          "description": "Distribution Status", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/getDefinitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-elements": {
          "items": {
            "$ref": "#/getDefinitions/model-element"
          }, 
          "type": "array"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "model-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-version-id", 
        "model-name", 
        "model-version"
      ]
    }, 
    "model-vers": {
      "properties": {
        "model-ver": {
          "items": {
            "$ref": "#/getDefinitions/model-ver"
          }, 
          "type": "array"
        }
      }
    }, 
    "models": {
      "description": "Collection of subgraph definitions provided by ASDC to describe the inventory assets and their connections related to ASDC models\n", 
      "properties": {
        "model": {
          "items": {
            "$ref": "#/getDefinitions/model"
          }, 
          "type": "array"
        }
      }
    }, 
    "multicast-configuration": {
      "description": "###### Related Nodes\n- FROM vlan( vlan Uses multicast-configuration, MANY2MANY)\n", 
      "properties": {
        "multicast-configuration-id": {
          "description": "Unique id of multicast configuration.", 
          "type": "string"
        }, 
        "multicast-protocol": {
          "description": "protocol of multicast configuration", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "rp-type": {
          "description": "rp type of multicast configuration", 
          "type": "string"
        }
      }, 
      "required": [
        "multicast-configuration-id", 
        "multicast-protocol", 
        "rp-type"
      ]
    }, 
    "multicast-configurations": {
      "description": "multicast configuration of generic-vnf ip-address\n", 
      "properties": {
        "multicast-configuration": {
          "items": {
            "$ref": "#/getDefinitions/multicast-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-queries": {
      "properties": {
        "named-query": {
          "items": {
            "$ref": "#/getDefinitions/named-query"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-query": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element (CHILD of named-query, named-query-element BelongsTo named-query, ONE2ONE)(1)\n\n-(1) IF this NAMED-QUERY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "description": {
          "type": "string"
        }, 
        "named-query-elements": {
          "items": {
            "$ref": "#/getDefinitions/named-query-element"
          }, 
          "type": "array"
        }, 
        "named-query-name": {
          "type": "string"
        }, 
        "named-query-uuid": {
          "type": "string"
        }, 
        "named-query-version": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "required-input-param": {
          "type": "string"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-uuid", 
        "named-query-name", 
        "named-query-version"
      ]
    }, 
    "named-query-element": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query-element IsA model, MANY2ONE)\n- TO named-query-element( named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- TO named-query (PARENT of named-query-element, named-query-element BelongsTo named-query, ONE2ONE)(4)\n- FROM named-query-element (PARENT of named-query-element, named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- FROM property-constraint (CHILD of named-query-element, property-constraint BelongsTo named-query-element, MANY2ONE)(1)\n- FROM related-lookup (CHILD of named-query-element, related-lookup BelongsTo named-query-element, MANY2ONE)(1)\n\n-(1) IF this NAMED-QUERY-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this NAMED-QUERY-ELEMENT is DELETED also\n", 
      "properties": {
        "do-not-output": {
          "type": "string"
        }, 
        "named-query-element-uuid": {
          "type": "string"
        }, 
        "named-query-elements": {
          "items": {
            "$ref": "#/getDefinitions/named-query-element"
          }, 
          "type": "array"
        }, 
        "property-collect-list": {
          "type": "string"
        }, 
        "property-constraints": {
          "items": {
            "$ref": "#/getDefinitions/property-constraint"
          }, 
          "type": "array"
        }, 
        "property-limit-desc": {
          "type": "string"
        }, 
        "related-lookups": {
          "items": {
            "$ref": "#/getDefinitions/related-lookup"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-element-uuid"
      ]
    }, 
    "named-query-elements": {
      "properties": {
        "named-query-element": {
          "items": {
            "$ref": "#/getDefinitions/named-query-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "network": {
      "description": "Namespace for network inventory resources.\n", 
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/getDefinitions/collection"
          }, 
          "type": "array"
        }, 
        "configurations": {
          "items": {
            "$ref": "#/getDefinitions/configuration"
          }, 
          "type": "array"
        }, 
        "connectivities": {
          "items": {
            "$ref": "#/getDefinitions/connectivity"
          }, 
          "type": "array"
        }, 
        "devices": {
          "items": {
            "$ref": "#/getDefinitions/device"
          }, 
          "type": "array"
        }, 
        "ext-aai-networks": {
          "items": {
            "$ref": "#/getDefinitions/ext-aai-network"
          }, 
          "type": "array"
        }, 
        "forwarding-paths": {
          "items": {
            "$ref": "#/getDefinitions/forwarding-path"
          }, 
          "type": "array"
        }, 
        "generic-vnfs": {
          "items": {
            "$ref": "#/getDefinitions/generic-vnf"
          }, 
          "type": "array"
        }, 
        "instance-groups": {
          "items": {
            "$ref": "#/getDefinitions/instance-group"
          }, 
          "type": "array"
        }, 
        "ipsec-configurations": {
          "items": {
            "$ref": "#/getDefinitions/ipsec-configuration"
          }, 
          "type": "array"
        }, 
        "l3-networks": {
          "items": {
            "$ref": "#/getDefinitions/l3-network"
          }, 
          "type": "array"
        }, 
        "lag-links": {
          "items": {
            "$ref": "#/getDefinitions/lag-link"
          }, 
          "type": "array"
        }, 
        "lan-port-configs": {
          "items": {
            "$ref": "#/getDefinitions/lan-port-config"
          }, 
          "type": "array"
        }, 
        "logical-links": {
          "items": {
            "$ref": "#/getDefinitions/logical-link"
          }, 
          "type": "array"
        }, 
        "multicast-configurations": {
          "items": {
            "$ref": "#/getDefinitions/multicast-configuration"
          }, 
          "type": "array"
        }, 
        "network-policies": {
          "items": {
            "$ref": "#/getDefinitions/network-policy"
          }, 
          "type": "array"
        }, 
        "network-resources": {
          "items": {
            "$ref": "#/getDefinitions/network-resource"
          }, 
          "type": "array"
        }, 
        "newvces": {
          "items": {
            "$ref": "#/getDefinitions/newvce"
          }, 
          "type": "array"
        }, 
        "physical-links": {
          "items": {
            "$ref": "#/getDefinitions/physical-link"
          }, 
          "type": "array"
        }, 
        "pnfs": {
          "items": {
            "$ref": "#/getDefinitions/pnf"
          }, 
          "type": "array"
        }, 
        "route-table-references": {
          "items": {
            "$ref": "#/getDefinitions/route-table-reference"
          }, 
          "type": "array"
        }, 
        "sdwan-vpns": {
          "items": {
            "$ref": "#/getDefinitions/sdwan-vpn"
          }, 
          "type": "array"
        }, 
        "site-pair-sets": {
          "items": {
            "$ref": "#/getDefinitions/site-pair-set"
          }, 
          "type": "array"
        }, 
        "site-resources": {
          "items": {
            "$ref": "#/getDefinitions/site-resource"
          }, 
          "type": "array"
        }, 
        "vces": {
          "items": {
            "$ref": "#/getDefinitions/vce"
          }, 
          "type": "array"
        }, 
        "vlan-tags": {
          "items": {
            "$ref": "#/getDefinitions/vlan-tag"
          }, 
          "type": "array"
        }, 
        "vnfcs": {
          "items": {
            "$ref": "#/getDefinitions/vnfc"
          }, 
          "type": "array"
        }, 
        "vpls-pes": {
          "items": {
            "$ref": "#/getDefinitions/vpls-pe"
          }, 
          "type": "array"
        }, 
        "vpn-bindings": {
          "items": {
            "$ref": "#/getDefinitions/vpn-binding"
          }, 
          "type": "array"
        }, 
        "wan-port-configs": {
          "items": {
            "$ref": "#/getDefinitions/wan-port-config"
          }, 
          "type": "array"
        }, 
        "zones": {
          "items": {
            "$ref": "#/getDefinitions/zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policies": {
      "properties": {
        "network-policy": {
          "items": {
            "$ref": "#/getDefinitions/network-policy"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policy": {
      "description": "###### Related Nodes\n- FROM allotted-resource( allotted-resource Uses network-policy, ONE2ONE)\n- FROM l3-network( l3-network Uses network-policy, MANY2MANY)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "ID for the openStack Heat instance", 
          "type": "string"
        }, 
        "network-policy-fqdn": {
          "description": "Contrail FQDN for the policy", 
          "type": "string"
        }, 
        "network-policy-id": {
          "description": "UUID representing unique key to this instance", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-policy-id"
      ]
    }, 
    "network-profile": {
      "description": "Network profile populated by SDN-GP for SNMP\n###### Related Nodes\n- TO generic-vnf( network-profile AppliesTo generic-vnf, MANY2MANY)\n", 
      "properties": {
        "community-string": {
          "description": "Encrypted SNMP community string", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Unique name of network profile.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "nm-profile-name"
      ]
    }, 
    "network-profiles": {
      "description": "Collection of network profiles\n", 
      "properties": {
        "network-profile": {
          "items": {
            "$ref": "#/getDefinitions/network-profile"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-resource": {
      "description": "Instance of a network-resource\n###### Related Nodes\n- TO ext-aai-network( network-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( network-resource Uses vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM pnf( pnf LinksTo network-resource, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "client-id": {
          "description": "Store the id of the client of this network-resource.", 
          "type": "string"
        }, 
        "network-id": {
          "description": "Uniquely identifies this network-resource by id", 
          "type": "string"
        }, 
        "provider-id": {
          "description": "Store the id of the provider of this network-resource.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "te-topo-id": {
          "description": "Store the id of the te-topo of this network-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id"
      ]
    }, 
    "network-resources": {
      "description": "Collection of network-resources\n", 
      "properties": {
        "network-resource": {
          "items": {
            "$ref": "#/getDefinitions/network-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-technologies": {
      "description": "The network-technology object is used to capture the supported network technologies of a cloud-region.\n", 
      "properties": {
        "network-technology": {
          "items": {
            "$ref": "#/getDefinitions/network-technology"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-technology": {
      "description": "The network-technology object is used to capture the supported network technologies of a cloud-region.\n###### Related Nodes\n- FROM cloud-region( cloud-region Uses network-technology, MANY2MANY)\n", 
      "properties": {
        "network-technology-id": {
          "description": "Unique identifier of the network-technology object (UUID)", 
          "type": "string"
        }, 
        "network-technology-name": {
          "description": "The network-technology  that a cloud-region can support. Current valid values- CONTRAIL AIC_SR_IOV OVS STANDARD-SR-IOV", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-technology-id", 
        "network-technology-name"
      ]
    }, 
    "newvce": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n###### Related Nodes\n- FROM l-interface (CHILD of newvce, l-interface BelongsTo newvce, MANY2ONE)(1)\n\n-(1) IF this NEWVCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-role": {
          "description": "Client should send valid enumerated value.", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vnf-id2": {
          "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id2", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "newvces": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n", 
      "properties": {
        "newvce": {
          "items": {
            "$ref": "#/getDefinitions/newvce"
          }, 
          "type": "array"
        }
      }
    }, 
    "nodes": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/getDefinitions/inventory-item-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "nos-server": {
      "description": "nos-server is the execution environment that will have images, certain versions of VNOS, running on it.\n###### Related Nodes\n- TO pserver( nos-server HostedOn pserver, ONE2ONE)\n- TO tenant (PARENT of nos-server, nos-server BelongsTo tenant, MANY2ONE)\n- FROM generic-vnf( generic-vnf HostedOn nos-server, MANY2ONE)\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "nos-server-id": {
          "description": "Unique identifier for this nos relative to its tenant", 
          "type": "string"
        }, 
        "nos-server-name": {
          "description": "Name of nos", 
          "type": "string"
        }, 
        "nos-server-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "uCPE vendor", 
          "type": "string"
        }
      }, 
      "required": [
        "nos-server-id", 
        "nos-server-name", 
        "vendor", 
        "nos-server-selflink", 
        "in-maint"
      ]
    }, 
    "nos-servers": {
      "description": "nos-server is the execution environment that will have images, certain versions of VNOS, running on it.\n", 
      "properties": {
        "nos-server": {
          "items": {
            "$ref": "#/getDefinitions/nos-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "notification-event": {
      "properties": {
        "cambria.partition": {
          "type": "string"
        }, 
        "notification-event-header": {
          "$ref": "#/getDefinitions/notification-event-header", 
          "type": "object"
        }
      }
    }, 
    "notification-event-header": {
      "properties": {
        "action": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "entity-link": {
          "type": "string"
        }, 
        "entity-type": {
          "type": "string"
        }, 
        "event-type": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "sequence-number": {
          "type": "string"
        }, 
        "severity": {
          "type": "string"
        }, 
        "source-name": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "timestamp": {
          "type": "string"
        }, 
        "top-entity-type": {
          "type": "string"
        }, 
        "version": {
          "type": "string"
        }
      }
    }, 
    "notify": {
      "properties": {
        "event-id": {
          "type": "string"
        }, 
        "event-trigger": {
          "type": "string"
        }, 
        "key-data": {
          "items": {
            "$ref": "#/getDefinitions/key-data"
          }, 
          "type": "array"
        }, 
        "node-type": {
          "type": "string"
        }, 
        "selflink": {
          "type": "string"
        }
      }, 
      "required": [
        "event-id"
      ]
    }, 
    "oam-network": {
      "description": "OAM network, to be deprecated shortly.  Do not use for new purposes. \n###### Related Nodes\n- TO cloud-region (PARENT of oam-network, oam-network BelongsTo cloud-region, MANY2ONE)\n- TO complex( oam-network AppliesTo complex, MANY2MANY)\n- TO service-capability( oam-network AppliesTo service-capability, MANY2MANY)\n", 
      "properties": {
        "cvlan-tag": {
          "description": "cvlan-id", 
          "format": "int64", 
          "type": "integer"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "format": "int32", 
          "type": "integer"
        }, 
        "network-name": {
          "description": "Name of the network.", 
          "type": "string"
        }, 
        "network-uuid": {
          "description": "UUID of the network. Unique across a cloud-region", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-uuid", 
        "network-name", 
        "cvlan-tag"
      ]
    }, 
    "oam-networks": {
      "description": "Collection of OAM networks, to be deprecated shortly.  Do not use for new purposes. \n", 
      "properties": {
        "oam-network": {
          "items": {
            "$ref": "#/getDefinitions/oam-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "operational-environment": {
      "description": "It is a logical partition of the cloud which allows to have multiple environments in the production AIC.\n###### Related Nodes\n- TO operational-environment( operational-environment Uses operational-environment, MANY2MANY)\n- FROM operational-environment( operational-environment Uses operational-environment, MANY2MANY)\n", 
      "properties": {
        "operational-environment-id": {
          "description": "UUID of an operational environment", 
          "type": "string"
        }, 
        "operational-environment-name": {
          "description": "Operational Environment name", 
          "type": "string"
        }, 
        "operational-environment-status": {
          "description": "Status", 
          "type": "string"
        }, 
        "operational-environment-type": {
          "description": "Operational Environment Type.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tenant-context": {
          "description": "Tenant Context.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "Workload Context.", 
          "type": "string"
        }
      }, 
      "required": [
        "operational-environment-id", 
        "operational-environment-name", 
        "operational-environment-type", 
        "operational-environment-status", 
        "tenant-context", 
        "workload-context"
      ]
    }, 
    "operational-environments": {
      "description": "a logical partition of the cloud which allows to have multiple environments in the production AIC.\n", 
      "properties": {
        "operational-environment": {
          "items": {
            "$ref": "#/getDefinitions/operational-environment"
          }, 
          "type": "array"
        }
      }
    }, 
    "overloaded-model": {
      "description": "Allows for legacy POST of old-style and new-style models\n", 
      "properties": {
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-id": {
          "description": "Invariant unique ID which does not change from version to version", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-name-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-vers": {
          "$ref": "#/getDefinitions/model-vers", 
          "type": "object"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "relationship-list": {
          "$ref": "#/getDefinitions/relationship-list", 
          "type": "object"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-name-version-id", 
        "model-type", 
        "model-name", 
        "model-id", 
        "model-version"
      ]
    }, 
    "owning-entities": {
      "description": "Collection of owning-entities\n", 
      "properties": {
        "owning-entity": {
          "items": {
            "$ref": "#/getDefinitions/owning-entity"
          }, 
          "type": "array"
        }
      }
    }, 
    "owning-entity": {
      "description": "describes an owning-entity\n###### Related Nodes\n- FROM service-instance( service-instance BelongsTo owning-entity, MANY2ONE)\n", 
      "properties": {
        "owning-entity-id": {
          "description": "UUID of an owning entity", 
          "type": "string"
        }, 
        "owning-entity-name": {
          "description": "Owning entity name", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "owning-entity-id", 
        "owning-entity-name"
      ]
    }, 
    "p-interface": {
      "description": "Physical interface (e.g., nic)\n###### Related Nodes\n- TO logical-link( p-interface LinksTo logical-link, MANY2ONE)\n- TO pnf (PARENT of p-interface, p-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of p-interface, p-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of p-interface, p-interface BindsTo vpls-pe, MANY2ONE)(4)\n- TO physical-link( p-interface LinksTo physical-link, MANY2ONE)(2)\n- FROM allotted-resource( allotted-resource Uses p-interface, ONE2MANY)\nAAI-1925 For CCVPN Usecase\n- FROM forwarder( forwarder ForwardsTo p-interface, MANY2MANY)\n- FROM l-interface (CHILD of p-interface, l-interface BindsTo p-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses p-interface, MANY2MANY)\n- FROM sriov-pf (CHILD of p-interface, sriov-pf BelongsTo p-interface, ONE2ONE)(1)\n- FROM vpn-binding( vpn-binding BindsTo p-interface, ONE2MANY)\nFor CCVPN Usecase\n\n-(1) IF this P-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this P-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this P-INTERFACE is DELETED also\n", 
      "properties": {
        "equipment-identifier": {
          "description": "CLEI or other specification for p-interface hardware.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-name": {
          "description": "Name that identifies the physical interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role specification for p-interface hardware.", 
          "type": "string"
        }, 
        "interface-type": {
          "description": "Indicates the physical properties of the interface.", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "inventory status", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }, 
        "mac-addresss": {
          "description": "MAC Address of the p-interface.", 
          "type": "string"
        }, 
        "network-ref": {
          "description": "Store the network-ref of this p-interface. Derived from ietf-restconf-notification that identifies a termination-point.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "oper Status of this p-interface.", 
          "type": "string"
        }, 
        "port-description": {
          "description": "Nature of the services and connectivity on this port.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "sriov-pfs": {
          "items": {
            "$ref": "#/getDefinitions/sriov-pf"
          }, 
          "type": "array"
        }, 
        "transparent": {
          "description": "Store the transparent value of this p-interface.", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "p-interfaces": {
      "description": "Collection of physical interfaces.\n", 
      "properties": {
        "p-interface": {
          "items": {
            "$ref": "#/getDefinitions/p-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "physical-link": {
      "description": "Collection of physical connections, typically between p-interfaces\n###### Related Nodes\n- FROM p-interface( p-interface LinksTo physical-link, MANY2ONE)(3)\n\n-(3) IF this FROM node is deleted, this PHYSICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit it", 
          "type": "string"
        }, 
        "dual-mode": {
          "description": "Dual access mode (e.g., primary, secondary", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
          "type": "string"
        }, 
        "management-option": {
          "description": "To provide information on who manages this circuit. A&AI or 3rd party transport provider", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-units": {
          "description": "Units for downstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-value": {
          "description": "Downstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-bandwidth-up-units": {
          "description": "Units for the upstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-up-value": {
          "description": "Upstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-name": {
          "description": "Name of the service Provider on this link.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "physical-links": {
      "description": "Collection of physical connections, typically between p-interfaces\n", 
      "properties": {
        "physical-link": {
          "items": {
            "$ref": "#/getDefinitions/physical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "platform": {
      "description": "describes a platform\n###### Related Nodes\n- TO generic-vnf( platform Uses generic-vnf, MANY2MANY)\n- TO l3-network( platform Uses l3-network, MANY2MANY)\n", 
      "properties": {
        "platform-name": {
          "description": "Name of the platform", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "platform-name"
      ]
    }, 
    "platforms": {
      "description": "Collection of platforms\n", 
      "properties": {
        "platform": {
          "items": {
            "$ref": "#/getDefinitions/platform"
          }, 
          "type": "array"
        }
      }
    }, 
    "pnf": {
      "description": "PNF represents a physical network function. typically equipment used in the D1 world. in 1607, this will be populated by SDN-C to represent a premises router that a uCPE connects to. But this can be used to represent any physical device that is not an AIC node or uCPE.\n###### Related Nodes\n- TO complex( pnf LocatedIn complex, MANY2ONE)\n- TO ext-aai-network( pnf BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO instance-group( pnf MemberOf instance-group, MANY2MANY)\n- TO network-resource( pnf LinksTo network-resource, MANY2MANY)\nFor CCVPN Usecase\n- TO zone( pnf LocatedIn zone, MANY2ONE)\n- FROM configuration( configuration AppliesTo pnf, MANY2MANY)\n- FROM esr-thirdparty-sdnc( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM generic-vnf( generic-vnf HostedOn pnf, MANY2MANY)\n- FROM lag-interface (CHILD of pnf, lag-interface BindsTo pnf, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pnf, MANY2MANY)\n- FROM p-interface (CHILD of pnf, p-interface BindsTo pnf, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf pnf, ONE2MANY)\n- FROM software-version (CHILD of pnf, software-version BelongsTo pnf, MANY2ONE)\n- FROM vrf (CHILD of pnf, vrf BelongsTo pnf, MANY2ONE)\nA vrf belongs to a pnf.(1)\n\n-(1) IF this PNF node is deleted, this FROM node is DELETED also\n-PNF cannot be deleted if related to NETWORK-RESOURCE,SOFTWARE-VERSION\n", 
      "properties": {
        "admin-status": {
          "description": "admin Status of this PNF", 
          "type": "string"
        }, 
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "frame-id": {
          "description": "ID of the physical frame (relay rack) where pnf is installed.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v4-oam": {
          "description": "ipv4-oam-address with new naming convention for IP addresses", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "The ASDC model id for this resource  model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "The ASDC model version for this resource  model.", 
          "type": "string"
        }, 
        "nf-role": {
          "description": "Nf Role is the role performed by this instance in the network.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this pnf", 
          "type": "string"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/p-interface"
          }, 
          "type": "array"
        }, 
        "pnf-id": {
          "description": "id of pnf", 
          "type": "string"
        }, 
        "pnf-ipv4-address": {
          "description": "This is the IP address (IPv4) for the PNF itself. This is the IPv4 address that the PNF iself can be accessed at.", 
          "type": "string"
        }, 
        "pnf-ipv6-address": {
          "description": "This is the IP address (IPv6) for the PNF itself. This is the IPv6 address that the PNF iself can be accessed at.", 
          "type": "string"
        }, 
        "pnf-name": {
          "description": "unique name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2": {
          "description": "name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2-source": {
          "description": "source of name2", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of this device (not under canopi control) Valid values [PREPROV/NVTPROV/PROV]", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number of the device", 
          "type": "string"
        }, 
        "software-versions": {
          "items": {
            "$ref": "#/getDefinitions/software-version"
          }, 
          "type": "array"
        }, 
        "sw-version": {
          "description": "sw-version is the version of SW for the hosted application on the PNF.", 
          "type": "string"
        }, 
        "vrfs": {
          "items": {
            "$ref": "#/getDefinitions/vrf"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "pnf-name", 
        "in-maint"
      ]
    }, 
    "pnfs": {
      "description": "Collection of Physical Network Functions.\n", 
      "properties": {
        "pnf": {
          "items": {
            "$ref": "#/getDefinitions/pnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "port-group": {
      "description": "Used to capture the network interfaces of this VCE\n###### Related Nodes\n- TO vce (PARENT of port-group, port-group BelongsTo vce, MANY2ONE)(4)\n- FROM cvlan-tag (CHILD of port-group, cvlan-tag BelongsTo port-group, MANY2ONE)(1)\n\n-(1) IF this PORT-GROUP node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this PORT-GROUP is DELETED also\n", 
      "properties": {
        "cvlan-tags": {
          "items": {
            "$ref": "#/getDefinitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "Unique ID of the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "neutron-network-name": {
          "description": "Neutron network name of this Interface", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "port-group-id": {
          "description": "Unique ID for port group in vmware", 
          "type": "string"
        }, 
        "port-group-name": {
          "description": "Likely to duplicate value of neutron network name", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "switch-name": {
          "description": "DVS or standard switch name (should be non-null for port groups associated with DVS)", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-id", 
        "orchestration-status"
      ]
    }, 
    "port-groups": {
      "properties": {
        "port-group": {
          "items": {
            "$ref": "#/getDefinitions/port-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "project": {
      "description": "describes the project\n###### Related Nodes\n- TO service-instance( project Uses service-instance, ONE2MANY)\n", 
      "properties": {
        "project-name": {
          "description": "Name of the project deploying a service", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "project-name"
      ]
    }, 
    "projects": {
      "description": "Collection of projects\n", 
      "properties": {
        "project": {
          "items": {
            "$ref": "#/getDefinitions/project"
          }, 
          "type": "array"
        }
      }
    }, 
    "properties": {
      "description": "Property holder for query properties or instance properties\n", 
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "property-constraint": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of property-constraint, property-constraint BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this PROPERTY-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constraint-type": {
          "type": "string"
        }, 
        "property-constraint-uuid": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "property-constraint-uuid", 
        "constraint-type", 
        "property-name", 
        "property-value"
      ]
    }, 
    "property-constraints": {
      "properties": {
        "property-constraint": {
          "items": {
            "$ref": "#/getDefinitions/property-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "pserver": {
      "description": "Compute host whose hostname must be unique and must exactly match what is sent as a relationship to a vserver.\n###### Related Nodes\n- TO availability-zone( pserver MemberOf availability-zone, MANY2ONE)\n- TO cloud-region( pserver LocatedIn cloud-region, MANY2ONE)\n- TO complex( pserver LocatedIn complex, MANY2ONE)\n- TO group-assignment( pserver MemberOf group-assignment, MANY2ONE)\n- TO zone( pserver LocatedIn zone, MANY2ONE)\n- FROM flavor( flavor CanBeInstantiatedIn pserver, MANY2MANY)\nHPA Capacity getting the compute nodes from given flavor\n- FROM generic-vnf( generic-vnf HostedOn pserver, MANY2MANY)\n- FROM hpa-capacity (CHILD of pserver, hpa-capacity BelongsTo pserver, MANY2ONE)\nHPA Capacity KV for given compute node(1)\n- FROM lag-interface (CHILD of pserver, lag-interface BindsTo pserver, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pserver, MANY2MANY)\n- FROM nos-server( nos-server HostedOn pserver, ONE2ONE)\n- FROM p-interface (CHILD of pserver, p-interface BindsTo pserver, MANY2ONE)(1)\n- FROM vserver( vserver HostedOn pserver, MANY2ONE)\n\n-(1) IF this PSERVER node is deleted, this FROM node is DELETED also\n-PSERVER cannot be deleted if related to GROUP-ASSIGNMENT,GENERIC-VNF,LOGICAL-LINK,NOS-SERVER,VSERVER\n", 
      "properties": {
        "disk-in-gigabytes": {
          "description": "Disk size, in GBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "fqdn": {
          "description": "Fully-qualified domain name", 
          "type": "string"
        }, 
        "host-profile": {
          "description": "The host profile that defines the configuration of the pserver.", 
          "type": "string"
        }, 
        "hostname": {
          "description": "Value from executing hostname on the compute node.", 
          "type": "string"
        }, 
        "hpa-capacity": {
          "items": {
            "$ref": "#/getDefinitions/hpa-capacity"
          }, 
          "type": "array"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "internet-topology": {
          "description": "internet topology of Pserver", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Used to configure device, also used for troubleshooting and is IP used for traps generated by device.", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "Indicates who owns and or manages the device.", 
          "type": "string"
        }, 
        "number-of-cpus": {
          "description": "Number of cpus", 
          "format": "int32", 
          "type": "integer"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/p-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Prov Status of this device (not under canopi control) Valid values [PREPROV/NVTPROV/PROV]", 
          "type": "string"
        }, 
        "pserver-id": {
          "description": "ID of Pserver", 
          "type": "string"
        }, 
        "pserver-name2": {
          "description": "alternative pserver name", 
          "type": "string"
        }, 
        "pserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "ptnii-equip-name": {
          "description": "PTNII name", 
          "type": "string"
        }, 
        "purpose": {
          "description": "purpose of pserver", 
          "type": "string"
        }, 
        "ram-in-megabytes": {
          "description": "RAM size, in MBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number, may be queried", 
          "type": "string"
        }
      }, 
      "required": [
        "hostname", 
        "in-maint"
      ]
    }, 
    "pservers": {
      "description": "Collection of compute hosts.\n", 
      "properties": {
        "pserver": {
          "items": {
            "$ref": "#/getDefinitions/pserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "query-parameters": {
      "description": "QueryParameters for performing a named-query or model query\n", 
      "properties": {
        "named-query": {
          "$ref": "#/getDefinitions/named-query", 
          "type": "object"
        }, 
        "overloaded-model": {
          "$ref": "#/getDefinitions/overloaded-model", 
          "type": "object"
        }
      }
    }, 
    "related-lookup": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of related-lookup, related-lookup BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this RELATED-LOOKUP is DELETED also\n", 
      "properties": {
        "property-collect-list": {
          "type": "string"
        }, 
        "related-lookup-uuid": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }, 
        "source-node-property": {
          "type": "string"
        }, 
        "source-node-type": {
          "type": "string"
        }, 
        "target-node-property": {
          "type": "string"
        }, 
        "target-node-type": {
          "type": "string"
        }
      }, 
      "required": [
        "related-lookup-uuid", 
        "source-node-type", 
        "source-node-property", 
        "target-node-type", 
        "target-node-property"
      ]
    }, 
    "related-lookups": {
      "properties": {
        "related-lookup": {
          "items": {
            "$ref": "#/getDefinitions/related-lookup"
          }, 
          "type": "array"
        }
      }
    }, 
    "related-to-property": {
      "properties": {
        "property-key": {
          "description": "Key part of a key/value pair", 
          "type": "string"
        }, 
        "property-value": {
          "description": "Value part of a key/value pair", 
          "type": "string"
        }
      }
    }, 
    "relationship": {
      "description": "dictionary of relationship\n", 
      "properties": {
        "relationship": {
          "items": {
            "$ref": "#/getDefinitions/relationship-dict"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "relationship-data": {
      "properties": {
        "relationship-key": {
          "description": "A keyword provided by A&AI to indicate an attribute.", 
          "type": "string"
        }, 
        "relationship-value": {
          "description": "Value of the attribute.", 
          "type": "string"
        }
      }, 
      "required": [
        "relationship-key", 
        "relationship-value"
      ]
    }, 
    "relationship-dict": {
      "properties": {
        "related-link": {
          "description": "URL to the object in A&AI.", 
          "type": "string"
        }, 
        "related-to": {
          "description": "A keyword provided by A&AI to indicate type of node.", 
          "type": "string"
        }, 
        "related-to-property": {
          "items": {
            "$ref": "#/getDefinitions/related-to-property"
          }, 
          "type": "array"
        }, 
        "relationship-data": {
          "items": {
            "$ref": "#/getDefinitions/relationship-data"
          }, 
          "type": "array"
        }, 
        "relationship-label": {
          "description": "The edge label for this relationship.", 
          "type": "string"
        }
      }
    }, 
    "relationship-list": {
      "properties": {
        "relationship": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }
      }
    }, 
    "reserved-prop-names": {
      "description": "Internal map to define some reserved properties of a vertex\n", 
      "properties": {
        "aai-created-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-last-mod-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-node-type": {
          "type": "string"
        }, 
        "aai-unique-key": {
          "type": "string"
        }, 
        "aai-uri": {
          "type": "string"
        }, 
        "last-mod-source-of-truth": {
          "type": "string"
        }, 
        "source-of-truth": {
          "type": "string"
        }
      }
    }, 
    "response-list": {
      "description": "Response container for the results of a named-query or model query\n", 
      "properties": {
        "inventory-response-items": {
          "$ref": "#/getDefinitions/inventory-response-items", 
          "type": "object"
        }
      }
    }, 
    "result-data": {
      "properties": {
        "resource-link": {
          "description": "The URL to the specific resource", 
          "type": "string"
        }, 
        "resource-type": {
          "description": "The specific type of node in the A&AI graph", 
          "type": "string"
        }
      }
    }, 
    "route-table-reference": {
      "description": "Openstack route table reference.\n###### Related Nodes\n- FROM l3-network( l3-network Uses route-table-reference, MANY2MANY)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "route-table-reference-fqdn": {
          "description": "FQDN entry in the route table.", 
          "type": "string"
        }, 
        "route-table-reference-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "route-table-reference-id", 
        "route-table-reference-fqdn"
      ]
    }, 
    "route-table-references": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "route-table-reference": {
          "items": {
            "$ref": "#/getDefinitions/route-table-reference"
          }, 
          "type": "array"
        }
      }
    }, 
    "route-target": {
      "description": "Route target information\n###### Related Nodes\n- TO vpn-binding (PARENT of route-target, route-target BelongsTo vpn-binding, MANY2ONE)(4)\n- TO vrf (PARENT of route-target, route-target BelongsTo vrf, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ROUTE-TARGET is DELETED also\n", 
      "properties": {
        "global-route-target": {
          "description": "Number used to identify an RT, globally unique in the network", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-target-role": {
          "description": "Role assigned to this route target", 
          "type": "string"
        }
      }, 
      "required": [
        "global-route-target", 
        "route-target-role"
      ]
    }, 
    "route-targets": {
      "description": "Collection of route target information\n", 
      "properties": {
        "route-target": {
          "items": {
            "$ref": "#/getDefinitions/route-target"
          }, 
          "type": "array"
        }
      }
    }, 
    "routing-instance": {
      "description": "###### Related Nodes\n- TO site-pair-set (PARENT of routing-instance, routing-instance BelongsTo site-pair-set, MANY2ONE)(4)\n- FROM site-pair (CHILD of routing-instance, site-pair BelongsTo routing-instance, MANY2ONE)(1)\n\n-(1) IF this ROUTING-INSTANCE node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ROUTING-INSTANCE is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-instance-id": {
          "description": "Unique id of routing instance", 
          "type": "string"
        }, 
        "rpm-owner": {
          "description": "rpm owner", 
          "type": "string"
        }, 
        "site-pairs": {
          "items": {
            "$ref": "#/getDefinitions/site-pair"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "routing-instance-id"
      ]
    }, 
    "routing-instances": {
      "description": "set of probes related to generic-vnf routing instance\n", 
      "properties": {
        "routing-instance": {
          "items": {
            "$ref": "#/getDefinitions/routing-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "sdn-zone-response": {
      "properties": {
        "az-and-dvs-switches": {
          "items": {
            "$ref": "#/getDefinitions/az-and-dvs-switches"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "$ref": "#/getDefinitions/oam-networks", 
          "type": "object"
        }
      }
    }, 
    "sdwan-vpn": {
      "description": "Instance of an sdwan-vpn\n###### Related Nodes\n- TO ext-aai-network( sdwan-vpn BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( sdwan-vpn PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- TO tenant( sdwan-vpn PartOf tenant, ONE2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( sdwan-vpn PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "sdwan-vpn-id": {
          "description": "Uniquely identifies this sdwan-vpn by id", 
          "type": "string"
        }, 
        "sdwan-vpn-name": {
          "description": "Store the name of this sdwan-vpn.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Store the tenant-id of this sdwan-vpn.", 
          "type": "string"
        }, 
        "topology": {
          "description": "Store the topology of this sdwan-vpn.", 
          "type": "string"
        }, 
        "vpn-id": {
          "description": "Store the vpn-id of this sdwan-vpn.", 
          "type": "string"
        }, 
        "vxlan-id": {
          "description": "Store the vxlan-id of this sdwan-vpn.", 
          "type": "string"
        }
      }, 
      "required": [
        "sdwan-vpn-id"
      ]
    }, 
    "sdwan-vpns": {
      "description": "Collection of sdwan-vpns\n", 
      "properties": {
        "sdwan-vpn": {
          "items": {
            "$ref": "#/getDefinitions/sdwan-vpn"
          }, 
          "type": "array"
        }
      }
    }, 
    "search": {
      "properties": {
        "edge-tag-query-request": {
          "$ref": "#/getDefinitions/edge-tag-query-request", 
          "type": "object"
        }, 
        "edge-tag-query-result": {
          "$ref": "#/getDefinitions/edge-tag-query-result", 
          "type": "object"
        }, 
        "sdn-zone-response": {
          "$ref": "#/getDefinitions/sdn-zone-response", 
          "type": "object"
        }, 
        "search-results": {
          "$ref": "#/getDefinitions/search-results", 
          "type": "object"
        }
      }
    }, 
    "search-results": {
      "properties": {
        "result-data": {
          "items": {
            "$ref": "#/getDefinitions/result-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "secondary-filt": {
      "description": "SecondaryFilt for performing a named-query or model query\n"
    }, 
    "secondary-filter": {
      "properties": {
        "filter-type": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "secondary-filts": {
      "description": "SecondaryFilts for performing a named-query or model query\n", 
      "properties": {
        "secondary-filt": {
          "items": {
            "$ref": "#/getDefinitions/secondary-filt"
          }, 
          "type": "array"
        }
      }
    }, 
    "segmentation-assignment": {
      "description": "Openstack segmentation assignment.\n###### Related Nodes\n- TO l3-network (PARENT of segmentation-assignment, segmentation-assignment BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this SEGMENTATION-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "segmentation-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "segmentation-id"
      ]
    }, 
    "segmentation-assignments": {
      "description": "Collection of openstack segmentation assignments\n", 
      "properties": {
        "segmentation-assignment": {
          "items": {
            "$ref": "#/getDefinitions/segmentation-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "service": {
      "description": "Stand-in for service model definitions.  Likely to be deprecated in favor of models from ASDC.  Does not strictly map to ASDC services.\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-description": {
          "description": "Description of the service", 
          "type": "string"
        }, 
        "service-id": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "service-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "service-version": {
          "description": "service version", 
          "type": "string"
        }
      }, 
      "required": [
        "service-id", 
        "service-description"
      ]
    }, 
    "service-capabilities": {
      "description": "Collection of service capabilities.\n", 
      "properties": {
        "service-capability": {
          "items": {
            "$ref": "#/getDefinitions/service-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-capability": {
      "description": "Early definition of server/resource pairings, likely to be replaced by models.  No new use should be made of this.\n###### Related Nodes\n- FROM availability-zone( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo service-capability, MANY2MANY)\n\n-SERVICE-CAPABILITY cannot be deleted if related to AVAILABILITY-ZONE,OAM-NETWORK\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type", 
        "vnf-type"
      ]
    }, 
    "service-design-and-creation": {
      "description": "Namespace for objects managed by ASDC\n", 
      "properties": {
        "models": {
          "items": {
            "$ref": "#/getDefinitions/model"
          }, 
          "type": "array"
        }, 
        "named-queries": {
          "items": {
            "$ref": "#/getDefinitions/named-query"
          }, 
          "type": "array"
        }, 
        "service-capabilities": {
          "items": {
            "$ref": "#/getDefinitions/service-capability"
          }, 
          "type": "array"
        }, 
        "services": {
          "items": {
            "$ref": "#/getDefinitions/service"
          }, 
          "type": "array"
        }, 
        "vnf-images": {
          "items": {
            "$ref": "#/getDefinitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-instance": {
      "description": "Instance of a service\n###### Related Nodes\n- TO allotted-resource( service-instance Uses allotted-resource, MANY2MANY)\n- TO collection( service-instance ComposedOf collection, ONE2ONE)\n- TO configuration( service-instance Uses configuration, ONE2MANY)\n- TO configuration( service-instance ComposedOf configuration, MANY2MANY)\n- TO connector( service-instance Uses connector, MANY2MANY)\n- TO ctag-assignment( service-instance Uses ctag-assignment, ONE2MANY)\n- TO cvlan-tag( service-instance ComposedOf cvlan-tag, MANY2MANY)\n- TO generic-vnf( service-instance ComposedOf generic-vnf, ONE2MANY)\n- TO instance-group( service-instance Uses instance-group, ONE2MANY)\nMSO creates this edge on VNF Group Service creation\n- TO instance-group( service-instance MemberOf instance-group, MANY2MANY)\n- TO l3-network( service-instance ComposedOf l3-network, ONE2MANY)\n- TO logical-link( service-instance Uses logical-link, MANY2MANY)(2)\n- TO owning-entity( service-instance BelongsTo owning-entity, MANY2ONE)\n- TO pnf( service-instance ComposedOf pnf, ONE2MANY)\n- TO service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- TO service-subscription (PARENT of service-instance, service-instance BelongsTo service-subscription, MANY2ONE)(4)\n- TO vce( service-instance ComposedOf vce, ONE2MANY)\n- TO vlan( service-instance ComposedOf vlan, ONE2MANY)\n- TO zone( service-instance LocatedIn zone, MANY2ONE)\n- FROM allotted-resource (CHILD of service-instance, allotted-resource BelongsTo service-instance, MANY2ONE)(1)\n- FROM connectivity( connectivity PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM device( device PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM forwarding-path( forwarding-path AppliesTo service-instance, MANY2ONE)(1)\n- FROM lan-port-config( lan-port-config PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM metadatum (CHILD of service-instance, metadatum BelongsTo service-instance, MANY2ONE)(1)\n- FROM project( project Uses service-instance, ONE2MANY)\n- FROM sdwan-vpn( sdwan-vpn PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- FROM site-resource( site-resource PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n- FROM sp-partner( sp-partner PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM wan-port-config( wan-port-config PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n\n-(1) IF this SERVICE-INSTANCE node is deleted, this FROM node is DELETED also\n-(2) IF this SERVICE-INSTANCE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-INSTANCE is DELETED also\n", 
      "properties": {
        "allotted-resources": {
          "items": {
            "$ref": "#/getDefinitions/allotted-resource"
          }, 
          "type": "array"
        }, 
        "bandwidth-total": {
          "description": "Indicates the total bandwidth to be used for this service.", 
          "type": "string"
        }, 
        "created-at": {
          "description": "create time of Network Service.", 
          "type": "string"
        }, 
        "description": {
          "description": "short description for service-instance.", 
          "type": "string"
        }, 
        "environment-context": {
          "description": "This field will store the environment context assigned to the service-instance.", 
          "type": "string"
        }, 
        "input-parameters": {
          "description": "String capturing request parameters from SO to pass to Closed Loop.", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/getDefinitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this service.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-instance-id": {
          "description": "Uniquely identifies this instance of a service", 
          "type": "string"
        }, 
        "service-instance-location-id": {
          "description": "An identifier that customers assign to the location where this service is being used.", 
          "type": "string"
        }, 
        "service-instance-name": {
          "description": "This field will store a name assigned to the service-instance.", 
          "type": "string"
        }, 
        "service-role": {
          "description": "String capturing the service role.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "String capturing type of service.", 
          "type": "string"
        }, 
        "updated-at": {
          "description": "last update of Network Service.", 
          "type": "string"
        }, 
        "vhn-portal-url": {
          "description": "URL customers will use to access the vHN Portal.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "This field will store the workload context assigned to the service-instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-instance-id"
      ]
    }, 
    "service-instances": {
      "description": "Collection of service instances\n", 
      "properties": {
        "service-instance": {
          "items": {
            "$ref": "#/getDefinitions/service-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-subscription": {
      "description": "Object that group service instances.\n###### Related Nodes\n- TO customer (PARENT of service-subscription, service-subscription BelongsTo customer, MANY2ONE)(4)\n- TO tenant( service-subscription Uses tenant, MANY2MANY)\n- FROM service-instance (CHILD of service-subscription, service-instance BelongsTo service-subscription, MANY2ONE)(1)\n\n-(1) IF this SERVICE-SUBSCRIPTION node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-SUBSCRIPTION is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-instances": {
          "items": {
            "$ref": "#/getDefinitions/service-instance"
          }, 
          "type": "array"
        }, 
        "service-type": {
          "description": "Value defined by orchestration to identify this service across ECOMP.", 
          "type": "string"
        }, 
        "temp-ub-sub-account-id": {
          "description": "This property will be deleted from A&AI in the near future. Only stop gap solution.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type"
      ]
    }, 
    "service-subscriptions": {
      "description": "Collection of objects that group service instances.\n", 
      "properties": {
        "service-subscription": {
          "items": {
            "$ref": "#/getDefinitions/service-subscription"
          }, 
          "type": "array"
        }
      }
    }, 
    "services": {
      "description": "Collection of service model definitions.  Likely to be deprecated in favor of models from ASDC.\n", 
      "properties": {
        "service": {
          "items": {
            "$ref": "#/getDefinitions/service"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pair": {
      "description": "###### Related Nodes\n- TO routing-instance (PARENT of site-pair, site-pair BelongsTo routing-instance, MANY2ONE)(4)\n- FROM class-of-service (CHILD of site-pair, class-of-service BelongsTo site-pair, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SITE-PAIR is DELETED also\n", 
      "properties": {
        "classes-of-service": {
          "items": {
            "$ref": "#/getDefinitions/class-of-service"
          }, 
          "type": "array"
        }, 
        "destination-equip-type": {
          "description": "The type of destinatination equipment. Could be Router, UCPE, etc.", 
          "type": "string"
        }, 
        "destination-hostname": {
          "description": "Hostname of the destination equipment to which SLAs are measured against.", 
          "type": "string"
        }, 
        "destination-ip": {
          "description": "Prefix address", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version, v4, v6", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "site-pair-id": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "source-ip": {
          "description": "Prefix address", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-id"
      ]
    }, 
    "site-pair-set": {
      "description": "Set of instances for probes used to measure service level agreements\n###### Related Nodes\n- TO generic-vnf( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM routing-instance (CHILD of site-pair-set, routing-instance BelongsTo site-pair-set, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR-SET node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-instances": {
          "items": {
            "$ref": "#/getDefinitions/routing-instance"
          }, 
          "type": "array"
        }, 
        "site-pair-set-id": {
          "description": "Unique id of site pair set.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-set-id"
      ]
    }, 
    "site-pair-sets": {
      "description": "Collection of sets of instances for probes related to generic-vnf\n", 
      "properties": {
        "site-pair-set": {
          "items": {
            "$ref": "#/getDefinitions/site-pair-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pairs": {
      "description": "probe within a set\n", 
      "properties": {
        "site-pair": {
          "items": {
            "$ref": "#/getDefinitions/site-pair"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-resource": {
      "description": "Instance of a site-resource\n###### Related Nodes\n- TO allotted-resource( site-resource Uses allotted-resource, MANY2MANY)\nFor CCVPN Usecase\n- TO complex( site-resource Uses complex, MANY2MANY)\nFor CCVPN Usecase\n- TO ext-aai-network( site-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( site-resource PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "description": {
          "description": "Store the description of this site-resource.", 
          "type": "string"
        }, 
        "generated-site-id": {
          "description": "Store the generated-site-id of this site-resource.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "role": {
          "description": "Store the role of this site-resource.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "site-resource-id": {
          "description": "Uniquely identifies this site-resource by id", 
          "type": "string"
        }, 
        "site-resource-name": {
          "description": "Store the name of this site-resource.", 
          "type": "string"
        }, 
        "type": {
          "description": "Store the type of this site-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-resource-id"
      ]
    }, 
    "site-resources": {
      "description": "Collection of site-resources\n", 
      "properties": {
        "site-resource": {
          "items": {
            "$ref": "#/getDefinitions/site-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "snapshot": {
      "description": "Openstack snapshot\n###### Related Nodes\n- TO cloud-region (PARENT of snapshot, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM vserver( vserver Uses snapshot, ONE2ONE)\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "prev-snapshot-id": {
          "description": "This field contains the UUID of the previous snapshot (if any).", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "snapshot-architecture": {
          "description": "Operating system architecture", 
          "type": "string"
        }, 
        "snapshot-id": {
          "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
          "type": "string"
        }, 
        "snapshot-name": {
          "description": "Snapshot name", 
          "type": "string"
        }, 
        "snapshot-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "snapshot-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "snapshot-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot-id"
      ]
    }, 
    "snapshots": {
      "description": "Collection of openstack snapshots\n", 
      "properties": {
        "snapshot": {
          "items": {
            "$ref": "#/getDefinitions/snapshot"
          }, 
          "type": "array"
        }
      }
    }, 
    "software-version": {
      "description": "Software Version\n###### Related Nodes\n- TO pnf (PARENT of software-version, software-version BelongsTo pnf, MANY2ONE)\n", 
      "properties": {
        "is-active-sw-ver": {
          "description": "used to indicate whether or not this software-version is the active one (activeSw = true)", 
          "type": "boolean"
        }, 
        "software-version-id": {
          "description": "Identifier of the software version", 
          "type": "string"
        }
      }, 
      "required": [
        "software-version-id", 
        "is-active-sw-ver"
      ]
    }, 
    "software-versions": {
      "description": "Collection of software versions.\n", 
      "properties": {
        "software-version": {
          "items": {
            "$ref": "#/getDefinitions/software-version"
          }, 
          "type": "array"
        }
      }
    }, 
    "sp-partner": {
      "description": "Instance of an sp-partner\n###### Related Nodes\n- TO service-instance( sp-partner PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "callsource": {
          "description": "Store the callsource of this sp-partner.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this sp-partner.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this sp-partner model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this sp-partner model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this sp-partner.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "sp-partner-id": {
          "description": "Uniquely identifies this sp-partner by id", 
          "type": "string"
        }, 
        "url": {
          "description": "Store the URL of this sp-partner.", 
          "type": "string"
        }
      }, 
      "required": [
        "sp-partner-id"
      ]
    }, 
    "sp-partners": {
      "description": "Collection of sp-partners\n", 
      "properties": {
        "sp-partner": {
          "items": {
            "$ref": "#/getDefinitions/sp-partner"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-pf": {
      "description": "SR-IOV Physical Function\n###### Related Nodes\n- TO p-interface (PARENT of sriov-pf, sriov-pf BelongsTo p-interface, ONE2ONE)(4)\n- FROM sriov-vf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-PF is DELETED also\n", 
      "properties": {
        "pf-pci-id": {
          "description": "Identifier for the sriov-pf", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "pf-pci-id"
      ]
    }, 
    "sriov-pfs": {
      "description": "Collection of SR-IOV Physical Functions.\n", 
      "properties": {
        "sriov-pf": {
          "items": {
            "$ref": "#/getDefinitions/sriov-pf"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-vf": {
      "description": "SR-IOV Virtual Function (not to be confused with virtual network function)\n###### Related Nodes\n- TO l-interface (PARENT of sriov-vf, sriov-vf BelongsTo l-interface, ONE2ONE)(4)\n- TO sriov-pf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-VF is DELETED also\n", 
      "properties": {
        "neutron-network-id": {
          "description": "Neutron network id of the interface", 
          "type": "string"
        }, 
        "pci-id": {
          "description": "PCI ID used to identify the sriov-vf", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vf-broadcast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows all broadcast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-insert-stag": {
          "description": "This option, if set to true, instructs to insert outer tag after traffic comes out of VM.", 
          "type": "boolean"
        }, 
        "vf-link-status": {
          "description": "This option is used to set the link status.  Valid values as of 1607 are on, off, and auto.", 
          "type": "string"
        }, 
        "vf-mac-anti-spoof-check": {
          "description": "This option ensures anti MAC spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-mac-filter": {
          "description": "When MAC filters are specified, VF-agent service configures VFs to do MAC level filtering before the traffic is passed to VM.", 
          "type": "string"
        }, 
        "vf-mirrors": {
          "description": "This option defines the set of Mirror objects which essentially mirrors the traffic from source to set of collector VNF Ports.", 
          "type": "string"
        }, 
        "vf-unknown-multicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown multicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-unknown-unicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown unicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-vlan-anti-spoof-check": {
          "description": "This option ensures anti VLAN spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-vlan-filter": {
          "description": "This metadata provides option to specify list of VLAN filters applied on VF to pass the traffic to VM.", 
          "type": "string"
        }, 
        "vf-vlan-strip": {
          "description": "When this field is set to true, VF will configured to strip the outer TAG before the traffic is passed to VM.", 
          "type": "boolean"
        }
      }, 
      "required": [
        "pci-id"
      ]
    }, 
    "sriov-vfs": {
      "description": "Collection of SR-IOV Virtual Functions.\n", 
      "properties": {
        "sriov-vf": {
          "items": {
            "$ref": "#/getDefinitions/sriov-vf"
          }, 
          "type": "array"
        }
      }
    }, 
    "start-node-filter": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "subnet": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of subnet, subnet BelongsTo l3-network, MANY2ONE)(4)\n- FROM host-route (CHILD of subnet, host-route BelongsTo subnet, MANY2ONE)(1)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n\n-(1) IF this SUBNET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SUBNET is DELETED also\n-SUBNET cannot be deleted if related to L3-INTERFACE-IPV4-ADDRESS-LIST,L3-INTERFACE-IPV6-ADDRESS-LIST,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST\n", 
      "properties": {
        "cidr-mask": {
          "description": "cidr mask", 
          "type": "string"
        }, 
        "dhcp-enabled": {
          "description": "dhcp enabled", 
          "type": "boolean"
        }, 
        "dhcp-end": {
          "description": "the last address reserved for use by dhcp", 
          "type": "string"
        }, 
        "dhcp-start": {
          "description": "the start address reserved for use by dhcp", 
          "type": "string"
        }, 
        "gateway-address": {
          "description": "gateway ip address", 
          "type": "string"
        }, 
        "host-routes": {
          "items": {
            "$ref": "#/getDefinitions/host-route"
          }, 
          "type": "array"
        }, 
        "ip-assignment-direction": {
          "description": "ip address assignment direction of the subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "network start address", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of this subnet", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "subnet-id": {
          "description": "Subnet ID, should be UUID.", 
          "type": "string"
        }, 
        "subnet-name": {
          "description": "Name associated with the subnet.", 
          "type": "string"
        }, 
        "subnet-role": {
          "description": "role of the subnet, referenced when assigning IPs", 
          "type": "string"
        }, 
        "subnet-sequence": {
          "description": "sequence of the subnet", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "subnet-id", 
        "dhcp-enabled"
      ]
    }, 
    "subnets": {
      "properties": {
        "subnet": {
          "items": {
            "$ref": "#/getDefinitions/subnet"
          }, 
          "type": "array"
        }
      }
    }, 
    "tagged-inventory-item-list": {
      "properties": {
        "inventory-item": {
          "items": {
            "$ref": "#/getDefinitions/inventory-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "tenant": {
      "description": "Openstack tenant\n###### Related Nodes\n- TO cloud-region (PARENT of tenant, tenant BelongsTo cloud-region, MANY2ONE)\n- TO group-assignment( tenant MemberOf group-assignment, MANY2MANY)\n- TO l3-network( tenant Uses l3-network, MANY2MANY)\n- TO volume-group( tenant DependsOn volume-group, ONE2MANY)\n- FROM generic-vnf( generic-vnf BelongsTo tenant, MANY2ONE)\n- FROM nos-server (CHILD of tenant, nos-server BelongsTo tenant, MANY2ONE)\n- FROM sdwan-vpn( sdwan-vpn PartOf tenant, ONE2MANY)\nFor CCVPN Usecase\n- FROM service-subscription( service-subscription Uses tenant, MANY2MANY)\n- FROM vserver (CHILD of tenant, vserver BelongsTo tenant, MANY2ONE)\n\n-TENANT cannot be deleted if related to NOS-SERVER,VSERVER\n", 
      "properties": {
        "nos-servers": {
          "items": {
            "$ref": "#/getDefinitions/nos-server"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tenant-context": {
          "description": "This field will store the tenant context.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Unique id relative to the cloud-region.", 
          "type": "string"
        }, 
        "tenant-name": {
          "description": "Readable name of tenant", 
          "type": "string"
        }, 
        "vservers": {
          "items": {
            "$ref": "#/getDefinitions/vserver"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "tenant-id", 
        "tenant-name"
      ]
    }, 
    "tenants": {
      "description": "Collection of openstack tenants.\n", 
      "properties": {
        "tenant": {
          "items": {
            "$ref": "#/getDefinitions/tenant"
          }, 
          "type": "array"
        }
      }
    }, 
    "tunnel-xconnect": {
      "description": "Represents the specifics of a tunnel cross connect piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource (PARENT of tunnel-xconnect, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this TUNNEL-XCONNECT is DELETED also\n", 
      "properties": {
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "tunnel-xconnects": {
      "description": "This object is used to store the specific tunnel cross connect aspects of an allotted resource\n", 
      "properties": {
        "tunnel-xconnect": {
          "items": {
            "$ref": "#/getDefinitions/tunnel-xconnect"
          }, 
          "type": "array"
        }
      }
    }, 
    "update": {
      "description": "Serves a PATCH like function.  Does not enforce concurrency control.  Clear each usage with AAI team.\n", 
      "properties": {
        "action": {
          "items": {
            "$ref": "#/getDefinitions/action"
          }, 
          "type": "array"
        }, 
        "update-node-key": {
          "items": {
            "$ref": "#/getDefinitions/update-node-key"
          }, 
          "type": "array"
        }, 
        "update-node-type": {
          "type": "string"
        }, 
        "update-node-uri": {
          "type": "string"
        }
      }, 
      "required": [
        "update-node-type"
      ]
    }, 
    "update-node-key": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "vce": {
      "description": "Virtual Customer Edge Router, used specifically for Gamma.  This object is deprecated.\n###### Related Nodes\n- TO availability-zone( vce Uses availability-zone, MANY2MANY)\n- TO complex( vce LocatedIn complex, MANY2MANY)\n- TO vserver( vce HostedOn vserver, ONE2MANY)\n- FROM entitlement (CHILD of vce, entitlement BelongsTo vce, MANY2ONE)(1)\n- FROM license (CHILD of vce, license BelongsTo vce, MANY2ONE)(1)\n- FROM port-group (CHILD of vce, port-group BelongsTo vce, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vce, ONE2MANY)\n\n-(1) IF this VCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "entitlement-resource-uuid": {
          "description": "OBSOLETE -  see child relationships", 
          "type": "string"
        }, 
        "entitlements": {
          "items": {
            "$ref": "#/getDefinitions/entitlement"
          }, 
          "type": "array"
        }, 
        "equipment-role": {
          "description": "Network role being played by this VNF", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-loopback0-address": {
          "description": "Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure vce, also used for troubleshooting and is IP used for traps generated by VCE.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "licenses": {
          "items": {
            "$ref": "#/getDefinitions/license"
          }, 
          "type": "array"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "port-groups": {
          "items": {
            "$ref": "#/getDefinitions/port-group"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not strictly map to ASDC services, SOON TO BE DEPRECATED.", 
          "type": "string"
        }, 
        "v6-vce-wan-address": {
          "description": "Valid v6 IP address for the WAN Link on this router.  Implied length of /64.", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "vpe-id": {
          "description": "Unique ID of VPE connected to this VCE.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "vces": {
      "description": "Collection of Virtual Customer Edge Routers, used specifically for Gamma.  This object is deprecated.\n", 
      "properties": {
        "vce": {
          "items": {
            "$ref": "#/getDefinitions/vce"
          }, 
          "type": "array"
        }
      }
    }, 
    "vf-module": {
      "description": "a deployment unit of VNFCs\n###### Related Nodes\n- TO generic-vnf (PARENT of vf-module, vf-module BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l3-network( vf-module DependsOn l3-network, MANY2MANY)\n- TO vnfc( vf-module Uses vnfc, ONE2MANY)(2)\n- TO volume-group( vf-module Uses volume-group, ONE2ONE)\n- TO vserver( vf-module Uses vserver, ONE2MANY)\n\n-(2) IF this VF-MODULE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VF-MODULE is DELETED also\n", 
      "properties": {
        "automated-assignment": {
          "description": "Indicates whether vf-module assignment was done via automation or manually", 
          "type": "boolean"
        }, 
        "contrail-service-instance-fqdn": {
          "description": "the Contrail unique ID for a service-instance", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance.", 
          "type": "string"
        }, 
        "is-base-vf-module": {
          "description": "used to indicate whether or not this object is base vf module", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "module-index": {
          "description": "the index will track the number of modules of a given type that have been deployed in a VNF, starting with 0, and always choosing the lowest available digit", 
          "format": "int32", 
          "type": "integer"
        }, 
        "orchestration-status": {
          "description": "orchestration status of this vf-module, mastered by MSO", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "vf-module-id": {
          "description": "Unique ID of vf-module.", 
          "type": "string"
        }, 
        "vf-module-name": {
          "description": "Name of vf-module", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "vf-module-id", 
        "is-base-vf-module", 
        "automated-assignment"
      ]
    }, 
    "vf-modules": {
      "description": "Collection of vf-modules, a deployment unit of VNFCs\n", 
      "properties": {
        "vf-module": {
          "items": {
            "$ref": "#/getDefinitions/vf-module"
          }, 
          "type": "array"
        }
      }
    }, 
    "vig-server": {
      "description": "vig-server contains information about a vig server used for IPSec-configuration. Populated by SDN-C from 1607\n###### Related Nodes\n- TO ipsec-configuration (PARENT of vig-server, vig-server BelongsTo ipsec-configuration, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VIG-SERVER is DELETED also\n", 
      "properties": {
        "ipaddress-v4-vig": {
          "description": "v4 IP of the vig server", 
          "type": "string"
        }, 
        "ipaddress-v6-vig": {
          "description": "v6 IP of the vig server", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vig-address-type": {
          "description": "indicates whether the VIG is for AVPN or INTERNET", 
          "type": "string"
        }
      }, 
      "required": [
        "vig-address-type"
      ]
    }, 
    "vig-servers": {
      "properties": {
        "vig-server": {
          "items": {
            "$ref": "#/getDefinitions/vig-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "vip-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv4-address-list, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- TO cp( vip-ipv4-address-list Uses cp, MANY2MANY)\n- TO instance-group( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vip-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv4-address"
      ]
    }, 
    "vip-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv6-address-list, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- TO cp( vip-ipv6-address-list Uses cp, MANY2MANY)\n- TO instance-group( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vip-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv6-address"
      ]
    }, 
    "virtual-data-center": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n###### Related Nodes\n- FROM connector( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM generic-vnf( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- FROM logical-link( logical-link LocatedIn virtual-data-center, MANY2MANY)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vdc-id": {
          "description": "Unique ID of the vdc", 
          "type": "string"
        }, 
        "vdc-name": {
          "description": "Name of the virtual data center", 
          "type": "string"
        }
      }, 
      "required": [
        "vdc-id", 
        "vdc-name"
      ]
    }, 
    "virtual-data-centers": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n", 
      "properties": {
        "virtual-data-center": {
          "items": {
            "$ref": "#/getDefinitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan": {
      "description": "Definition of vlan\n###### Related Nodes\n- TO l-interface (PARENT of vlan, vlan LinksTo l-interface, MANY2ONE)(4)\n- TO logical-link( vlan Uses logical-link, MANY2MANY)(2)\n- TO multicast-configuration( vlan Uses multicast-configuration, MANY2MANY)\n- FROM allotted-resource( allotted-resource PartOf vlan, MANY2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of vlan, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vlan, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vlan, ONE2MANY)\n\n-(1) IF this VLAN node is deleted, this FROM node is DELETED also\n-(2) IF this VLAN node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VLAN is DELETED also\n", 
      "properties": {
        "backdoor-connection": {
          "description": "Whether customer is going to use this VLAN for backdoor connection to another customer premise device.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "is-ip-unnumbered": {
          "description": "Flag indicating the interface uses the IP Unnumbered configuration.", 
          "type": "boolean"
        }, 
        "is-private": {
          "description": "Private VLAN indicator.", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "orchestration-status": {
          "description": "Status of a vnf's vlan interface, on which the customer circuit resides, mastered by SDN-C.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of the VLAN configuration related to a logical interface. Valid values [PREPROV/NVTPROV/PROV].", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "vlan-description": {
          "description": "Used to describe (the service associated with) the vlan", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-interface": {
          "description": "String that identifies the interface", 
          "type": "string"
        }, 
        "vpn-key": {
          "description": "This indicates the customers VPN ID associated with this vlan", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-interface", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "vlan-mapping": {
      "description": "vlan-mapping object is an optional child object of the forwarder-evc object.  A given forwarder-evc object may have multiple vlan-mapping objects.\n###### Related Nodes\n- TO forwarder-evc (PARENT of vlan-mapping, vlan-mapping BelongsTo forwarder-evc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VLAN-MAPPING is DELETED also\n", 
      "properties": {
        "ivlan": {
          "description": "The internal VLAN ('IVLAN') value.  Specific to Arista devices.", 
          "type": "string"
        }, 
        "nni-cvlan": {
          "description": "CVLAN value from the NNI/egress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "nni-svlan": {
          "description": "SVLAN value from the NNI/egress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }, 
        "uni-cvlan": {
          "description": "CVLAN value from the UNI/ingress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "vlan-mapping-id": {
          "description": "Key for vlan-mapping object.", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-mapping-id"
      ]
    }, 
    "vlan-mappings": {
      "description": "Collection of vlan mappings.\n", 
      "properties": {
        "vlan-mapping": {
          "items": {
            "$ref": "#/getDefinitions/vlan-mapping"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan-tag": {
      "description": "###### Related Nodes\n- TO cloud-region( vlan-tag BelongsTo cloud-region, MANY2ONE)\n- TO cp( vlan-tag Uses cp, MANY2MANY)\n- TO l3-network( vlan-tag BelongsTo l3-network, MANY2MANY)\n", 
      "properties": {
        "is-private": {
          "description": "is VLAN private?", 
          "type": "boolean"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "VLAN inner id", 
          "format": "int32", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "VLAN outer id", 
          "format": "int32", 
          "type": "integer"
        }, 
        "vlan-tag-id": {
          "description": "Unique ID of the vlan-tag", 
          "type": "string"
        }, 
        "vlan-tag-role": {
          "description": "purpose (l3-network to be connected to)", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-tag-id", 
        "vlan-tag-role", 
        "vlan-id-outer", 
        "is-private"
      ]
    }, 
    "vlan-tags": {
      "properties": {
        "vlan-tag": {
          "items": {
            "$ref": "#/getDefinitions/vlan-tag"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlans": {
      "properties": {
        "vlan": {
          "items": {
            "$ref": "#/getDefinitions/vlan"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnf": {
      "description": "Abstract vnf class\n", 
      "properties": {
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id"
      ]
    }, 
    "vnf-image": {
      "description": "Image object that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses vnf-image, MANY2ONE)\n\n-VNF-IMAGE cannot be deleted if related to GENERIC-VNF\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "vnf-image-uuid": {
          "description": "Unique ID of this asset", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-image-uuid", 
        "application", 
        "application-vendor"
      ]
    }, 
    "vnf-images": {
      "description": "Collection of image objects that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n", 
      "properties": {
        "vnf-image": {
          "items": {
            "$ref": "#/getDefinitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnfc": {
      "description": "###### Related Nodes\n- TO cp (PARENT of vnfc, vnfc BelongsTo cp, ONE2MANY)\ncp is child of vnfc(2)\n- TO generic-vnf( vnfc BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( vnfc MemberOf instance-group, MANY2MANY)\n- TO vip-ipv4-address-list( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n- TO vip-ipv6-address-list( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n- TO vserver( vnfc HostedOn vserver, ONE2MANY)\n- FROM configuration( configuration Uses vnfc, ONE2ONE)(1)\n- FROM l3-interface-ipv4-address-list (CHILD of vnfc, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vnfc, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM vf-module( vf-module Uses vnfc, ONE2MANY)(3)\n\n-(1) IF this VNFC node is deleted, this FROM node is DELETED also\n-(2) IF this VNFC node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this VNFC is DELETED also\n-(4) IF this TO node is deleted, this VNFC is DELETED also\n", 
      "properties": {
        "cps": {
          "items": {
            "$ref": "#/getDefinitions/cp"
          }, 
          "type": "array"
        }, 
        "group-notation": {
          "description": "Group notation of VNFC", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "ipaddress-v4-oam-vip": {
          "description": "Oam V4 vip address of this vnfc", 
          "type": "string"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "nfc-function": {
          "description": "English description of function that the specific resource deployment is providing. Assigned as part of the customization of a resource in a service", 
          "type": "string"
        }, 
        "nfc-naming-code": {
          "description": "Short code that is used in naming instances of the item being modeled", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by APP-C", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "prov status of this vnfc", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vnfc-name": {
          "description": "Unique ID of vnfc.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfc-name", 
        "nfc-naming-code", 
        "nfc-function", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vnfcs": {
      "description": "virtual network components associated with a vserver from application controller.\n", 
      "properties": {
        "vnfc": {
          "items": {
            "$ref": "#/getDefinitions/vnfc"
          }, 
          "type": "array"
        }
      }
    }, 
    "volume": {
      "description": "Ephemeral Block storage volume.\n###### Related Nodes\n- FROM vserver (PARENT of volume, vserver AttachesTo volume, ONE2MANY)(3)\n\n-(3) IF this FROM node is deleted, this VOLUME is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "volume-id": {
          "description": "Unique ID of block storage volume relative to the vserver.", 
          "type": "string"
        }, 
        "volume-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-id", 
        "volume-selflink"
      ]
    }, 
    "volume-group": {
      "description": "Persistent block-level storage.\n###### Related Nodes\n- TO cloud-region (PARENT of volume-group, volume-group BelongsTo cloud-region, MANY2ONE)\n- TO complex( volume-group LocatedIn complex, MANY2ONE)\n- FROM generic-vnf( generic-vnf DependsOn volume-group, ONE2MANY)\n- FROM tenant( tenant DependsOn volume-group, ONE2MANY)\n- FROM vf-module( vf-module Uses volume-group, ONE2ONE)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this volume-group", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this volume-group", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vf-module-model-customization-id": {
          "description": "helps relate the volume group to the vf-module whose components will require the volume group", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "volume-group-id": {
          "description": "Unique ID of volume-group.", 
          "type": "string"
        }, 
        "volume-group-name": {
          "description": "Name of the volume group.", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-group-id", 
        "vnf-type"
      ]
    }, 
    "volume-groups": {
      "description": "Collection of persistent block-level storage.\n", 
      "properties": {
        "volume-group": {
          "items": {
            "$ref": "#/getDefinitions/volume-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "volumes": {
      "description": "Collection of ephemeral Block storage volumes.\n", 
      "properties": {
        "volume": {
          "items": {
            "$ref": "#/getDefinitions/volume"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpls-pe": {
      "description": "VPLS Provider Edge routers.\n###### Related Nodes\n- TO complex( vpls-pe LocatedIn complex, MANY2ONE)\n- TO ctag-pool( vpls-pe Uses ctag-pool, MANY2MANY)\n- FROM lag-interface (CHILD of vpls-pe, lag-interface BindsTo vpls-pe, MANY2ONE)(1)\n- FROM p-interface (CHILD of vpls-pe, p-interface BindsTo vpls-pe, MANY2ONE)(1)\n\n-(1) IF this VPLS-PE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-name": {
          "type": "string"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value, e.g., VPLS-PE.", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/p-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for stag to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "equipment-name"
      ]
    }, 
    "vpls-pes": {
      "description": "Collection of VPLS Provider Edge routers\n", 
      "properties": {
        "vpls-pe": {
          "items": {
            "$ref": "#/getDefinitions/vpls-pe"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpn-binding": {
      "description": "VPN binding\n###### Related Nodes\n- TO customer( vpn-binding Uses customer, MANY2MANY)\n- TO ext-aai-network( vpn-binding BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO p-interface( vpn-binding BindsTo p-interface, ONE2MANY)\nFor CCVPN Usecase\n- FROM allotted-resource( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses vpn-binding, MANY2ONE)\n- FROM connectivity( connectivity PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM l3-network( l3-network Uses vpn-binding, MANY2MANY)\n- FROM logical-link( logical-link Uses vpn-binding, MANY2MANY)\n- FROM network-resource( network-resource Uses vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM route-target (CHILD of vpn-binding, route-target BelongsTo vpn-binding, MANY2ONE)(1)\n- FROM sdwan-vpn( sdwan-vpn PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM vrf( vrf AppliesTo vpn-binding, MANY2ONE)\nA vrf uses a vpn-binding.\n\n-(1) IF this VPN-BINDING node is deleted, this FROM node is DELETED also\n-VPN-BINDING cannot be deleted if related to ALLOTTED-RESOURCE,L3-NETWORK,LOGICAL-LINK\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this vpn.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this vpn.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this vpn.", 
          "type": "string"
        }, 
        "customer-vpn-id": {
          "description": "id for this customer vpn", 
          "type": "string"
        }, 
        "dst-access-ltp-id": {
          "description": "Store the id of the dst-access-ltp of this vpn.", 
          "type": "string"
        }, 
        "dst-access-node-id": {
          "description": "Store the id of the dst-access-node of this vpn.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "relationship-list": {
          "description": "l3-networks relate to vpn-bindings", 
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-distinguisher": {
          "description": "Used to distinguish the distinct VPN routes of separate customers who connect to the provider in an MPLS network.", 
          "type": "string"
        }, 
        "route-targets": {
          "items": {
            "$ref": "#/getDefinitions/route-target"
          }, 
          "type": "array"
        }, 
        "src-access-ltp-id": {
          "description": "Store the id of the src-access-ltp of this vpn.", 
          "type": "string"
        }, 
        "src-access-node-id": {
          "description": "Store the id of the src-access-node of this vpn.", 
          "type": "string"
        }, 
        "vpn-id": {
          "description": "VPN ID, globally unique within A&AI", 
          "type": "string"
        }, 
        "vpn-name": {
          "description": "VPN Name", 
          "type": "string"
        }, 
        "vpn-platform": {
          "description": "the platform associated with the VPN example AVPN, Mobility", 
          "type": "string"
        }, 
        "vpn-region": {
          "description": "region of customer vpn", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Type of the vpn, should be taken from enumerated/valid values", 
          "type": "string"
        }
      }, 
      "required": [
        "vpn-id", 
        "vpn-name"
      ]
    }, 
    "vpn-bindings": {
      "properties": {
        "vpn-binding": {
          "items": {
            "$ref": "#/getDefinitions/vpn-binding"
          }, 
          "type": "array"
        }
      }
    }, 
    "vrf": {
      "description": "Definition of vrf\n###### Related Nodes\n- TO l-interface( vrf Uses l-interface, ONE2MANY)\n- TO l3-network( vrf Uses l3-network, ONE2MANY)\nA vrf uses many l3-networks\n- TO pnf (PARENT of vrf, vrf BelongsTo pnf, MANY2ONE)\nA vrf belongs to a pnf.(4)\n- TO vpn-binding( vrf AppliesTo vpn-binding, MANY2ONE)\nA vrf uses a vpn-binding.\n- FROM configuration( configuration Uses vrf, ONE2MANY)\nA Configuration uses VRFs\n- FROM route-target (CHILD of vrf, route-target BelongsTo vrf, MANY2ONE)(1)\n\n-(1) IF this VRF node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this VRF is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-distinguisher": {
          "description": "Route Distinguisher", 
          "type": "string"
        }, 
        "route-targets": {
          "items": {
            "$ref": "#/getDefinitions/route-target"
          }, 
          "type": "array"
        }, 
        "vrf-address-family": {
          "description": "IP address family (v6/v4/both)", 
          "type": "string"
        }, 
        "vrf-description": {
          "description": "VRF Description", 
          "type": "string"
        }, 
        "vrf-id": {
          "description": "VRF UUID.", 
          "type": "string"
        }, 
        "vrf-name": {
          "description": "VRF Name", 
          "type": "string"
        }, 
        "vrf-type": {
          "description": "The type of vrf (bridge-domain as an example)", 
          "type": "string"
        }
      }, 
      "required": [
        "vrf-id", 
        "vrf-name"
      ]
    }, 
    "vrfs": {
      "properties": {
        "vrf": {
          "items": {
            "$ref": "#/getDefinitions/vrf"
          }, 
          "type": "array"
        }
      }
    }, 
    "vserver": {
      "description": "Virtual Servers, aka virtual machine or VM.\n###### Related Nodes\n- TO flavor( vserver Uses flavor, MANY2ONE)\n- TO image( vserver Uses image, MANY2ONE)\n- TO pserver( vserver HostedOn pserver, MANY2ONE)\n- TO snapshot( vserver Uses snapshot, ONE2ONE)\n- TO tenant (PARENT of vserver, vserver BelongsTo tenant, MANY2ONE)\n- TO volume (PARENT of vserver, vserver AttachesTo volume, ONE2MANY)(2)\n- FROM generic-vnf( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM l-interface (CHILD of vserver, l-interface BindsTo vserver, MANY2ONE)(1)\n- FROM vce( vce HostedOn vserver, ONE2MANY)\n- FROM vf-module( vf-module Uses vserver, ONE2MANY)\n- FROM vnfc( vnfc HostedOn vserver, ONE2MANY)\n\n-(1) IF this VSERVER node is deleted, this FROM node is DELETED also\n-(2) IF this VSERVER node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "is-closed-loop-disabled": {
          "description": "Used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/getDefinitions/l-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "volumes": {
          "items": {
            "$ref": "#/getDefinitions/volume"
          }, 
          "type": "array"
        }, 
        "vserver-id": {
          "description": "Unique identifier for this vserver relative to its tenant", 
          "type": "string"
        }, 
        "vserver-name": {
          "description": "Name of vserver", 
          "type": "string"
        }, 
        "vserver-name2": {
          "description": "Alternative name of vserver", 
          "type": "string"
        }, 
        "vserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "vserver-id", 
        "vserver-name", 
        "vserver-selflink", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vservers": {
      "description": "Collection of virtual Servers, aka virtual machines or VMs.\n", 
      "properties": {
        "vserver": {
          "items": {
            "$ref": "#/getDefinitions/vserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "wan-port-config": {
      "description": "Instance of a wan-port-config\n###### Related Nodes\n- TO ext-aai-network( wan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( wan-port-config PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "description": {
          "description": "Store the description of this wan-port-config.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Store the id of the device of this wan-port-config.", 
          "type": "string"
        }, 
        "device-port-id": {
          "description": "Store the device-port-id of this wan-port-config.", 
          "type": "string"
        }, 
        "input-bandwidth": {
          "description": "Store the input-bandwidth of this wan-port-config.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "Store the ip-address of this wan-port-config.", 
          "type": "string"
        }, 
        "ipv4-address": {
          "description": "Store the ipv4-address of this wan-port-config.", 
          "type": "string"
        }, 
        "ipv6-address": {
          "description": "Store the ipv6-address of this wan-port-config.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "output-bandwidth": {
          "description": "Store the output-bandwidth of this wan-port-config.", 
          "type": "string"
        }, 
        "port-number": {
          "description": "Store the port-number of this wan-port-config.", 
          "type": "string"
        }, 
        "port-type": {
          "description": "Store the port-type of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ip-address": {
          "description": "Store the provider-ip-address of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ipv4-address": {
          "description": "Store the provider-ipv4-address of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ipv6-address": {
          "description": "Store the provider-ipv6-address of this wan-port-config.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "transport-network-name": {
          "description": "Store the transport-network-name of this wan-port-config.", 
          "type": "string"
        }, 
        "vlan-id": {
          "description": "Store the id of the vlan of this wan-port-config.", 
          "type": "string"
        }, 
        "wan-port-config-id": {
          "description": "Uniquely identifies this wan-port-config by id", 
          "type": "string"
        }, 
        "wan-port-config-name": {
          "description": "Store the name of this wan-port-config.", 
          "type": "string"
        }, 
        "wan-port-id": {
          "description": "Store the wan-port-id of this wan-port-config.", 
          "type": "string"
        }
      }, 
      "required": [
        "wan-port-config-id"
      ]
    }, 
    "wan-port-configs": {
      "description": "Collection of wan-port-configs\n", 
      "properties": {
        "wan-port-config": {
          "items": {
            "$ref": "#/getDefinitions/wan-port-config"
          }, 
          "type": "array"
        }
      }
    }, 
    "zone": {
      "description": "A zone is a grouping of assets in a location homing to the same connections into the CBB\n###### Related Nodes\n- TO complex( zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn zone, MANY2ONE)\n- FROM pnf( pnf LocatedIn zone, MANY2ONE)\n- FROM pserver( pserver LocatedIn zone, MANY2ONE)\n- FROM service-instance( service-instance LocatedIn zone, MANY2ONE)\n", 
      "properties": {
        "design-type": {
          "description": "Design of zone [Medium/Large\u2026]", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/getDefinitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "status": {
          "description": "Status of a zone.", 
          "type": "string"
        }, 
        "zone-context": {
          "description": "Context of zone [production/test]", 
          "type": "string"
        }, 
        "zone-id": {
          "description": "Code assigned by AIC to the zone", 
          "type": "string"
        }, 
        "zone-name": {
          "description": "English name associated with the zone", 
          "type": "string"
        }
      }, 
      "required": [
        "zone-id", 
        "zone-name", 
        "design-type", 
        "zone-context"
      ]
    }, 
    "zones": {
      "description": "Collection of zones\n", 
      "properties": {
        "zone": {
          "items": {
            "$ref": "#/getDefinitions/zone"
          }, 
          "type": "array"
        }
      }
    }
  }, 
  "host": "n/a", 
  "info": {
    "contact": {
      "email": "n/a", 
      "name": "n/a", 
      "url": "n/a"
    }, 
    "description": "\n[Differences versus the previous schema version](apidocs/aai_swagger_v15.diff)\n\nCopyright &copy; 2017-18 AT&amp;T Intellectual Property. All rights reserved.\n\nLicensed under the Creative Commons License, Attribution 4.0 Intl. (the &quot;License&quot;); you may not use this documentation except in compliance with the License.\n\nYou may obtain a copy of the License at\n\n(https://creativecommons.org/licenses/by/4.0/)\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nThis document is best viewed with Firefox or Chrome. Nodes can be found by appending /#/definitions/node-type-to-find to the path to this document. Edge definitions can be found with the node definitions.\n", 
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "title": "Active and Available Inventory REST API", 
    "version": "v15"
  }, 
  "patchDefinitions": {
    "action": {
      "properties": {
        "action-data": {
          "items": {
            "$ref": "#/patchDefinitions/action-data"
          }, 
          "type": "array"
        }, 
        "action-type": {
          "type": "string"
        }
      }
    }, 
    "action-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "actions": {
      "description": "APIs that are more action related than REST (e.g., notify, update).\n", 
      "properties": {
        "notify": {
          "$ref": "#/patchDefinitions/notify", 
          "type": "object"
        }, 
        "update": {
          "$ref": "#/patchDefinitions/update", 
          "type": "object"
        }
      }
    }, 
    "aggregate-route": {
      "description": "Aggregate route configs are used on the D2 IPE\u2019s for the Voice services.  In 1902, SDNC will create aggregate-route objects and write them to A&AI. \n###### Related Nodes\n- TO l3-network (PARENT of aggregate-route, aggregate-route BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this AGGREGATE-ROUTE is DELETED also\n", 
      "properties": {
        "cidr-mask": {
          "description": "CIDR-mask for aggregate route subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "Identifies is aggregate route is ipv4 or ipv6", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "Name of the forwarding-path", 
          "type": "string"
        }, 
        "route-id": {
          "description": "Unique id of the aggregate-route instance", 
          "type": "string"
        }
      }, 
      "required": [
        "route-id", 
        "network-start-address", 
        "cidr-mask", 
        "ip-version"
      ]
    }, 
    "aggregate-routes": {
      "description": "Collection of aggregate routes.\n", 
      "properties": {
        "aggregate-route": {
          "items": {
            "$ref": "#/patchDefinitions/aggregate-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "allotted-resource": {
      "description": "Represents a slice or partial piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource( allotted-resource BindsTo allotted-resource, ONE2ONE)\nAAI-1925\n- TO generic-vnf( allotted-resource PartOf generic-vnf, MANY2MANY)\n- TO instance-group( allotted-resource MemberOf instance-group, MANY2MANY)\n- TO l-interface( allotted-resource Uses l-interface, ONE2MANY)\n- TO l3-network( allotted-resource PartOf l3-network, MANY2MANY)\n- TO network-policy( allotted-resource Uses network-policy, ONE2ONE)\n- TO p-interface( allotted-resource Uses p-interface, ONE2MANY)\nAAI-1925 For CCVPN Usecase\n- TO service-instance (PARENT of allotted-resource, allotted-resource BelongsTo service-instance, MANY2ONE)(4)\n- TO vlan( allotted-resource PartOf vlan, MANY2MANY)\n- TO vpn-binding( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM allotted-resource( allotted-resource BindsTo allotted-resource, ONE2ONE)\nAAI-1925\n- FROM configuration( configuration Uses allotted-resource, ONE2ONE)(3)\n- FROM service-instance( service-instance Uses allotted-resource, MANY2MANY)\n- FROM site-resource( site-resource Uses allotted-resource, MANY2MANY)\nFor CCVPN Usecase\n- FROM tunnel-xconnect (CHILD of allotted-resource, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(1)\n\n-(1) IF this ALLOTTED-RESOURCE node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this ALLOTTED-RESOURCE is DELETED also\n-(4) IF this TO node is deleted, this ALLOTTED-RESOURCE is DELETED also\n", 
      "properties": {
        "description": {
          "description": "The descriptive information assigned to this allotted resource instance", 
          "type": "string"
        }, 
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Link back to more information in the controller", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "allotted-resources": {
      "description": "This object is used to store slices of services being offered\n", 
      "properties": {
        "allotted-resource": {
          "items": {
            "$ref": "#/patchDefinitions/allotted-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "availability-zone": {
      "description": "Availability zone, a collection of compute hosts/pservers\n###### Related Nodes\n- TO cloud-region (PARENT of availability-zone, availability-zone BelongsTo cloud-region, MANY2ONE)(4)\n- TO complex( availability-zone LocatedIn complex, MANY2ONE)\n- TO service-capability( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM ctag-pool( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- FROM dvs-switch( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses availability-zone, MANY2MANY)\n- FROM pserver( pserver MemberOf availability-zone, MANY2ONE)\n- FROM vce( vce Uses availability-zone, MANY2MANY)\n\n-(4) IF this TO node is deleted, this AVAILABILITY-ZONE is DELETED also\n-AVAILABILITY-ZONE cannot be deleted if related to CTAG-POOL,DVS-SWITCH,GENERIC-VNF,PSERVER,VCE\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone.  Unique across a cloud region", 
          "type": "string"
        }, 
        "hypervisor-type": {
          "description": "Type of hypervisor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "State that indicates whether the availability zone should be used, etc.  Source of truth should define valid values.", 
          "type": "string"
        }
      }, 
      "required": [
        "availability-zone-name", 
        "hypervisor-type"
      ]
    }, 
    "availability-zones": {
      "description": "Collection of availability zones\n", 
      "properties": {
        "availability-zone": {
          "items": {
            "$ref": "#/patchDefinitions/availability-zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "az-and-dvs-switches": {
      "properties": {
        "availability-zone": {
          "$ref": "#/patchDefinitions/availability-zone", 
          "type": "object"
        }, 
        "dvs-switches": {
          "$ref": "#/patchDefinitions/dvs-switches", 
          "type": "object"
        }
      }
    }, 
    "business": {
      "description": "Namespace for business related constructs\n", 
      "properties": {
        "connectors": {
          "items": {
            "$ref": "#/patchDefinitions/connector"
          }, 
          "type": "array"
        }, 
        "customers": {
          "items": {
            "$ref": "#/patchDefinitions/customer"
          }, 
          "type": "array"
        }, 
        "lines-of-business": {
          "items": {
            "$ref": "#/patchDefinitions/line-of-business"
          }, 
          "type": "array"
        }, 
        "owning-entities": {
          "items": {
            "$ref": "#/patchDefinitions/owning-entity"
          }, 
          "type": "array"
        }, 
        "platforms": {
          "items": {
            "$ref": "#/patchDefinitions/platform"
          }, 
          "type": "array"
        }, 
        "projects": {
          "items": {
            "$ref": "#/patchDefinitions/project"
          }, 
          "type": "array"
        }, 
        "sp-partners": {
          "items": {
            "$ref": "#/patchDefinitions/sp-partner"
          }, 
          "type": "array"
        }
      }
    }, 
    "class-of-service": {
      "description": "###### Related Nodes\n- TO site-pair (PARENT of class-of-service, class-of-service BelongsTo site-pair, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this CLASS-OF-SERVICE is DELETED also\n", 
      "properties": {
        "cos": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "probe-id": {
          "description": "identifier of probe", 
          "type": "string"
        }, 
        "probe-type": {
          "description": "type of probe", 
          "type": "string"
        }
      }, 
      "required": [
        "cos"
      ]
    }, 
    "classes-of-service": {
      "description": "class-of-service of probe\n", 
      "properties": {
        "class-of-service": {
          "items": {
            "$ref": "#/patchDefinitions/class-of-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-infrastructure": {
      "description": "Namespace for cloud infrastructure.\n", 
      "properties": {
        "cloud-regions": {
          "items": {
            "$ref": "#/patchDefinitions/cloud-region"
          }, 
          "type": "array"
        }, 
        "complexes": {
          "items": {
            "$ref": "#/patchDefinitions/complex"
          }, 
          "type": "array"
        }, 
        "network-profiles": {
          "items": {
            "$ref": "#/patchDefinitions/network-profile"
          }, 
          "type": "array"
        }, 
        "network-technologies": {
          "items": {
            "$ref": "#/patchDefinitions/network-technology"
          }, 
          "type": "array"
        }, 
        "operational-environments": {
          "items": {
            "$ref": "#/patchDefinitions/operational-environment"
          }, 
          "type": "array"
        }, 
        "pservers": {
          "items": {
            "$ref": "#/patchDefinitions/pserver"
          }, 
          "type": "array"
        }, 
        "virtual-data-centers": {
          "items": {
            "$ref": "#/patchDefinitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-region": {
      "description": "cloud-region designates an installation of a cloud cluster or region or instantiation. In AT&Ts AIC cloud, this could be an LCP or DCP. Cloud regions are uniquely identified by a composite key, cloud-owner + cloud-region-id. The format of the cloud-owner is vendor-cloudname and we will use att-aic for AT&T's AIC.\n###### Related Nodes\n- TO complex( cloud-region LocatedIn complex, MANY2ONE)\n- TO instance-group( cloud-region Uses instance-group, ONE2MANY)\n- TO l3-network( cloud-region Uses l3-network, MANY2MANY)\n- TO network-technology( cloud-region Uses network-technology, MANY2MANY)\n- TO zone( cloud-region LocatedIn zone, MANY2ONE)\n- FROM availability-zone (CHILD of cloud-region, availability-zone BelongsTo cloud-region, MANY2ONE)(1)\n- FROM dvs-switch (CHILD of cloud-region, dvs-switch BelongsTo cloud-region, MANY2ONE)\n- FROM esr-system-info (CHILD of cloud-region, esr-system-info BelongsTo cloud-region, MANY2ONE)(1)\n- FROM flavor (CHILD of cloud-region, flavor BelongsTo cloud-region, MANY2ONE)\n- FROM generic-vnf( generic-vnf LocatedIn cloud-region, MANY2ONE)\n- FROM group-assignment (CHILD of cloud-region, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM hpa-capability (CHILD of cloud-region, hpa-capability BelongsTo cloud-region, MANY2ONE)\n- FROM image (CHILD of cloud-region, image BelongsTo cloud-region, MANY2ONE)\n- FROM logical-link( logical-link LocatedIn cloud-region, MANY2MANY)\n- FROM oam-network (CHILD of cloud-region, oam-network BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver LocatedIn cloud-region, MANY2ONE)\n- FROM snapshot (CHILD of cloud-region, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM tenant (CHILD of cloud-region, tenant BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv4-address-list (CHILD of cloud-region, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv6-address-list (CHILD of cloud-region, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vlan-tag( vlan-tag BelongsTo cloud-region, MANY2ONE)\n- FROM volume-group (CHILD of cloud-region, volume-group BelongsTo cloud-region, MANY2ONE)\n\n-(1) IF this CLOUD-REGION node is deleted, this FROM node is DELETED also\n-CLOUD-REGION cannot be deleted if related to DVS-SWITCH,FLAVOR,GROUP-ASSIGNMENT,HPA-CAPABILITY,IMAGE,OAM-NETWORK,SNAPSHOT,TENANT,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST,VOLUME-GROUP\n", 
      "properties": {
        "cloud-extra-info": {
          "description": "ESR inputs extra information about the VIM or Cloud which will be decoded by MultiVIM.", 
          "type": "string"
        }, 
        "cloud-owner": {
          "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
          "type": "string"
        }, 
        "cloud-region-id": {
          "description": "Identifier used by the vendor for the region. Second part of composite key", 
          "type": "string"
        }, 
        "cloud-region-version": {
          "description": "Software version employed at the site.  NOTE - THIS FIELD IS NOT KEPT UP TO DATE.", 
          "type": "string"
        }, 
        "cloud-type": {
          "description": "Type of the cloud (e.g., openstack)", 
          "type": "string"
        }, 
        "cloud-zone": {
          "description": "Zone where the cloud is homed.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "complex-name": {
          "description": "complex name for cloud-region instance.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "owner-defined-type": {
          "description": "Cloud-owner defined type indicator (e.g., dcp, lcp)", 
          "type": "string"
        }, 
        "sriov-automation": {
          "description": "Whether the cloud region supports (true) or does not support (false) SR-IOV automation.", 
          "type": "string"
        }, 
        "upgrade-cycle": {
          "description": "Upgrade cycle for the cloud region. For AIC regions upgrade cycle is designated by A,B,C etc.", 
          "type": "string"
        }
      }, 
      "required": [
        "cloud-owner", 
        "cloud-region-id"
      ]
    }, 
    "cloud-regions": {
      "properties": {
        "cloud-region": {
          "items": {
            "$ref": "#/patchDefinitions/cloud-region"
          }, 
          "type": "array"
        }
      }
    }, 
    "collection": {
      "description": "represents the collection resource in the TOSCA model\n###### Related Nodes\n- FROM instance-group( instance-group BelongsTo collection, ONE2ONE)\n- FROM service-instance( service-instance ComposedOf collection, ONE2ONE)\n", 
      "properties": {
        "collection-customization-id": {
          "description": "Captures the id of all the configuration used to customize the resource for the service", 
          "type": "string"
        }, 
        "collection-function": {
          "description": "Collection function", 
          "type": "string"
        }, 
        "collection-id": {
          "description": "Collection Object UUID", 
          "type": "string"
        }, 
        "collection-name": {
          "description": "collection name", 
          "type": "string"
        }, 
        "collection-role": {
          "description": "Collection Role", 
          "type": "string"
        }, 
        "collection-type": {
          "description": "Collection type", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "Model Version", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "orchestration status", 
          "type": "string"
        }
      }, 
      "required": [
        "collection-id"
      ]
    }, 
    "collections": {
      "properties": {
        "collection": {
          "items": {
            "$ref": "#/patchDefinitions/collection"
          }, 
          "type": "array"
        }
      }
    }, 
    "common": {
      "description": "Namespace for common inventory resources.\n", 
      "properties": {
        "contacts": {
          "items": {
            "$ref": "#/patchDefinitions/contact"
          }, 
          "type": "array"
        }
      }
    }, 
    "complex": {
      "description": "Collection of physical locations that can house cloud-regions.\n###### Related Nodes\n- TO l3-network( complex Uses l3-network, MANY2MANY)\n- FROM availability-zone( availability-zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn complex, MANY2ONE)\n- FROM ctag-pool (CHILD of complex, ctag-pool BelongsTo complex, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf LocatedIn complex, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo complex, MANY2MANY)\n- FROM pnf( pnf LocatedIn complex, MANY2ONE)\n- FROM pserver( pserver LocatedIn complex, MANY2ONE)\n- FROM site-resource( site-resource Uses complex, MANY2MANY)\nFor CCVPN Usecase\n- FROM vce( vce LocatedIn complex, MANY2MANY)\n- FROM volume-group( volume-group LocatedIn complex, MANY2ONE)\n- FROM vpls-pe( vpls-pe LocatedIn complex, MANY2ONE)\n- FROM zone( zone LocatedIn complex, MANY2ONE)\n\n-(1) IF this COMPLEX node is deleted, this FROM node is DELETED also\n-COMPLEX cannot be deleted if related to AVAILABILITY-ZONE,CLOUD-REGION,GENERIC-VNF,OAM-NETWORK,PNF,PSERVER,VCE,VOLUME-GROUP,VPLS-PE,ZONE\n", 
      "properties": {
        "complex-name": {
          "description": "Gamma complex name for LCP instance.", 
          "type": "string"
        }, 
        "data-center-code": {
          "description": "Data center code which can be an alternate way to identify a complex", 
          "type": "string"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "physical-location-id": {
          "description": "Unique identifier for physical location, e.g., CLLI", 
          "type": "string"
        }
      }, 
      "required": [
        "physical-location-id", 
        "physical-location-type", 
        "street1", 
        "city", 
        "postal-code", 
        "country", 
        "region"
      ]
    }, 
    "complexes": {
      "description": "Collection of physical locations that can house cloud-regions.\n", 
      "properties": {
        "complex": {
          "items": {
            "$ref": "#/patchDefinitions/complex"
          }, 
          "type": "array"
        }
      }
    }, 
    "configuration": {
      "description": "Generic configuration object.\n###### Related Nodes\n- TO allotted-resource( configuration Uses allotted-resource, ONE2ONE)(2)\n- TO configuration( configuration BindsTo configuration, ONE2ONE)\n- TO l-interface( configuration AppliesTo l-interface, ONE2MANY)\n- TO l3-network( configuration PartOf l3-network, MANY2MANY)\n- TO logical-link( configuration Uses logical-link, ONE2MANY)(2)\n- TO pnf( configuration AppliesTo pnf, MANY2MANY)\n- TO vnfc( configuration Uses vnfc, ONE2ONE)(4)\n- TO vpn-binding( configuration Uses vpn-binding, MANY2ONE)\n- TO vrf( configuration Uses vrf, ONE2MANY)\nA Configuration uses VRFs\n- FROM configuration( configuration BindsTo configuration, ONE2ONE)\n- FROM evc (CHILD of configuration, evc BelongsTo configuration, ONE2ONE)(1)\n- FROM forwarder( forwarder Uses configuration, ONE2ONE)(3)\n- FROM forwarder-evc (CHILD of configuration, forwarder-evc BelongsTo configuration, ONE2ONE)(1)\n- FROM forwarding-path( forwarding-path Uses configuration, ONE2ONE)(3)\n- FROM generic-vnf( generic-vnf Uses configuration, ONE2MANY)(3)\n- FROM metadatum (CHILD of configuration, metadatum BelongsTo configuration, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses configuration, ONE2MANY)\n- FROM service-instance( service-instance ComposedOf configuration, MANY2MANY)\n\n-(1) IF this CONFIGURATION node is deleted, this FROM node is DELETED also\n-(2) IF this CONFIGURATION node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this CONFIGURATION is DELETED also\n-(4) IF this TO node is deleted, this CONFIGURATION is DELETED also\n", 
      "properties": {
        "config-policy-name": {
          "description": "Used to capture the name of the fabric configuration policy that was used to generate the payload sent to PINC for fabric configuration.", 
          "type": "string"
        }, 
        "configuration-id": {
          "description": "UUID assigned to configuration.", 
          "type": "string"
        }, 
        "configuration-name": {
          "description": "Name of the configuration.", 
          "type": "string"
        }, 
        "configuration-selflink": {
          "description": "URL to endpoint where AAI can get more details from SDN-GC.", 
          "type": "string"
        }, 
        "configuration-sub-type": {
          "description": "vprobe, pprobe.", 
          "type": "string"
        }, 
        "configuration-type": {
          "description": "port-mirroring-configuration.", 
          "type": "string"
        }, 
        "management-option": {
          "description": "Indicates the entity that will manage this feature. Could be an organization or the name of the application as well.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "id of  the configuration used to customize the resource", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of the configuration.", 
          "type": "string"
        }, 
        "tunnel-bandwidth": {
          "description": "DHV Site Effective Bandwidth", 
          "type": "string"
        }, 
        "vendor-allowed-max-bandwidth": {
          "description": "Velocloud Nominal Throughput - VNT", 
          "type": "string"
        }
      }, 
      "required": [
        "configuration-id", 
        "configuration-type"
      ]
    }, 
    "configurations": {
      "description": "Collection of configurations\n", 
      "properties": {
        "configuration": {
          "items": {
            "$ref": "#/patchDefinitions/configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "connectivities": {
      "description": "Collection of connectivities\n", 
      "properties": {
        "connectivity": {
          "items": {
            "$ref": "#/patchDefinitions/connectivity"
          }, 
          "type": "array"
        }
      }
    }, 
    "connectivity": {
      "description": "Instance of a connectivity\n###### Related Nodes\n- TO ext-aai-network( connectivity BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( connectivity PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( connectivity PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this connectivity.", 
          "type": "string"
        }, 
        "access-ltp-id": {
          "description": "Store the id of the access ltp of this connectivity.", 
          "type": "string"
        }, 
        "access-node-id": {
          "description": "Store the id of the access node of this connectivity.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this connectivity.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this connectivity.", 
          "type": "string"
        }, 
        "bandwidth-profile-name": {
          "description": "Store the name of a bandwidth profile.", 
          "type": "string"
        }, 
        "cbs": {
          "description": "Store the CBS of this connectivity.", 
          "type": "string"
        }, 
        "cir": {
          "description": "Store the CIR of this connectivity.", 
          "type": "string"
        }, 
        "color-aware": {
          "description": "Store the color-awareness of this connectivity.", 
          "type": "string"
        }, 
        "connectivity-id": {
          "description": "Uniquely identifies this connectivity by id", 
          "type": "string"
        }, 
        "connectivity-selflink": {
          "description": "Store the link to get more information for this connectivity.", 
          "type": "string"
        }, 
        "coupling-flag": {
          "description": "Store the coupling flag of this connectivity.", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "Store the cvlan for this connectivity.", 
          "type": "string"
        }, 
        "ebs": {
          "description": "Store the EBS of this connectivity.", 
          "type": "string"
        }, 
        "eir": {
          "description": "Store the EIR of this connectivity.", 
          "type": "string"
        }, 
        "etht-svc-name": {
          "description": "The ethernet service name for this connectivity.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Store the type of a bandwidth profile.", 
          "type": "string"
        }
      }, 
      "required": [
        "connectivity-id"
      ]
    }, 
    "connector": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n###### Related Nodes\n- TO virtual-data-center( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM metadatum (CHILD of connector, metadatum BelongsTo connector, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses connector, MANY2MANY)\n\n-(1) IF this CONNECTOR node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "resource-instance-id": {
          "description": "Unique id of resource instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "resource-instance-id"
      ]
    }, 
    "connectors": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n", 
      "properties": {
        "connector": {
          "items": {
            "$ref": "#/patchDefinitions/connector"
          }, 
          "type": "array"
        }
      }
    }, 
    "constrained-element-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-constraint (PARENT of constrained-element-set, constrained-element-set BelongsTo model-constraint, MANY2ONE)(4)\n- TO model-element (PARENT of constrained-element-set, constrained-element-set BelongsTo model-element, MANY2ONE)(4)\n- FROM element-choice-set (CHILD of constrained-element-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(1)\n\n-(1) IF this CONSTRAINED-ELEMENT-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this CONSTRAINED-ELEMENT-SET is DELETED also\n", 
      "properties": {
        "check-type": {
          "type": "string"
        }, 
        "constrained-element-set-uuid": {
          "type": "string"
        }, 
        "constraint-type": {
          "type": "string"
        }
      }, 
      "required": [
        "constrained-element-set-uuid", 
        "constraint-type", 
        "check-type"
      ]
    }, 
    "constrained-element-sets": {
      "properties": {
        "constrained-element-set": {
          "items": {
            "$ref": "#/patchDefinitions/constrained-element-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "contact": {
      "description": "Contacts store the vendor information and have a relationship to the generic-vnf.  In 1902, this will be populated by SDN-GC\n###### Related Nodes\n- TO generic-vnf( contact supports generic-vnf, MANY2MANY)\n", 
      "properties": {
        "contact-email": {
          "description": "e-mail of contact", 
          "type": "string"
        }, 
        "contact-name": {
          "description": "Name of the contact", 
          "type": "string"
        }, 
        "contact-telephone": {
          "description": "Tel no. of contact", 
          "type": "string"
        }, 
        "vendor-type": {
          "description": "NI (Network Integrator)SI (System Integrator) 3rd Party LCM", 
          "type": "string"
        }
      }, 
      "required": [
        "contact-name"
      ]
    }, 
    "contacts": {
      "description": "Collection of contacts\n", 
      "properties": {
        "contact": {
          "items": {
            "$ref": "#/patchDefinitions/contact"
          }, 
          "type": "array"
        }
      }
    }, 
    "cp": {
      "description": "point of attachment from services or resources to a virtual link or network.\n###### Related Nodes\n- FROM l-interface( l-interface LinksTo cp, ONE2ONE)\n- FROM l3-interface-ipv4-address-list (CHILD of cp, l3-interface-ipv4-address-list BelongsTo cp, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of cp, l3-interface-ipv6-address-list BelongsTo cp, MANY2ONE)(1)\n- FROM l3-network( l3-network LinksTo cp, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list Uses cp, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list Uses cp, MANY2MANY)\n- FROM vlan-tag( vlan-tag Uses cp, MANY2MANY)\n- FROM vnfc (PARENT of cp, vnfc BelongsTo cp, ONE2MANY)\ncp is child of vnfc(3)\n\n-(1) IF this CP node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this CP is DELETED also\n", 
      "properties": {
        "cp-instance-id": {
          "description": "Unique ID of the connection point.", 
          "type": "string"
        }, 
        "port-id": {
          "description": "port index to represent multiple CPs on VNFC connected to same network.", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "cp-instance-id"
      ]
    }, 
    "cps": {
      "description": "Collection of connection points.\n", 
      "properties": {
        "cp": {
          "items": {
            "$ref": "#/patchDefinitions/cp"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-assignment": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of ctag-assignment, ctag-assignment BelongsTo l3-network, MANY2ONE)(4)\n- FROM service-instance( service-instance Uses ctag-assignment, ONE2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "vlan-id-inner": {
          "description": "id.", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vlan-id-inner"
      ]
    }, 
    "ctag-assignments": {
      "properties": {
        "ctag-assignment": {
          "items": {
            "$ref": "#/patchDefinitions/ctag-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-pool": {
      "description": "A collection of C tags (vlan tags) grouped for a specific purpose.\n###### Related Nodes\n- TO availability-zone( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- TO complex (PARENT of ctag-pool, ctag-pool BelongsTo complex, MANY2ONE)(4)\n- FROM generic-vnf( generic-vnf Uses ctag-pool, MANY2MANY)\n- FROM vpls-pe( vpls-pe Uses ctag-pool, MANY2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-POOL is DELETED also\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone", 
          "type": "string"
        }, 
        "ctag-pool-purpose": {
          "description": "Describes what the intended purpose of this pool is.", 
          "type": "string"
        }, 
        "ctag-values": {
          "description": "Comma separated list of ctags", 
          "type": "string"
        }, 
        "target-pe": {
          "description": "The Target provider edge router", 
          "type": "string"
        }
      }, 
      "required": [
        "target-pe", 
        "availability-zone-name", 
        "ctag-pool-purpose"
      ]
    }, 
    "ctag-pools": {
      "properties": {
        "ctag-pool": {
          "items": {
            "$ref": "#/patchDefinitions/ctag-pool"
          }, 
          "type": "array"
        }
      }
    }, 
    "customer": {
      "description": "customer identifiers to provide linkage back to BSS information.\n###### Related Nodes\n- FROM service-subscription (CHILD of customer, service-subscription BelongsTo customer, MANY2ONE)(1)\n- FROM vpn-binding( vpn-binding Uses customer, MANY2MANY)\n\n-(1) IF this CUSTOMER node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "global-customer-id": {
          "description": "Global customer id used across ECOMP to uniquely identify customer.", 
          "type": "string"
        }, 
        "subscriber-name": {
          "description": "Subscriber name, an alternate way to retrieve a customer.", 
          "type": "string"
        }, 
        "subscriber-type": {
          "description": "Subscriber type, a way to provide VID with only the INFRA customers.", 
          "type": "string"
        }
      }, 
      "required": [
        "global-customer-id", 
        "subscriber-name", 
        "subscriber-type"
      ]
    }, 
    "customers": {
      "description": "Collection of customer identifiers to provide linkage back to BSS information.\n", 
      "properties": {
        "customer": {
          "items": {
            "$ref": "#/patchDefinitions/customer"
          }, 
          "type": "array"
        }
      }
    }, 
    "cvlan-tag-entry": {
      "properties": {
        "cvlan-tag": {
          "description": "See mis-na-virtualization-platform.yang", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "cvlan-tag"
      ]
    }, 
    "cvlan-tags": {
      "properties": {
        "cvlan-tag-entry": {
          "items": {
            "$ref": "#/patchDefinitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }
      }
    }, 
    "device": {
      "description": "Instance of a device\n###### Related Nodes\n- TO ext-aai-network( device BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO generic-vnf( device Uses generic-vnf, ONE2MANY)\nFor CCVPN Usecase\n- TO service-instance( device PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "class": {
          "description": "Store the class of this device.", 
          "type": "string"
        }, 
        "description": {
          "description": "Store the description of this device.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Uniquely identifies this device by id", 
          "type": "string"
        }, 
        "device-name": {
          "description": "Store the name of this device.", 
          "type": "string"
        }, 
        "esn": {
          "description": "Store the esn of this device.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "system-ip": {
          "description": "Store the system-ip of this device.", 
          "type": "string"
        }, 
        "system-ipv4": {
          "description": "Store the system-ipv4 of this device.", 
          "type": "string"
        }, 
        "system-ipv6": {
          "description": "Store the system-ipv6 of this device.", 
          "type": "string"
        }, 
        "type": {
          "description": "Store the type of this device.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "Store the vendor of this device.", 
          "type": "string"
        }, 
        "version": {
          "description": "Store the version of this device.", 
          "type": "string"
        }
      }, 
      "required": [
        "device-id"
      ]
    }, 
    "devices": {
      "description": "Collection of devices\n", 
      "properties": {
        "device": {
          "items": {
            "$ref": "#/patchDefinitions/device"
          }, 
          "type": "array"
        }
      }
    }, 
    "dhcp-service": {
      "description": "Instance of a dhcp-service\n###### Related Nodes\n- FROM lan-port-config (PARENT of dhcp-service, lan-port-config Uses dhcp-service, ONE2MANY)\nFor CCVPN Usecase(3)\n\n-(3) IF this FROM node is deleted, this DHCP-SERVICE is DELETED also\n", 
      "properties": {
        "dhcp-service-id": {
          "description": "Uniquely identifies this dhcp-service by id", 
          "type": "string"
        }, 
        "dhcp-service-type": {
          "description": "Store the dhcp-service-type of this dhcp-service.", 
          "type": "string"
        }, 
        "dns": {
          "description": "Store the dns of this dhcp-service.", 
          "type": "string"
        }, 
        "domain-name": {
          "description": "Store the domain-name of this dhcp-service.", 
          "type": "string"
        }, 
        "lease-time": {
          "description": "Store the lease-time of this dhcp-service.", 
          "type": "string"
        }, 
        "nbns": {
          "description": "Store the nbns of this dhcp-service.", 
          "type": "string"
        }, 
        "ntp-primary": {
          "description": "Store the ntp-primary of this dhcp-service.", 
          "type": "string"
        }, 
        "ntp-secondary": {
          "description": "Store the ntp-secondary of this dhcp-service.", 
          "type": "string"
        }, 
        "server-ipv4-address": {
          "description": "Store the server-ip4-address of this dhcp-service.", 
          "type": "string"
        }, 
        "server-ipv6-address": {
          "description": "Store the server-ipv6-address of this dhcp-service.", 
          "type": "string"
        }, 
        "service-enable": {
          "description": "Store the service-enable of this dhcp-service.", 
          "type": "string"
        }
      }, 
      "required": [
        "dhcp-service-id"
      ]
    }, 
    "dhcp-services": {
      "description": "Collection of dhcp-services\n", 
      "properties": {
        "dhcp-service": {
          "items": {
            "$ref": "#/patchDefinitions/dhcp-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "dvs-switch": {
      "description": "Digital virtual switch metadata, used by SDN-C to configure VCEs.  A&AI needs to receive this data from the PO deployment team and administer it using the provisioningTool.sh into A&AI. \n###### Related Nodes\n- TO availability-zone( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- TO cloud-region (PARENT of dvs-switch, dvs-switch BelongsTo cloud-region, MANY2ONE)\n", 
      "properties": {
        "switch-name": {
          "description": "DVS switch name", 
          "type": "string"
        }, 
        "vcenter-url": {
          "description": "URL used to reach the vcenter", 
          "type": "string"
        }
      }, 
      "required": [
        "switch-name", 
        "vcenter-url"
      ]
    }, 
    "dvs-switches": {
      "description": "Collection of digital virtual switch metadata used for vmWare VCEs and GenericVnfs.\n", 
      "properties": {
        "dvs-switch": {
          "items": {
            "$ref": "#/patchDefinitions/dvs-switch"
          }, 
          "type": "array"
        }
      }
    }, 
    "edge-prop-names": {
      "description": "Internal map to define the properties of an edge and interpret the map EdgeRules\n", 
      "properties": {
        "SVC-INFRA": {
          "type": "string"
        }, 
        "aai-uuid": {
          "type": "string"
        }, 
        "contains-other-v": {
          "type": "string"
        }, 
        "delete-other-v": {
          "type": "string"
        }, 
        "direction": {
          "type": "string"
        }, 
        "edgeLabel": {
          "type": "string"
        }, 
        "multiplicityRule": {
          "type": "string"
        }, 
        "prevent-delete": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-request": {
      "properties": {
        "edge-tag": {
          "type": "string"
        }, 
        "include-node-filter": {
          "items": {
            "$ref": "#/patchDefinitions/include-node-filter"
          }, 
          "type": "array"
        }, 
        "result-detail": {
          "type": "string"
        }, 
        "secondary-filter": {
          "items": {
            "$ref": "#/patchDefinitions/secondary-filter"
          }, 
          "type": "array"
        }, 
        "start-node-filter": {
          "items": {
            "$ref": "#/patchDefinitions/start-node-filter"
          }, 
          "type": "array"
        }, 
        "start-node-type": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-result": {
      "properties": {
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/patchDefinitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }
      }
    }, 
    "element-choice-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO constrained-element-set (PARENT of element-choice-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(4)\n- FROM model-element (CHILD of element-choice-set, model-element BelongsTo element-choice-set, MANY2ONE)(1)\n\n-(1) IF this ELEMENT-CHOICE-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ELEMENT-CHOICE-SET is DELETED also\n", 
      "properties": {
        "cardinality": {
          "type": "string"
        }, 
        "element-choice-set-name": {
          "type": "string"
        }, 
        "element-choice-set-uuid": {
          "type": "string"
        }
      }, 
      "required": [
        "element-choice-set-uuid", 
        "element-choice-set-name"
      ]
    }, 
    "element-choice-sets": {
      "properties": {
        "element-choice-set": {
          "items": {
            "$ref": "#/patchDefinitions/element-choice-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "entitlement": {
      "description": "Metadata for entitlement group.\n###### Related Nodes\n- TO generic-vnf (PARENT of entitlement, entitlement BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of entitlement, entitlement BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ENTITLEMENT is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
          "type": "string"
        }, 
        "resource-uuid": {
          "description": "Unique ID of an entitlement resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "entitlements": {
      "description": "Entitlements, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "entitlement": {
          "items": {
            "$ref": "#/patchDefinitions/entitlement"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-ems": {
      "description": "Persist EMS address information used by EMS driver.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-ems, esr-system-info BelongsTo esr-ems, MANY2ONE)(1)\n\n-(1) IF this ESR-EMS node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "ems-id": {
          "description": "Unique ID of EMS.", 
          "type": "string"
        }
      }, 
      "required": [
        "ems-id"
      ]
    }, 
    "esr-ems-list": {
      "properties": {
        "esr-ems": {
          "items": {
            "$ref": "#/patchDefinitions/esr-ems"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-system-info": {
      "description": "Persist common address information of external systems.\n###### Related Nodes\n- TO cloud-region (PARENT of esr-system-info, esr-system-info BelongsTo cloud-region, MANY2ONE)(4)\n- TO esr-ems (PARENT of esr-system-info, esr-system-info BelongsTo esr-ems, MANY2ONE)(4)\n- TO esr-thirdparty-sdnc (PARENT of esr-system-info, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(4)\n- TO esr-vnfm (PARENT of esr-system-info, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(4)\n- FROM ext-aai-network (PARENT of esr-system-info, ext-aai-network Uses esr-system-info, ONE2MANY)\nFor CCVPN Usecase(3)\n\n-(3) IF this FROM node is deleted, this ESR-SYSTEM-INFO is DELETED also\n-(4) IF this TO node is deleted, this ESR-SYSTEM-INFO is DELETED also\n", 
      "properties": {
        "cloud-domain": {
          "description": "domain info for authentication.", 
          "type": "string"
        }, 
        "default-tenant": {
          "description": "default tenant of VIM.", 
          "type": "string"
        }, 
        "esr-system-info-id": {
          "description": "Unique ID of esr system info.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "service IP of ftp server.", 
          "type": "string"
        }, 
        "openstack-region-id": {
          "description": "OpenStack region ID used by MultiCloud plugin to interact with an OpenStack instance.", 
          "type": "string"
        }, 
        "passive": {
          "description": "ftp passive mode or not.", 
          "type": "boolean"
        }, 
        "password": {
          "description": "password used to access external systems.", 
          "type": "string"
        }, 
        "port": {
          "description": "service port of ftp server.", 
          "type": "string"
        }, 
        "protocol": {
          "description": "protocol of third party SDNC, for example netconf/snmp.", 
          "type": "string"
        }, 
        "remote-path": {
          "description": "resource or performance data file path.", 
          "type": "string"
        }, 
        "service-url": {
          "description": "url used to access external systems.", 
          "type": "string"
        }, 
        "ssl-cacert": {
          "description": "ca file content if enabled ssl on auth-url.", 
          "type": "string"
        }, 
        "ssl-insecure": {
          "description": "Whether to verify VIM's certificate.", 
          "type": "boolean"
        }, 
        "system-name": {
          "description": "name of external system.", 
          "type": "string"
        }, 
        "system-status": {
          "description": "the status of external system.", 
          "type": "string"
        }, 
        "system-type": {
          "description": "it could be vim/vnfm/thirdparty-sdnc/ems-resource/ems-performance/ems-alarm.", 
          "type": "string"
        }, 
        "type": {
          "description": "type of external systems.", 
          "type": "string"
        }, 
        "user-name": {
          "description": "username used to access external systems.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "vendor of external systems.", 
          "type": "string"
        }, 
        "version": {
          "description": "version of external systems.", 
          "type": "string"
        }
      }, 
      "required": [
        "esr-system-info-id", 
        "user-name", 
        "password", 
        "system-type"
      ]
    }, 
    "esr-system-info-list": {
      "description": "Collection of persistent block-level external system auth info.\n", 
      "properties": {
        "esr-system-info": {
          "items": {
            "$ref": "#/patchDefinitions/esr-system-info"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-thirdparty-sdnc": {
      "description": "Persist SDNC address information used by ONAP SDNC.\n###### Related Nodes\n- TO pnf( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM esr-system-info (CHILD of esr-thirdparty-sdnc, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(1)\n\n-(1) IF this ESR-THIRDPARTY-SDNC node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "location": {
          "description": "used for DC type to indicate the location of SDNC, such as Core or Edge.", 
          "type": "string"
        }, 
        "product-name": {
          "description": "password used to access SDNC server.", 
          "type": "string"
        }, 
        "thirdparty-sdnc-id": {
          "description": "Unique ID of SDNC.", 
          "type": "string"
        }
      }, 
      "required": [
        "thirdparty-sdnc-id"
      ]
    }, 
    "esr-thirdparty-sdnc-list": {
      "properties": {
        "esr-thirdparty-sdnc": {
          "items": {
            "$ref": "#/patchDefinitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-vnfm": {
      "description": "Persist VNFM address information used by VF-C.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-vnfm, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(1)\n- FROM generic-vnf( generic-vnf DependsOn esr-vnfm, MANY2ONE)\n\n-(1) IF this ESR-VNFM node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "certificate-url": {
          "description": "certificate url of VNFM.", 
          "type": "string"
        }, 
        "vim-id": {
          "description": "indecate the VIM to deploy VNF.", 
          "type": "string"
        }, 
        "vnfm-id": {
          "description": "Unique ID of VNFM.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfm-id"
      ]
    }, 
    "esr-vnfm-list": {
      "properties": {
        "esr-vnfm": {
          "items": {
            "$ref": "#/patchDefinitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "evc": {
      "description": "evc object is an optional child object of the Configuration object.\n###### Related Nodes\n- TO configuration (PARENT of evc, evc BelongsTo configuration, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this EVC is DELETED also\n", 
      "properties": {
        "cir-units": {
          "description": "CIR units", 
          "type": "string"
        }, 
        "cir-value": {
          "description": "Commited Information Rate", 
          "type": "string"
        }, 
        "collector-pop-clli": {
          "description": "Collector POP CLLI (from the hostname of the access pnf)", 
          "type": "string"
        }, 
        "connection-diversity-group-id": {
          "description": "Diversity Group ID", 
          "type": "string"
        }, 
        "esp-evc-cir-units": {
          "description": "CIR units (For ESP)", 
          "type": "string"
        }, 
        "esp-evc-cir-value": {
          "description": "Committed Information Rate (For ESP)", 
          "type": "string"
        }, 
        "esp-evc-circuit-id": {
          "description": "EVC Circuit ID of ESP EVC", 
          "type": "string"
        }, 
        "esp-itu-code": {
          "description": "Identifies ESP", 
          "type": "string"
        }, 
        "evc-id": {
          "description": "Unique/key field for the evc object", 
          "type": "string"
        }, 
        "forwarding-path-topology": {
          "description": "Point-to-Point, Multi-Point", 
          "type": "string"
        }, 
        "inter-connect-type-ingress": {
          "description": "Interconnect type on ingress side of EVC.", 
          "type": "string"
        }, 
        "service-hours": {
          "description": "formerly Performance Group", 
          "type": "string"
        }, 
        "tagmode-access-egress": {
          "description": "tagMode for network side of EVC", 
          "type": "string"
        }, 
        "tagmode-access-ingress": {
          "description": "tagode for collector side of EVC", 
          "type": "string"
        }
      }, 
      "required": [
        "evc-id"
      ]
    }, 
    "evcs": {
      "properties": {
        "evc": {
          "items": {
            "$ref": "#/patchDefinitions/evc"
          }, 
          "type": "array"
        }
      }
    }, 
    "ext-aai-network": {
      "description": "Refer to an external AAI in another ONAP.\n###### Related Nodes\n- TO esr-system-info (PARENT of ext-aai-network, ext-aai-network Uses esr-system-info, ONE2MANY)\nFor CCVPN Usecase(2)\n- FROM connectivity( connectivity BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM device( device BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM lan-port-config( lan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM logical-link( logical-link BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM network-resource( network-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM pnf( pnf BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM sdwan-vpn( sdwan-vpn BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM site-resource( site-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM vpn-binding( vpn-binding BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- FROM wan-port-config( wan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n\n-(2) IF this EXT-AAI-NETWORK node is deleted, this TO node is DELETED also\n-EXT-AAI-NETWORK cannot be deleted if related to CONNECTIVITY,DEVICE,LAN-PORT-CONFIG,LOGICAL-LINK,NETWORK-RESOURCE,PNF,SDWAN-VPN,SITE-RESOURCE,VPN-BINDING,WAN-PORT-CONFIG\n", 
      "properties": {
        "aai-id": {
          "description": "Unique ID of the referenced AAI.", 
          "type": "string"
        }, 
        "schema-version": {
          "description": "Schema version of the referenced AAI.", 
          "type": "string"
        }
      }, 
      "required": [
        "aai-id"
      ]
    }, 
    "ext-aai-networks": {
      "properties": {
        "ext-aai-network": {
          "items": {
            "$ref": "#/patchDefinitions/ext-aai-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "external-system": {
      "description": "Namespace for external system.\n", 
      "properties": {
        "esr-ems-list": {
          "items": {
            "$ref": "#/patchDefinitions/esr-ems"
          }, 
          "type": "array"
        }, 
        "esr-thirdparty-sdnc-list": {
          "items": {
            "$ref": "#/patchDefinitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }, 
        "esr-vnfm-list": {
          "items": {
            "$ref": "#/patchDefinitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-properties": {
      "description": "Extra properties for inventory item for response list\n", 
      "properties": {
        "extra-property": {
          "items": {
            "$ref": "#/patchDefinitions/extra-property"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-property": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "flavor": {
      "description": "Openstack flavor.\n###### Related Nodes\n- TO cloud-region (PARENT of flavor, flavor BelongsTo cloud-region, MANY2ONE)\n- TO pserver( flavor CanBeInstantiatedIn pserver, MANY2MANY)\nHPA Capacity getting the compute nodes from given flavor\n- FROM hpa-capability (CHILD of flavor, hpa-capability BelongsTo flavor, MANY2ONE)\n- FROM vserver( vserver Uses flavor, MANY2ONE)\n\n-FLAVOR cannot be deleted if related to HPA-CAPABILITY,VSERVER\n", 
      "properties": {
        "flavor-disabled": {
          "description": "Boolean as to whether this flavor is no longer enabled", 
          "type": "boolean"
        }, 
        "flavor-disk": {
          "description": "Disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-ephemeral": {
          "description": "Amount of ephemeral disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-id": {
          "description": "Flavor id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "flavor-is-public": {
          "description": "whether flavor is available to all users or private to the tenant it was created in.", 
          "type": "boolean"
        }, 
        "flavor-name": {
          "description": "Cloud Region Flavor name", 
          "type": "string"
        }, 
        "flavor-ram": {
          "description": "Amount of memory", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "flavor-swap": {
          "description": "amount of swap space allocation", 
          "type": "string"
        }, 
        "flavor-vcpus": {
          "description": "Number of CPUs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "hpa-capabilities": {
          "description": "List of flavor specific HPA Capabilities", 
          "items": {
            "$ref": "#/patchDefinitions/hpa-capability"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "flavor-id", 
        "flavor-name", 
        "flavor-selflink"
      ]
    }, 
    "flavors": {
      "description": "Collection of openstack flavors.\n", 
      "properties": {
        "flavor": {
          "items": {
            "$ref": "#/patchDefinitions/flavor"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarder": {
      "description": "Entity describing a sequenced segment of forwarding path\n###### Related Nodes\n- TO configuration( forwarder Uses configuration, ONE2ONE)(2)\n- TO forwarding-path (PARENT of forwarder, forwarder BelongsTo forwarding-path, MANY2ONE)(4)\n- TO generic-vnf( forwarder AppliesTo generic-vnf, MANY2MANY)\nPoints to the generic-vnf(s) involved in this forwarding step.\n- TO l-interface( forwarder ForwardsTo l-interface, MANY2MANY)\n- TO lag-interface( forwarder ForwardsTo lag-interface, MANY2MANY)\n- TO p-interface( forwarder ForwardsTo p-interface, MANY2MANY)\n\n-(2) IF this FORWARDER node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDER is DELETED also\n", 
      "properties": {
        "forwarder-role": {
          "description": "ingress, intermediate, egress", 
          "type": "string"
        }, 
        "sequence": {
          "description": "Unique ID of this segmentation", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "sequence"
      ]
    }, 
    "forwarder-evc": {
      "description": "forwarder object is an optional child object of the Configuration object.\n###### Related Nodes\n- TO configuration (PARENT of forwarder-evc, forwarder-evc BelongsTo configuration, ONE2ONE)(4)\n- FROM vlan-mapping (CHILD of forwarder-evc, vlan-mapping BelongsTo forwarder-evc, MANY2ONE)(1)\n\n-(1) IF this FORWARDER-EVC node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDER-EVC is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit ID from customer/ESP/ingress end of EVC, or reference to beater circuit on gateway/network/egress end of EVC", 
          "type": "string"
        }, 
        "cvlan": {
          "description": "CVLAN value for ingress of egress forwarder.", 
          "type": "string"
        }, 
        "forwarder-evc-id": {
          "description": "Key for forwarder-evc object", 
          "type": "string"
        }, 
        "ivlan": {
          "description": "Internal VLAN.", 
          "type": "string"
        }, 
        "svlan": {
          "description": "SVLAN value for ingress of egress forwarder.", 
          "type": "string"
        }, 
        "vlan-mappings": {
          "items": {
            "$ref": "#/patchDefinitions/vlan-mapping"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "forwarder-evc-id"
      ]
    }, 
    "forwarder-evcs": {
      "properties": {
        "forwarder-evc": {
          "items": {
            "$ref": "#/patchDefinitions/forwarder-evc"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarders": {
      "properties": {
        "forwarder": {
          "items": {
            "$ref": "#/patchDefinitions/forwarder"
          }, 
          "type": "array"
        }
      }
    }, 
    "forwarding-path": {
      "description": "Entity that describes the sequenced forwarding path between interfaces of services or resources\n###### Related Nodes\n- TO configuration( forwarding-path Uses configuration, ONE2ONE)(2)\n- TO service-instance( forwarding-path AppliesTo service-instance, MANY2ONE)(4)\n- FROM forwarder (CHILD of forwarding-path, forwarder BelongsTo forwarding-path, MANY2ONE)(1)\n\n-(1) IF this FORWARDING-PATH node is deleted, this FROM node is DELETED also\n-(2) IF this FORWARDING-PATH node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this FORWARDING-PATH is DELETED also\n", 
      "properties": {
        "forwarding-path-id": {
          "description": "Unique ID of this FP", 
          "type": "string"
        }, 
        "forwarding-path-name": {
          "description": "Name of the FP", 
          "type": "string"
        }
      }, 
      "required": [
        "forwarding-path-id", 
        "forwarding-path-name"
      ]
    }, 
    "forwarding-paths": {
      "properties": {
        "forwarding-path": {
          "items": {
            "$ref": "#/patchDefinitions/forwarding-path"
          }, 
          "type": "array"
        }
      }
    }, 
    "generic-vnf": {
      "description": "General purpose VNF\n###### Related Nodes\n- TO availability-zone( generic-vnf Uses availability-zone, MANY2MANY)\n- TO cloud-region( generic-vnf LocatedIn cloud-region, MANY2ONE)\n- TO complex( generic-vnf LocatedIn complex, MANY2MANY)\n- TO configuration( generic-vnf Uses configuration, ONE2MANY)(2)\n- TO ctag-pool( generic-vnf Uses ctag-pool, MANY2MANY)\n- TO esr-vnfm( generic-vnf DependsOn esr-vnfm, MANY2ONE)\n- TO instance-group( generic-vnf MemberOf instance-group, MANY2MANY)\n- TO instance-group( generic-vnf Uses instance-group, ONE2MANY)\n- TO ipsec-configuration( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- TO l3-network( generic-vnf Uses l3-network, MANY2MANY)\n- TO nos-server( generic-vnf HostedOn nos-server, MANY2ONE)\n- TO pnf( generic-vnf HostedOn pnf, MANY2MANY)\n- TO pserver( generic-vnf HostedOn pserver, MANY2MANY)\n- TO tenant( generic-vnf BelongsTo tenant, MANY2ONE)\n- TO virtual-data-center( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- TO vnf-image( generic-vnf Uses vnf-image, MANY2ONE)\n- TO volume-group( generic-vnf DependsOn volume-group, ONE2MANY)\n- TO vserver( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM allotted-resource( allotted-resource PartOf generic-vnf, MANY2MANY)\n- FROM contact( contact supports generic-vnf, MANY2MANY)\n- FROM device( device Uses generic-vnf, ONE2MANY)\nFor CCVPN Usecase\n- FROM entitlement (CHILD of generic-vnf, entitlement BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM forwarder( forwarder AppliesTo generic-vnf, MANY2MANY)\nPoints to the generic-vnf(s) involved in this forwarding step.\n- FROM instance-group( instance-group BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM l-interface (CHILD of generic-vnf, l-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM lag-interface (CHILD of generic-vnf, lag-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM license (CHILD of generic-vnf, license BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM line-of-business( line-of-business Uses generic-vnf, MANY2MANY)\n- FROM logical-link( logical-link BridgedTo generic-vnf, MANY2MANY)\n- FROM network-profile( network-profile AppliesTo generic-vnf, MANY2MANY)\n- FROM platform( platform Uses generic-vnf, MANY2MANY)\n- FROM service-instance( service-instance ComposedOf generic-vnf, ONE2MANY)\n- FROM site-pair-set( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM vf-module (CHILD of generic-vnf, vf-module BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM vnfc( vnfc BelongsTo generic-vnf, MANY2ONE)(1)\n\n-(1) IF this GENERIC-VNF node is deleted, this FROM node is DELETED also\n-(2) IF this GENERIC-VNF node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "equipment-role": {
          "description": "Client should send valid enumerated value", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by generic-vnf.", 
          "type": "string"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "job-id": {
          "description": "job id corresponding to vnf", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "management-v6-address": {
          "description": "v6 management address", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "nm-lan-v6-address": {
          "description": "v6 Loopback address", 
          "type": "string"
        }, 
        "nnet": {
          "description": "number of network in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nshd": {
          "description": "number of associated SHD in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nvm": {
          "description": "number of vms in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.  Valid values are in-service-path and out-of-service-path.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, used by MSO.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not necessarily map to ASDC service models.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "vcpu": {
          "description": "number of vcpus ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vcpu-units": {
          "description": "units associated with vcpu, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vdisk": {
          "description": "number of vdisks ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vdisk-units": {
          "description": "units associated with vdisk, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vmemory": {
          "description": "number of GB of memory ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory-units": {
          "description": "units associated with vmemory, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vnf-discriptor-name": {
          "description": "vnf discriptor name", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-instance-id": {
          "description": "vnf instance id.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-package-name": {
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-type", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "generic-vnfs": {
      "description": "Collection of VNFs\n", 
      "properties": {
        "generic-vnf": {
          "items": {
            "$ref": "#/patchDefinitions/generic-vnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "group-assignment": {
      "description": "Openstack group-assignment used to store exclusivity groups (EG).\n###### Related Nodes\n- TO cloud-region (PARENT of group-assignment, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver MemberOf group-assignment, MANY2ONE)\n- FROM tenant( tenant MemberOf group-assignment, MANY2MANY)\n", 
      "properties": {
        "group-description": {
          "description": "Group description - description of the group", 
          "type": "string"
        }, 
        "group-id": {
          "description": "Group id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "group-name": {
          "description": "Group name - name assigned to the group", 
          "type": "string"
        }, 
        "group-type": {
          "description": "Group type - the type of group this instance refers to", 
          "type": "string"
        }
      }, 
      "required": [
        "group-id", 
        "group-type", 
        "group-name"
      ]
    }, 
    "group-assignments": {
      "description": "Collection of openstack group assignments\n", 
      "properties": {
        "group-assignment": {
          "items": {
            "$ref": "#/patchDefinitions/group-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "host-route": {
      "description": "###### Related Nodes\n- TO subnet (PARENT of host-route, host-route BelongsTo subnet, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HOST-ROUTE is DELETED also\n", 
      "properties": {
        "host-route-id": {
          "description": "host-route id", 
          "type": "string"
        }, 
        "next-hop": {
          "description": "Could be ip-address, hostname, or service-instance", 
          "type": "string"
        }, 
        "next-hop-type": {
          "description": "Should be ip-address, hostname, or service-instance to match next-hop", 
          "type": "string"
        }, 
        "route-prefix": {
          "description": "subnet prefix", 
          "type": "string"
        }
      }, 
      "required": [
        "host-route-id", 
        "route-prefix", 
        "next-hop"
      ]
    }, 
    "host-routes": {
      "properties": {
        "host-route": {
          "items": {
            "$ref": "#/patchDefinitions/host-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "hpa-capabilities": {
      "description": "Collection of HPA Capabilities\n", 
      "properties": {
        "hpa-capability": {
          "items": {
            "$ref": "#/patchDefinitions/hpa-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "hpa-capability": {
      "description": "Represents a HPA capability\n###### Related Nodes\n- TO cloud-region (PARENT of hpa-capability, hpa-capability BelongsTo cloud-region, MANY2ONE)\n- TO flavor (PARENT of hpa-capability, hpa-capability BelongsTo flavor, MANY2ONE)\n- FROM hpa-feature-attributes (CHILD of hpa-capability, hpa-feature-attributes BelongsTo hpa-capability, MANY2ONE)(1)\n\n-(1) IF this HPA-CAPABILITY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "architecture": {
          "description": "Hardware architecture", 
          "type": "string"
        }, 
        "hpa-capability-id": {
          "description": "UUID to uniquely identify a HPA capability", 
          "type": "string"
        }, 
        "hpa-feature": {
          "description": "Name of the HPACapability", 
          "type": "string"
        }, 
        "hpa-version": {
          "description": "HPA schema version", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-capability-id", 
        "hpa-feature"
      ]
    }, 
    "hpa-capacity": {
      "description": "HPA Capacity information for compute node\n###### Related Nodes\n- TO pserver (PARENT of hpa-capacity, hpa-capacity BelongsTo pserver, MANY2ONE)\nHPA Capacity KV for given compute node(4)\n\n-(4) IF this TO node is deleted, this HPA-CAPACITY is DELETED also\n", 
      "properties": {
        "hpa-capacity-key": {
          "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
          "type": "string"
        }, 
        "hpa-capacity-value": {
          "description": "JSON string specifying the capacity (total,free), unit and metadata of the specific HPA attribute", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-capacity-key"
      ]
    }, 
    "hpa-feature-attributes": {
      "description": "HPA Capability Feature attributes\n###### Related Nodes\n- TO hpa-capability (PARENT of hpa-feature-attributes, hpa-feature-attributes BelongsTo hpa-capability, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HPA-FEATURE-ATTRIBUTES is DELETED also\n", 
      "properties": {
        "hpa-attribute-key": {
          "description": "name of the specific HPA attribute", 
          "type": "string"
        }, 
        "hpa-attribute-value": {
          "description": "JSON string specifying the value, unit and type of the specific HPA attribute", 
          "type": "string"
        }
      }, 
      "required": [
        "hpa-attribute-key"
      ]
    }, 
    "image": {
      "description": "Openstack image.\n###### Related Nodes\n- TO cloud-region (PARENT of image, image BelongsTo cloud-region, MANY2ONE)\n- FROM metadatum (CHILD of image, metadatum BelongsTo image, MANY2ONE)(1)\n- FROM vserver( vserver Uses image, MANY2ONE)\n\n-(1) IF this IMAGE node is deleted, this FROM node is DELETED also\n-IMAGE cannot be deleted if related to VSERVER\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "image-architecture": {
          "description": "Operating system architecture.", 
          "type": "string"
        }, 
        "image-id": {
          "description": "Image id, expected to be unique across cloud region", 
          "type": "string"
        }, 
        "image-name": {
          "description": "Image name", 
          "type": "string"
        }, 
        "image-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "image-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "image-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "image-id", 
        "image-name", 
        "image-os-distro", 
        "image-os-version", 
        "image-selflink"
      ]
    }, 
    "images": {
      "description": "Collectio of Openstack images.\n", 
      "properties": {
        "image": {
          "items": {
            "$ref": "#/patchDefinitions/image"
          }, 
          "type": "array"
        }
      }
    }, 
    "include-node-filter": {
      "properties": {
        "include-node-type": {
          "type": "string"
        }
      }
    }, 
    "instance-filter": {
      "description": "InstanceFilter for performing a named-query or model query\n"
    }, 
    "instance-filters": {
      "description": "InstanceFilters for performing a named-query or model query\n", 
      "properties": {
        "instance-filter": {
          "items": {
            "$ref": "#/patchDefinitions/instance-filter"
          }, 
          "type": "array"
        }
      }
    }, 
    "instance-group": {
      "description": "General mechanism for grouping instances\n###### Related Nodes\n- TO collection( instance-group BelongsTo collection, ONE2ONE)\n- TO generic-vnf( instance-group BelongsTo generic-vnf, MANY2ONE)(4)\n- TO model( instance-group Targets model, MANY2MANY)\n- FROM allotted-resource( allotted-resource MemberOf instance-group, MANY2MANY)\n- FROM cloud-region( cloud-region Uses instance-group, ONE2MANY)\n- FROM generic-vnf( generic-vnf MemberOf instance-group, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses instance-group, ONE2MANY)\n- FROM l-interface( l-interface MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-network( l3-network MemberOf instance-group, MANY2MANY)\n- FROM pnf( pnf MemberOf instance-group, MANY2MANY)\n- FROM service-instance( service-instance Uses instance-group, ONE2MANY)\nMSO creates this edge on VNF Group Service creation\n- FROM service-instance( service-instance MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM vnfc( vnfc MemberOf instance-group, MANY2MANY)\n\n-(4) IF this TO node is deleted, this INSTANCE-GROUP is DELETED also\n", 
      "properties": {
        "description": {
          "description": "Descriptive text to help identify the usage of this instance-group", 
          "type": "string"
        }, 
        "id": {
          "description": "Instance Group ID, UUID assigned to this instance.", 
          "type": "string"
        }, 
        "instance-group-role": {
          "description": "role of the instance group.", 
          "type": "string"
        }, 
        "instance-group-type": {
          "description": "Only valid value today is lower case ha for high availability", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "ASDC model version uid for this resource model.", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "instance-group-type"
      ]
    }, 
    "instance-groups": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "instance-group": {
          "items": {
            "$ref": "#/patchDefinitions/instance-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory": {
      "properties": {
        "business": {
          "$ref": "#/patchDefinitions/business", 
          "type": "object"
        }, 
        "cloud-infrastructure": {
          "$ref": "#/patchDefinitions/cloud-infrastructure", 
          "type": "object"
        }, 
        "common": {
          "$ref": "#/patchDefinitions/common", 
          "type": "object"
        }, 
        "external-system": {
          "$ref": "#/patchDefinitions/external-system", 
          "type": "object"
        }, 
        "network": {
          "$ref": "#/patchDefinitions/network", 
          "type": "object"
        }, 
        "service-design-and-creation": {
          "$ref": "#/patchDefinitions/service-design-and-creation", 
          "type": "object"
        }
      }
    }, 
    "inventory-item": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/patchDefinitions/inventory-item-data"
          }, 
          "type": "array"
        }, 
        "inventory-item-link": {
          "type": "string"
        }, 
        "inventory-item-type": {
          "type": "string"
        }, 
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/patchDefinitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory-item-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-item": {
      "description": "Inventory item for response list\n", 
      "properties": {
        "extra-properties": {
          "$ref": "#/patchDefinitions/extra-properties", 
          "type": "object"
        }, 
        "inventory-response-items": {
          "$ref": "#/patchDefinitions/inventory-response-items", 
          "type": "object"
        }, 
        "model-name": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-items": {
      "description": "Container for inventory items in response list\n", 
      "properties": {
        "inventory-response-item": {
          "items": {
            "$ref": "#/patchDefinitions/inventory-response-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "ipsec-configuration": {
      "description": "IPSec configuration node will contain various configuration data for the NMTE VNF. This node will have an edge to the generic-vnf (vnf type = TE). Starting 1607, this data will be populated by SDN-C\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- FROM vig-server (CHILD of ipsec-configuration, vig-server BelongsTo ipsec-configuration, MANY2ONE)(1)\n\n-(1) IF this IPSEC-CONFIGURATION node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "dpd-frequency": {
          "description": "Maximum number of DPD before claiming the tunnel is down", 
          "type": "string"
        }, 
        "dpd-interval": {
          "description": "The time between DPD probe", 
          "type": "string"
        }, 
        "ike-version": {
          "description": "can be 1 or 2", 
          "type": "string"
        }, 
        "ikev1-am-group-id": {
          "description": "Group name defined in VIG for clients using aggressive mode", 
          "type": "string"
        }, 
        "ikev1-am-password": {
          "description": "pre-shared key for the above group name", 
          "type": "string"
        }, 
        "ikev1-authentication": {
          "description": "Contains values like md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ikev1-dh-group": {
          "description": "Diffie-Hellman group like DH-GROUP2, DH-GROUP5, DH-GROUP14", 
          "type": "string"
        }, 
        "ikev1-encryption": {
          "description": "Encyption values like 3des-cbc, des-cbc, aes-128-cbc,\u00c2\u00a0aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ikev1-sa-lifetime": {
          "description": "Lifetime for IKEv1 SA", 
          "type": "string"
        }, 
        "ipsec-authentication": {
          "description": "md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ipsec-configuration-id": {
          "description": "UUID of this configuration", 
          "type": "string"
        }, 
        "ipsec-encryption": {
          "description": "3des-cbc, des-cbc, aes-128-cbc,\u00c2\u00a0aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ipsec-pfs": {
          "description": "enable PFS or not", 
          "type": "string"
        }, 
        "ipsec-sa-lifetime": {
          "description": "Life time for IPSec SA", 
          "type": "string"
        }, 
        "requested-customer-name": {
          "description": "If the DMZ is a custom DMZ, this field will indicate the customer information", 
          "type": "string"
        }, 
        "requested-dmz-type": {
          "description": "ATT can offer a shared DMZ or a DMZ specific to a customer", 
          "type": "string"
        }, 
        "requested-encryption-strength": {
          "description": "Encryption values like 3des-cbc, des-cbc, aes-128-cbc, aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "requested-vig-address-type": {
          "description": "Indicate the type of VIG server like AVPN, INTERNET, BOTH", 
          "type": "string"
        }, 
        "shared-dmz-network-address": {
          "description": "Network address of shared DMZ", 
          "type": "string"
        }, 
        "xauth-user-password": {
          "description": "Encrypted using the Juniper $9$ algorithm", 
          "type": "string"
        }, 
        "xauth-userid": {
          "description": "user ID for xAuth, sm-user,ucpeHostName,nmteHostName", 
          "type": "string"
        }
      }, 
      "required": [
        "ipsec-configuration-id"
      ]
    }, 
    "ipsec-configurations": {
      "properties": {
        "ipsec-configuration": {
          "items": {
            "$ref": "#/patchDefinitions/ipsec-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "key-data": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "l-interface": {
      "description": "Logical interfaces, e.g., a vnic.\n###### Related Nodes\n- TO cp( l-interface LinksTo cp, ONE2ONE)\n- TO generic-vnf (PARENT of l-interface, l-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( l-interface MemberOf instance-group, MANY2MANY)\n- TO l-interface( l-interface BelongsTo l-interface, MANY2ONE)(4)\n- TO logical-link( l-interface LinksTo logical-link, MANY2MANY)(2)\n- TO newvce (PARENT of l-interface, l-interface BelongsTo newvce, MANY2ONE)(4)\n- TO p-interface (PARENT of l-interface, l-interface BindsTo p-interface, MANY2ONE)(4)\n- TO vserver (PARENT of l-interface, l-interface BindsTo vserver, MANY2ONE)(4)\n- TO lag-interface (PARENT of l-interface, l-interface BelongsTo lag-interface, MANY2ONE)(4)\n- FROM allotted-resource( allotted-resource Uses l-interface, ONE2MANY)\n- FROM configuration( configuration AppliesTo l-interface, ONE2MANY)\n- FROM forwarder( forwarder ForwardsTo l-interface, MANY2MANY)\n- FROM l-interface (PARENT of l-interface, l-interface BelongsTo l-interface, MANY2ONE)(4)\n- FROM logical-link( logical-link Source l-interface, MANY2MANY)(1)\n- FROM logical-link( logical-link Destination l-interface, MANY2MANY)(1)\n- FROM sriov-vf (CHILD of l-interface, sriov-vf BelongsTo l-interface, ONE2ONE)(1)\n- FROM vlan (CHILD of l-interface, vlan LinksTo l-interface, MANY2ONE)(1)\n- FROM vrf( vrf Uses l-interface, ONE2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of l-interface, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of l-interface, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses l-interface, ONE2MANY)\n\n-(1) IF this L-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this L-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this L-INTERFACE is DELETED also\n", 
      "properties": {
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name given to the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "E.g., CUSTOMER, UPLINK, etc.", 
          "type": "string"
        }, 
        "is-port-mirrored": {
          "description": "boolean indicatating whether or not port is a mirrored.", 
          "type": "boolean"
        }, 
        "macaddr": {
          "description": "MAC address for the interface", 
          "type": "string"
        }, 
        "management-option": {
          "description": "Whether A&AI should be managing this interface of not. Could have value like CUSTOMER", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "v6-wan-link-ip": {
          "description": "Questionably placed - v6 ip addr of this interface (is in vr-lan-interface from Mary B.", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "is-port-mirrored", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "l-interfaces": {
      "description": "Collection of logical interfaces.\n", 
      "properties": {
        "l-interface": {
          "items": {
            "$ref": "#/patchDefinitions/l-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "l3-interface-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cp (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo cp, MANY2ONE)(4)\n- TO instance-group( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV4-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv4-address"
      ]
    }, 
    "l3-interface-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cp (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo cp, MANY2ONE)(4)\n- TO instance-group( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV6-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv6-address"
      ]
    }, 
    "l3-network": {
      "description": "Generic network definition\n###### Related Nodes\n- TO cp( l3-network LinksTo cp, MANY2MANY)\n- TO instance-group( l3-network MemberOf instance-group, MANY2MANY)\n- TO l3-network( l3-network Uses l3-network, MANY2MANY)\n- TO network-policy( l3-network Uses network-policy, MANY2MANY)\n- TO route-table-reference( l3-network Uses route-table-reference, MANY2MANY)\n- TO vpn-binding( l3-network Uses vpn-binding, MANY2MANY)\n- FROM aggregate-route (CHILD of l3-network, aggregate-route BelongsTo l3-network, MANY2ONE)(1)\n- FROM allotted-resource( allotted-resource PartOf l3-network, MANY2MANY)\n- FROM cloud-region( cloud-region Uses l3-network, MANY2MANY)\n- FROM complex( complex Uses l3-network, MANY2MANY)\n- FROM configuration( configuration PartOf l3-network, MANY2MANY)\n- FROM ctag-assignment (CHILD of l3-network, ctag-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf Uses l3-network, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-network( l3-network Uses l3-network, MANY2MANY)\n- FROM line-of-business( line-of-business Uses l3-network, MANY2MANY)\n- FROM platform( platform Uses l3-network, MANY2MANY)\n- FROM segmentation-assignment (CHILD of l3-network, segmentation-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf l3-network, ONE2MANY)\n- FROM subnet (CHILD of l3-network, subnet BelongsTo l3-network, MANY2ONE)(1)\n- FROM tenant( tenant Uses l3-network, MANY2MANY)\n- FROM vf-module( vf-module DependsOn l3-network, MANY2MANY)\n- FROM vlan-tag( vlan-tag BelongsTo l3-network, MANY2MANY)\n- FROM vrf( vrf Uses l3-network, ONE2MANY)\nA vrf uses many l3-networks\n\n-(1) IF this L3-NETWORK node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "is-bound-to-vpn": {
          "description": "Set to true if bound to VPN", 
          "type": "boolean"
        }, 
        "network-id": {
          "description": "Network ID, should be uuid. Unique across A&AI.", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network, governed by some naming convention..", 
          "type": "string"
        }, 
        "network-role": {
          "description": "Role the network plans - who defines these values?", 
          "type": "string"
        }, 
        "network-role-instance": {
          "description": "network role instance", 
          "format": "int64", 
          "type": "integer"
        }, 
        "network-technology": {
          "description": "Network technology - who defines these values?", 
          "type": "string"
        }, 
        "network-type": {
          "description": "Type of the network - who defines these values?", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service from ASDC.  Does not strictly map to ASDC services.  SOON TO BE DEPRECATED", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id", 
        "is-bound-to-vpn", 
        "is-provider-network", 
        "is-shared-network", 
        "is-external-network"
      ]
    }, 
    "l3-networks": {
      "properties": {
        "l3-network": {
          "items": {
            "$ref": "#/patchDefinitions/l3-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-interface": {
      "description": "Link aggregate interface\n###### Related Nodes\n- TO generic-vnf (PARENT of lag-interface, lag-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l-interface( lag-interface Uses l-interface, ONE2MANY)\n- TO lag-link( lag-interface LinksTo lag-link, MANY2MANY)(2)\n- TO logical-link( lag-interface Uses logical-link, MANY2MANY)(2)\n- TO p-interface( lag-interface Uses p-interface, MANY2MANY)\n- TO pnf (PARENT of lag-interface, lag-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of lag-interface, lag-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of lag-interface, lag-interface BindsTo vpls-pe, MANY2ONE)(4)\n- FROM forwarder( forwarder ForwardsTo lag-interface, MANY2MANY)\n- FROM l-interface (CHILD of lag-interface, l-interface BelongsTo lag-interface, MANY2ONE)(1)\n\n-(1) IF this LAG-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this LAG-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this LAG-INTERFACE is DELETED also\n", 
      "properties": {
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name that identifies the link aggregate interface", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "lag-interfaces": {
      "description": "Collection of link aggregate interfaces.\n", 
      "properties": {
        "lag-interface": {
          "items": {
            "$ref": "#/patchDefinitions/lag-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-link": {
      "description": "LAG links can connect lag-interfaces\n###### Related Nodes\n- FROM lag-interface( lag-interface LinksTo lag-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses lag-link, MANY2MANY)\n\n-(3) IF this FROM node is deleted, this LAG-LINK is DELETED also\n", 
      "properties": {
        "link-name": {
          "description": "Alphabetical concatenation of lag-interface names", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "lag-links": {
      "description": "Collection of link aggregation connections\n", 
      "properties": {
        "lag-link": {
          "items": {
            "$ref": "#/patchDefinitions/lag-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "lan-port-config": {
      "description": "Instance of a lan-port-config\n###### Related Nodes\n- TO dhcp-service (PARENT of lan-port-config, lan-port-config Uses dhcp-service, ONE2MANY)\nFor CCVPN Usecase(2)\n- TO ext-aai-network( lan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( lan-port-config PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n\n-(2) IF this LAN-PORT-CONFIG node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "description": {
          "description": "Store the description of this lan-port-config.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Store the device-id of this lan-port-config.", 
          "type": "string"
        }, 
        "input-bandwidth": {
          "description": "Store the input-bandwidth of this lan-port-config.", 
          "type": "string"
        }, 
        "ipv4-address": {
          "description": "Store the ipv4-address of this lan-port-config.", 
          "type": "string"
        }, 
        "ipv6-address": {
          "description": "Store the ipv6-address of this lan-port-config.", 
          "type": "string"
        }, 
        "lan-port-config-id": {
          "description": "Uniquely identifies this lan-port-config by id", 
          "type": "string"
        }, 
        "lan-port-config-name": {
          "description": "Store the name of this lan-port-config.", 
          "type": "string"
        }, 
        "output-bandwidth": {
          "description": "Store the output-bandwidth of this lan-port-config.", 
          "type": "string"
        }, 
        "port-id": {
          "description": "Store the port-id of this lan-port-config.", 
          "type": "string"
        }, 
        "vlan-tag": {
          "description": "Store the vlan-tag of this lan-port-config.", 
          "type": "string"
        }
      }, 
      "required": [
        "lan-port-config-id"
      ]
    }, 
    "lan-port-configs": {
      "description": "Collection of lan-port-configs\n", 
      "properties": {
        "lan-port-config": {
          "items": {
            "$ref": "#/patchDefinitions/lan-port-config"
          }, 
          "type": "array"
        }
      }
    }, 
    "license": {
      "description": "Metadata for license group.\n###### Related Nodes\n- TO generic-vnf (PARENT of license, license BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of license, license BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this LICENSE is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
          "type": "string"
        }, 
        "resource-uuid": {
          "description": "Unique ID of a license resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "licenses": {
      "description": "Licenses to be allocated across resources, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "license": {
          "items": {
            "$ref": "#/patchDefinitions/license"
          }, 
          "type": "array"
        }
      }
    }, 
    "line-of-business": {
      "description": "describes a line-of-business\n###### Related Nodes\n- TO generic-vnf( line-of-business Uses generic-vnf, MANY2MANY)\n- TO l3-network( line-of-business Uses l3-network, MANY2MANY)\n", 
      "properties": {
        "line-of-business-name": {
          "description": "Name of the line-of-business (product)", 
          "type": "string"
        }
      }, 
      "required": [
        "line-of-business-name"
      ]
    }, 
    "lines-of-business": {
      "description": "Collection of lines-of-business\n", 
      "properties": {
        "line-of-business": {
          "items": {
            "$ref": "#/patchDefinitions/line-of-business"
          }, 
          "type": "array"
        }
      }
    }, 
    "logical-link": {
      "description": "Logical links generally connect l-interfaces but are used to express logical connectivity between two points\n###### Related Nodes\n- TO cloud-region( logical-link LocatedIn cloud-region, MANY2MANY)\n- TO ext-aai-network( logical-link BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO generic-vnf( logical-link BridgedTo generic-vnf, MANY2MANY)\n- TO l-interface( logical-link Source l-interface, MANY2MANY)(4)\n- TO l-interface( logical-link Destination l-interface, MANY2MANY)(4)\n- TO lag-link( logical-link Uses lag-link, MANY2MANY)\n- TO logical-link( logical-link Uses logical-link, MANY2MANY)\n- TO pnf( logical-link BridgedTo pnf, MANY2MANY)\n- TO pserver( logical-link BridgedTo pserver, MANY2MANY)\n- TO virtual-data-center( logical-link LocatedIn virtual-data-center, MANY2MANY)\n- TO vpn-binding( logical-link Uses vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses logical-link, ONE2MANY)(3)\n- FROM l-interface( l-interface LinksTo logical-link, MANY2MANY)(3)\n- FROM lag-interface( lag-interface Uses logical-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses logical-link, MANY2MANY)\n- FROM p-interface( p-interface LinksTo logical-link, MANY2ONE)\n- FROM service-instance( service-instance Uses logical-link, MANY2MANY)(3)\n- FROM vlan( vlan Uses logical-link, MANY2MANY)(3)\n\n-(3) IF this FROM node is deleted, this LOGICAL-LINK is DELETED also\n-(4) IF this TO node is deleted, this LOGICAL-LINK is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ip-version": {
          "description": "v4, v6, or ds for dual stack", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
          "type": "string"
        }, 
        "link-type": {
          "description": "Type of logical link, e.g., evc", 
          "type": "string"
        }, 
        "routing-protocol": {
          "description": "For example, static or BGP", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name", 
        "in-maint", 
        "link-type"
      ]
    }, 
    "logical-links": {
      "description": "Collection of logical connections\n", 
      "properties": {
        "logical-link": {
          "items": {
            "$ref": "#/patchDefinitions/logical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadata": {
      "description": "Collection of metadatum (key/value pairs)\n", 
      "properties": {
        "metadatum": {
          "items": {
            "$ref": "#/patchDefinitions/metadatum"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadatum": {
      "description": "Key/value pairs\n###### Related Nodes\n- TO configuration (PARENT of metadatum, metadatum BelongsTo configuration, MANY2ONE)(4)\n- TO connector (PARENT of metadatum, metadatum BelongsTo connector, MANY2ONE)(4)\n- TO image (PARENT of metadatum, metadatum BelongsTo image, MANY2ONE)(4)\n- TO model-ver (PARENT of metadatum, metadatum BelongsTo model-ver, MANY2ONE)(4)\n- TO service-instance (PARENT of metadatum, metadatum BelongsTo service-instance, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this METADATUM is DELETED also\n", 
      "properties": {
        "metaname": {
          "type": "string"
        }, 
        "metaval": {
          "type": "string"
        }
      }, 
      "required": [
        "metaname", 
        "metaval"
      ]
    }, 
    "model": {
      "description": "Subgraph definition provided by ASDC to describe an inventory asset and its connections related to ASDC models, independent of version\n###### Related Nodes\n- FROM instance-group( instance-group Targets model, MANY2MANY)\n- FROM model-ver (CHILD of model, model-ver BelongsTo model, MANY2ONE)(1)\n- FROM named-query( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element( named-query-element IsA model, MANY2ONE)\n\n-(1) IF this MODEL node is deleted, this FROM node is DELETED also\n-MODEL cannot be deleted if related to INSTANCE-GROUP,NAMED-QUERY,NAMED-QUERY-ELEMENT\n", 
      "properties": {
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-type"
      ]
    }, 
    "model-and-named-query-search": {
      "description": "ModelAndNamedQuerySearch holds query-parameters and instance-properties for performing a named-query or model query\n", 
      "properties": {
        "instance-filters": {
          "$ref": "#/patchDefinitions/instance-filters", 
          "type": "object"
        }, 
        "query-parameters": {
          "$ref": "#/patchDefinitions/query-parameters", 
          "type": "object"
        }, 
        "secondary-filter-cut-point": {
          "type": "string"
        }, 
        "secondary-filts": {
          "$ref": "#/patchDefinitions/secondary-filts", 
          "type": "object"
        }, 
        "top-node-type": {
          "type": "string"
        }
      }
    }, 
    "model-constraint": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-element (PARENT of model-constraint, model-constraint BelongsTo model-element, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-constraint, constrained-element-set BelongsTo model-constraint, MANY2ONE)(1)\n\n-(1) IF this MODEL-CONSTRAINT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constrained-element-set-uuid-to-replace": {
          "type": "string"
        }, 
        "constrained-element-sets": {
          "items": {
            "$ref": "#/patchDefinitions/constrained-element-set"
          }, 
          "type": "array"
        }, 
        "model-constraint-uuid": {
          "type": "string"
        }
      }, 
      "required": [
        "model-constraint-uuid", 
        "constrained-element-set-uuid-to-replace"
      ]
    }, 
    "model-constraints": {
      "properties": {
        "model-constraint": {
          "items": {
            "$ref": "#/patchDefinitions/model-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-element": {
      "description": "Defines how other models combine to make up a higher-level model.\n###### Related Nodes\n- TO element-choice-set (PARENT of model-element, model-element BelongsTo element-choice-set, MANY2ONE)(4)\n- TO model-element( model-element BelongsTo model-element, MANY2ONE)(4)\n- TO model-ver( model-element IsA model-ver, MANY2ONE)\n- TO model-ver (PARENT of model-element, model-element BelongsTo model-ver, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-element, constrained-element-set BelongsTo model-element, MANY2ONE)(1)\n- FROM model-constraint (CHILD of model-element, model-constraint BelongsTo model-element, MANY2ONE)(1)\n- FROM model-element (PARENT of model-element, model-element BelongsTo model-element, MANY2ONE)(4)\n\n-(1) IF this MODEL-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-ELEMENT is DELETED also\n", 
      "properties": {
        "cardinality": {
          "description": "How many of this type of element are required/allowed", 
          "type": "string"
        }, 
        "linkage-points": {
          "type": "string"
        }, 
        "model-element-uuid": {
          "type": "string"
        }, 
        "new-data-del-flag": {
          "description": "Indicates whether this element was created as part of instantiation from this model", 
          "type": "string"
        }
      }, 
      "required": [
        "model-element-uuid", 
        "new-data-del-flag", 
        "cardinality"
      ]
    }, 
    "model-elements": {
      "properties": {
        "model-element": {
          "items": {
            "$ref": "#/patchDefinitions/model-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-ver": {
      "description": "Subgraph definition provided by ASDC to describe a specific version of an inventory asset and its connections related to ASDC models\n###### Related Nodes\n- TO model (PARENT of model-ver, model-ver BelongsTo model, MANY2ONE)(4)\n- FROM metadatum (CHILD of model-ver, metadatum BelongsTo model-ver, MANY2ONE)(1)\n- FROM model-element( model-element IsA model-ver, MANY2ONE)\n- FROM model-element (CHILD of model-ver, model-element BelongsTo model-ver, MANY2ONE)(1)\n\n-(1) IF this MODEL-VER node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-VER is DELETED also\n-MODEL-VER cannot be deleted if related to MODEL-ELEMENT\n", 
      "properties": {
        "distribution-status": {
          "description": "Distribution Status", 
          "type": "string"
        }, 
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "model-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }
      }, 
      "required": [
        "model-version-id", 
        "model-name", 
        "model-version"
      ]
    }, 
    "model-vers": {
      "properties": {
        "model-ver": {
          "items": {
            "$ref": "#/patchDefinitions/model-ver"
          }, 
          "type": "array"
        }
      }
    }, 
    "models": {
      "description": "Collection of subgraph definitions provided by ASDC to describe the inventory assets and their connections related to ASDC models\n", 
      "properties": {
        "model": {
          "items": {
            "$ref": "#/patchDefinitions/model"
          }, 
          "type": "array"
        }
      }
    }, 
    "multicast-configuration": {
      "description": "###### Related Nodes\n- FROM vlan( vlan Uses multicast-configuration, MANY2MANY)\n", 
      "properties": {
        "multicast-configuration-id": {
          "description": "Unique id of multicast configuration.", 
          "type": "string"
        }, 
        "multicast-protocol": {
          "description": "protocol of multicast configuration", 
          "type": "string"
        }, 
        "rp-type": {
          "description": "rp type of multicast configuration", 
          "type": "string"
        }
      }, 
      "required": [
        "multicast-configuration-id", 
        "multicast-protocol", 
        "rp-type"
      ]
    }, 
    "multicast-configurations": {
      "description": "multicast configuration of generic-vnf ip-address\n", 
      "properties": {
        "multicast-configuration": {
          "items": {
            "$ref": "#/patchDefinitions/multicast-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-queries": {
      "properties": {
        "named-query": {
          "items": {
            "$ref": "#/patchDefinitions/named-query"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-query": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element (CHILD of named-query, named-query-element BelongsTo named-query, ONE2ONE)(1)\n\n-(1) IF this NAMED-QUERY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "description": {
          "type": "string"
        }, 
        "named-query-name": {
          "type": "string"
        }, 
        "named-query-uuid": {
          "type": "string"
        }, 
        "named-query-version": {
          "type": "string"
        }, 
        "required-input-param": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-uuid", 
        "named-query-name", 
        "named-query-version"
      ]
    }, 
    "named-query-element": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query-element IsA model, MANY2ONE)\n- TO named-query-element( named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- TO named-query (PARENT of named-query-element, named-query-element BelongsTo named-query, ONE2ONE)(4)\n- FROM named-query-element (PARENT of named-query-element, named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- FROM property-constraint (CHILD of named-query-element, property-constraint BelongsTo named-query-element, MANY2ONE)(1)\n- FROM related-lookup (CHILD of named-query-element, related-lookup BelongsTo named-query-element, MANY2ONE)(1)\n\n-(1) IF this NAMED-QUERY-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this NAMED-QUERY-ELEMENT is DELETED also\n", 
      "properties": {
        "named-query-element-uuid": {
          "type": "string"
        }, 
        "property-collect-list": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-element-uuid"
      ]
    }, 
    "named-query-elements": {
      "properties": {
        "named-query-element": {
          "items": {
            "$ref": "#/patchDefinitions/named-query-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "network": {
      "description": "Namespace for network inventory resources.\n", 
      "properties": {
        "collections": {
          "items": {
            "$ref": "#/patchDefinitions/collection"
          }, 
          "type": "array"
        }, 
        "configurations": {
          "items": {
            "$ref": "#/patchDefinitions/configuration"
          }, 
          "type": "array"
        }, 
        "connectivities": {
          "items": {
            "$ref": "#/patchDefinitions/connectivity"
          }, 
          "type": "array"
        }, 
        "devices": {
          "items": {
            "$ref": "#/patchDefinitions/device"
          }, 
          "type": "array"
        }, 
        "ext-aai-networks": {
          "items": {
            "$ref": "#/patchDefinitions/ext-aai-network"
          }, 
          "type": "array"
        }, 
        "forwarding-paths": {
          "items": {
            "$ref": "#/patchDefinitions/forwarding-path"
          }, 
          "type": "array"
        }, 
        "generic-vnfs": {
          "items": {
            "$ref": "#/patchDefinitions/generic-vnf"
          }, 
          "type": "array"
        }, 
        "instance-groups": {
          "items": {
            "$ref": "#/patchDefinitions/instance-group"
          }, 
          "type": "array"
        }, 
        "ipsec-configurations": {
          "items": {
            "$ref": "#/patchDefinitions/ipsec-configuration"
          }, 
          "type": "array"
        }, 
        "l3-networks": {
          "items": {
            "$ref": "#/patchDefinitions/l3-network"
          }, 
          "type": "array"
        }, 
        "lag-links": {
          "items": {
            "$ref": "#/patchDefinitions/lag-link"
          }, 
          "type": "array"
        }, 
        "lan-port-configs": {
          "items": {
            "$ref": "#/patchDefinitions/lan-port-config"
          }, 
          "type": "array"
        }, 
        "logical-links": {
          "items": {
            "$ref": "#/patchDefinitions/logical-link"
          }, 
          "type": "array"
        }, 
        "multicast-configurations": {
          "items": {
            "$ref": "#/patchDefinitions/multicast-configuration"
          }, 
          "type": "array"
        }, 
        "network-policies": {
          "items": {
            "$ref": "#/patchDefinitions/network-policy"
          }, 
          "type": "array"
        }, 
        "network-resources": {
          "items": {
            "$ref": "#/patchDefinitions/network-resource"
          }, 
          "type": "array"
        }, 
        "newvces": {
          "items": {
            "$ref": "#/patchDefinitions/newvce"
          }, 
          "type": "array"
        }, 
        "physical-links": {
          "items": {
            "$ref": "#/patchDefinitions/physical-link"
          }, 
          "type": "array"
        }, 
        "pnfs": {
          "items": {
            "$ref": "#/patchDefinitions/pnf"
          }, 
          "type": "array"
        }, 
        "route-table-references": {
          "items": {
            "$ref": "#/patchDefinitions/route-table-reference"
          }, 
          "type": "array"
        }, 
        "sdwan-vpns": {
          "items": {
            "$ref": "#/patchDefinitions/sdwan-vpn"
          }, 
          "type": "array"
        }, 
        "site-pair-sets": {
          "items": {
            "$ref": "#/patchDefinitions/site-pair-set"
          }, 
          "type": "array"
        }, 
        "site-resources": {
          "items": {
            "$ref": "#/patchDefinitions/site-resource"
          }, 
          "type": "array"
        }, 
        "vces": {
          "items": {
            "$ref": "#/patchDefinitions/vce"
          }, 
          "type": "array"
        }, 
        "vlan-tags": {
          "items": {
            "$ref": "#/patchDefinitions/vlan-tag"
          }, 
          "type": "array"
        }, 
        "vnfcs": {
          "items": {
            "$ref": "#/patchDefinitions/vnfc"
          }, 
          "type": "array"
        }, 
        "vpls-pes": {
          "items": {
            "$ref": "#/patchDefinitions/vpls-pe"
          }, 
          "type": "array"
        }, 
        "vpn-bindings": {
          "items": {
            "$ref": "#/patchDefinitions/vpn-binding"
          }, 
          "type": "array"
        }, 
        "wan-port-configs": {
          "items": {
            "$ref": "#/patchDefinitions/wan-port-config"
          }, 
          "type": "array"
        }, 
        "zones": {
          "items": {
            "$ref": "#/patchDefinitions/zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policies": {
      "properties": {
        "network-policy": {
          "items": {
            "$ref": "#/patchDefinitions/network-policy"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policy": {
      "description": "###### Related Nodes\n- FROM allotted-resource( allotted-resource Uses network-policy, ONE2ONE)\n- FROM l3-network( l3-network Uses network-policy, MANY2MANY)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "ID for the openStack Heat instance", 
          "type": "string"
        }, 
        "network-policy-fqdn": {
          "description": "Contrail FQDN for the policy", 
          "type": "string"
        }, 
        "network-policy-id": {
          "description": "UUID representing unique key to this instance", 
          "type": "string"
        }
      }, 
      "required": [
        "network-policy-id"
      ]
    }, 
    "network-profile": {
      "description": "Network profile populated by SDN-GP for SNMP\n###### Related Nodes\n- TO generic-vnf( network-profile AppliesTo generic-vnf, MANY2MANY)\n", 
      "properties": {
        "community-string": {
          "description": "Encrypted SNMP community string", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Unique name of network profile.", 
          "type": "string"
        }
      }, 
      "required": [
        "nm-profile-name"
      ]
    }, 
    "network-profiles": {
      "description": "Collection of network profiles\n", 
      "properties": {
        "network-profile": {
          "items": {
            "$ref": "#/patchDefinitions/network-profile"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-resource": {
      "description": "Instance of a network-resource\n###### Related Nodes\n- TO ext-aai-network( network-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( network-resource Uses vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM pnf( pnf LinksTo network-resource, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "client-id": {
          "description": "Store the id of the client of this network-resource.", 
          "type": "string"
        }, 
        "network-id": {
          "description": "Uniquely identifies this network-resource by id", 
          "type": "string"
        }, 
        "provider-id": {
          "description": "Store the id of the provider of this network-resource.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "te-topo-id": {
          "description": "Store the id of the te-topo of this network-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id"
      ]
    }, 
    "network-resources": {
      "description": "Collection of network-resources\n", 
      "properties": {
        "network-resource": {
          "items": {
            "$ref": "#/patchDefinitions/network-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-technologies": {
      "description": "The network-technology object is used to capture the supported network technologies of a cloud-region.\n", 
      "properties": {
        "network-technology": {
          "items": {
            "$ref": "#/patchDefinitions/network-technology"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-technology": {
      "description": "The network-technology object is used to capture the supported network technologies of a cloud-region.\n###### Related Nodes\n- FROM cloud-region( cloud-region Uses network-technology, MANY2MANY)\n", 
      "properties": {
        "network-technology-id": {
          "description": "Unique identifier of the network-technology object (UUID)", 
          "type": "string"
        }, 
        "network-technology-name": {
          "description": "The network-technology  that a cloud-region can support. Current valid values- CONTRAIL AIC_SR_IOV OVS STANDARD-SR-IOV", 
          "type": "string"
        }
      }, 
      "required": [
        "network-technology-id", 
        "network-technology-name"
      ]
    }, 
    "newvce": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n###### Related Nodes\n- FROM l-interface (CHILD of newvce, l-interface BelongsTo newvce, MANY2ONE)(1)\n\n-(1) IF this NEWVCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-role": {
          "description": "Client should send valid enumerated value.", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "vnf-id2": {
          "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id2", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "newvces": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n", 
      "properties": {
        "newvce": {
          "items": {
            "$ref": "#/patchDefinitions/newvce"
          }, 
          "type": "array"
        }
      }
    }, 
    "nodes": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/patchDefinitions/inventory-item-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "nos-server": {
      "description": "nos-server is the execution environment that will have images, certain versions of VNOS, running on it.\n###### Related Nodes\n- TO pserver( nos-server HostedOn pserver, ONE2ONE)\n- TO tenant (PARENT of nos-server, nos-server BelongsTo tenant, MANY2ONE)\n- FROM generic-vnf( generic-vnf HostedOn nos-server, MANY2ONE)\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "nos-server-id": {
          "description": "Unique identifier for this nos relative to its tenant", 
          "type": "string"
        }, 
        "nos-server-name": {
          "description": "Name of nos", 
          "type": "string"
        }, 
        "nos-server-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "uCPE vendor", 
          "type": "string"
        }
      }, 
      "required": [
        "nos-server-id", 
        "nos-server-name", 
        "vendor", 
        "nos-server-selflink", 
        "in-maint"
      ]
    }, 
    "nos-servers": {
      "description": "nos-server is the execution environment that will have images, certain versions of VNOS, running on it.\n", 
      "properties": {
        "nos-server": {
          "items": {
            "$ref": "#/patchDefinitions/nos-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "notification-event": {
      "properties": {
        "cambria.partition": {
          "type": "string"
        }, 
        "notification-event-header": {
          "$ref": "#/patchDefinitions/notification-event-header", 
          "type": "object"
        }
      }
    }, 
    "notification-event-header": {
      "properties": {
        "action": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "entity-link": {
          "type": "string"
        }, 
        "entity-type": {
          "type": "string"
        }, 
        "event-type": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "sequence-number": {
          "type": "string"
        }, 
        "severity": {
          "type": "string"
        }, 
        "source-name": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "timestamp": {
          "type": "string"
        }, 
        "top-entity-type": {
          "type": "string"
        }, 
        "version": {
          "type": "string"
        }
      }
    }, 
    "notify": {
      "properties": {
        "event-id": {
          "type": "string"
        }, 
        "event-trigger": {
          "type": "string"
        }, 
        "key-data": {
          "items": {
            "$ref": "#/patchDefinitions/key-data"
          }, 
          "type": "array"
        }, 
        "node-type": {
          "type": "string"
        }, 
        "selflink": {
          "type": "string"
        }
      }, 
      "required": [
        "event-id"
      ]
    }, 
    "oam-network": {
      "description": "OAM network, to be deprecated shortly.  Do not use for new purposes. \n###### Related Nodes\n- TO cloud-region (PARENT of oam-network, oam-network BelongsTo cloud-region, MANY2ONE)\n- TO complex( oam-network AppliesTo complex, MANY2MANY)\n- TO service-capability( oam-network AppliesTo service-capability, MANY2MANY)\n", 
      "properties": {
        "cvlan-tag": {
          "description": "cvlan-id", 
          "format": "int64", 
          "type": "integer"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "format": "int32", 
          "type": "integer"
        }, 
        "network-name": {
          "description": "Name of the network.", 
          "type": "string"
        }, 
        "network-uuid": {
          "description": "UUID of the network. Unique across a cloud-region", 
          "type": "string"
        }
      }, 
      "required": [
        "network-uuid", 
        "network-name", 
        "cvlan-tag"
      ]
    }, 
    "oam-networks": {
      "description": "Collection of OAM networks, to be deprecated shortly.  Do not use for new purposes. \n", 
      "properties": {
        "oam-network": {
          "items": {
            "$ref": "#/patchDefinitions/oam-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "operational-environment": {
      "description": "It is a logical partition of the cloud which allows to have multiple environments in the production AIC.\n###### Related Nodes\n- TO operational-environment( operational-environment Uses operational-environment, MANY2MANY)\n- FROM operational-environment( operational-environment Uses operational-environment, MANY2MANY)\n", 
      "properties": {
        "operational-environment-id": {
          "description": "UUID of an operational environment", 
          "type": "string"
        }, 
        "operational-environment-name": {
          "description": "Operational Environment name", 
          "type": "string"
        }, 
        "operational-environment-status": {
          "description": "Status", 
          "type": "string"
        }, 
        "operational-environment-type": {
          "description": "Operational Environment Type.", 
          "type": "string"
        }, 
        "tenant-context": {
          "description": "Tenant Context.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "Workload Context.", 
          "type": "string"
        }
      }, 
      "required": [
        "operational-environment-id", 
        "operational-environment-name", 
        "operational-environment-type", 
        "operational-environment-status", 
        "tenant-context", 
        "workload-context"
      ]
    }, 
    "operational-environments": {
      "description": "a logical partition of the cloud which allows to have multiple environments in the production AIC.\n", 
      "properties": {
        "operational-environment": {
          "items": {
            "$ref": "#/patchDefinitions/operational-environment"
          }, 
          "type": "array"
        }
      }
    }, 
    "overloaded-model": {
      "description": "Allows for legacy POST of old-style and new-style models\n", 
      "properties": {
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-id": {
          "description": "Invariant unique ID which does not change from version to version", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-name-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-name-version-id", 
        "model-type", 
        "model-name", 
        "model-id", 
        "model-version"
      ]
    }, 
    "owning-entities": {
      "description": "Collection of owning-entities\n", 
      "properties": {
        "owning-entity": {
          "items": {
            "$ref": "#/patchDefinitions/owning-entity"
          }, 
          "type": "array"
        }
      }
    }, 
    "owning-entity": {
      "description": "describes an owning-entity\n###### Related Nodes\n- FROM service-instance( service-instance BelongsTo owning-entity, MANY2ONE)\n", 
      "properties": {
        "owning-entity-id": {
          "description": "UUID of an owning entity", 
          "type": "string"
        }, 
        "owning-entity-name": {
          "description": "Owning entity name", 
          "type": "string"
        }
      }, 
      "required": [
        "owning-entity-id", 
        "owning-entity-name"
      ]
    }, 
    "p-interface": {
      "description": "Physical interface (e.g., nic)\n###### Related Nodes\n- TO logical-link( p-interface LinksTo logical-link, MANY2ONE)\n- TO pnf (PARENT of p-interface, p-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of p-interface, p-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of p-interface, p-interface BindsTo vpls-pe, MANY2ONE)(4)\n- TO physical-link( p-interface LinksTo physical-link, MANY2ONE)(2)\n- FROM allotted-resource( allotted-resource Uses p-interface, ONE2MANY)\nAAI-1925 For CCVPN Usecase\n- FROM forwarder( forwarder ForwardsTo p-interface, MANY2MANY)\n- FROM l-interface (CHILD of p-interface, l-interface BindsTo p-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses p-interface, MANY2MANY)\n- FROM sriov-pf (CHILD of p-interface, sriov-pf BelongsTo p-interface, ONE2ONE)(1)\n- FROM vpn-binding( vpn-binding BindsTo p-interface, ONE2MANY)\nFor CCVPN Usecase\n\n-(1) IF this P-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this P-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this P-INTERFACE is DELETED also\n", 
      "properties": {
        "equipment-identifier": {
          "description": "CLEI or other specification for p-interface hardware.", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name that identifies the physical interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role specification for p-interface hardware.", 
          "type": "string"
        }, 
        "interface-type": {
          "description": "Indicates the physical properties of the interface.", 
          "type": "string"
        }, 
        "mac-addresss": {
          "description": "MAC Address of the p-interface.", 
          "type": "string"
        }, 
        "port-description": {
          "description": "Nature of the services and connectivity on this port.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "p-interfaces": {
      "description": "Collection of physical interfaces.\n", 
      "properties": {
        "p-interface": {
          "items": {
            "$ref": "#/patchDefinitions/p-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "physical-link": {
      "description": "Collection of physical connections, typically between p-interfaces\n###### Related Nodes\n- FROM p-interface( p-interface LinksTo physical-link, MANY2ONE)(3)\n\n-(3) IF this FROM node is deleted, this PHYSICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit it", 
          "type": "string"
        }, 
        "dual-mode": {
          "description": "Dual access mode (e.g., primary, secondary", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
          "type": "string"
        }, 
        "management-option": {
          "description": "To provide information on who manages this circuit. A&AI or 3rd party transport provider", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-units": {
          "description": "Units for downstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-value": {
          "description": "Downstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-bandwidth-up-units": {
          "description": "Units for the upstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-up-value": {
          "description": "Upstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-name": {
          "description": "Name of the service Provider on this link.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "physical-links": {
      "description": "Collection of physical connections, typically between p-interfaces\n", 
      "properties": {
        "physical-link": {
          "items": {
            "$ref": "#/patchDefinitions/physical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "platform": {
      "description": "describes a platform\n###### Related Nodes\n- TO generic-vnf( platform Uses generic-vnf, MANY2MANY)\n- TO l3-network( platform Uses l3-network, MANY2MANY)\n", 
      "properties": {
        "platform-name": {
          "description": "Name of the platform", 
          "type": "string"
        }
      }, 
      "required": [
        "platform-name"
      ]
    }, 
    "platforms": {
      "description": "Collection of platforms\n", 
      "properties": {
        "platform": {
          "items": {
            "$ref": "#/patchDefinitions/platform"
          }, 
          "type": "array"
        }
      }
    }, 
    "pnf": {
      "description": "PNF represents a physical network function. typically equipment used in the D1 world. in 1607, this will be populated by SDN-C to represent a premises router that a uCPE connects to. But this can be used to represent any physical device that is not an AIC node or uCPE.\n###### Related Nodes\n- TO complex( pnf LocatedIn complex, MANY2ONE)\n- TO ext-aai-network( pnf BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO instance-group( pnf MemberOf instance-group, MANY2MANY)\n- TO network-resource( pnf LinksTo network-resource, MANY2MANY)\nFor CCVPN Usecase\n- TO zone( pnf LocatedIn zone, MANY2ONE)\n- FROM configuration( configuration AppliesTo pnf, MANY2MANY)\n- FROM esr-thirdparty-sdnc( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM generic-vnf( generic-vnf HostedOn pnf, MANY2MANY)\n- FROM lag-interface (CHILD of pnf, lag-interface BindsTo pnf, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pnf, MANY2MANY)\n- FROM p-interface (CHILD of pnf, p-interface BindsTo pnf, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf pnf, ONE2MANY)\n- FROM software-version (CHILD of pnf, software-version BelongsTo pnf, MANY2ONE)\n- FROM vrf (CHILD of pnf, vrf BelongsTo pnf, MANY2ONE)\nA vrf belongs to a pnf.(1)\n\n-(1) IF this PNF node is deleted, this FROM node is DELETED also\n-PNF cannot be deleted if related to NETWORK-RESOURCE,SOFTWARE-VERSION\n", 
      "properties": {
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "frame-id": {
          "description": "ID of the physical frame (relay rack) where pnf is installed.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v4-oam": {
          "description": "ipv4-oam-address with new naming convention for IP addresses", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this pnf", 
          "type": "string"
        }, 
        "pnf-id": {
          "description": "id of pnf", 
          "type": "string"
        }, 
        "pnf-name": {
          "description": "unique name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2": {
          "description": "name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2-source": {
          "description": "source of name2", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number of the device", 
          "type": "string"
        }, 
        "sw-version": {
          "description": "sw-version is the version of SW for the hosted application on the PNF.", 
          "type": "string"
        }
      }, 
      "required": [
        "pnf-name", 
        "in-maint"
      ]
    }, 
    "pnfs": {
      "description": "Collection of Physical Network Functions.\n", 
      "properties": {
        "pnf": {
          "items": {
            "$ref": "#/patchDefinitions/pnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "port-group": {
      "description": "Used to capture the network interfaces of this VCE\n###### Related Nodes\n- TO vce (PARENT of port-group, port-group BelongsTo vce, MANY2ONE)(4)\n- FROM cvlan-tag (CHILD of port-group, cvlan-tag BelongsTo port-group, MANY2ONE)(1)\n\n-(1) IF this PORT-GROUP node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this PORT-GROUP is DELETED also\n", 
      "properties": {
        "interface-id": {
          "description": "Unique ID of the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "neutron-network-name": {
          "description": "Neutron network name of this Interface", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-id", 
        "orchestration-status"
      ]
    }, 
    "port-groups": {
      "properties": {
        "port-group": {
          "items": {
            "$ref": "#/patchDefinitions/port-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "project": {
      "description": "describes the project\n###### Related Nodes\n- TO service-instance( project Uses service-instance, ONE2MANY)\n", 
      "properties": {
        "project-name": {
          "description": "Name of the project deploying a service", 
          "type": "string"
        }
      }, 
      "required": [
        "project-name"
      ]
    }, 
    "projects": {
      "description": "Collection of projects\n", 
      "properties": {
        "project": {
          "items": {
            "$ref": "#/patchDefinitions/project"
          }, 
          "type": "array"
        }
      }
    }, 
    "properties": {
      "description": "Property holder for query properties or instance properties\n", 
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "property-constraint": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of property-constraint, property-constraint BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this PROPERTY-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constraint-type": {
          "type": "string"
        }, 
        "property-constraint-uuid": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }, 
      "required": [
        "property-constraint-uuid", 
        "constraint-type", 
        "property-name", 
        "property-value"
      ]
    }, 
    "property-constraints": {
      "properties": {
        "property-constraint": {
          "items": {
            "$ref": "#/patchDefinitions/property-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "pserver": {
      "description": "Compute host whose hostname must be unique and must exactly match what is sent as a relationship to a vserver.\n###### Related Nodes\n- TO availability-zone( pserver MemberOf availability-zone, MANY2ONE)\n- TO cloud-region( pserver LocatedIn cloud-region, MANY2ONE)\n- TO complex( pserver LocatedIn complex, MANY2ONE)\n- TO group-assignment( pserver MemberOf group-assignment, MANY2ONE)\n- TO zone( pserver LocatedIn zone, MANY2ONE)\n- FROM flavor( flavor CanBeInstantiatedIn pserver, MANY2MANY)\nHPA Capacity getting the compute nodes from given flavor\n- FROM generic-vnf( generic-vnf HostedOn pserver, MANY2MANY)\n- FROM hpa-capacity (CHILD of pserver, hpa-capacity BelongsTo pserver, MANY2ONE)\nHPA Capacity KV for given compute node(1)\n- FROM lag-interface (CHILD of pserver, lag-interface BindsTo pserver, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pserver, MANY2MANY)\n- FROM nos-server( nos-server HostedOn pserver, ONE2ONE)\n- FROM p-interface (CHILD of pserver, p-interface BindsTo pserver, MANY2ONE)(1)\n- FROM vserver( vserver HostedOn pserver, MANY2ONE)\n\n-(1) IF this PSERVER node is deleted, this FROM node is DELETED also\n-PSERVER cannot be deleted if related to GROUP-ASSIGNMENT,GENERIC-VNF,LOGICAL-LINK,NOS-SERVER,VSERVER\n", 
      "properties": {
        "disk-in-gigabytes": {
          "description": "Disk size, in GBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "fqdn": {
          "description": "Fully-qualified domain name", 
          "type": "string"
        }, 
        "hostname": {
          "description": "Value from executing hostname on the compute node.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "internet-topology": {
          "description": "internet topology of Pserver", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Used to configure device, also used for troubleshooting and is IP used for traps generated by device.", 
          "type": "string"
        }, 
        "number-of-cpus": {
          "description": "Number of cpus", 
          "format": "int32", 
          "type": "integer"
        }, 
        "pserver-id": {
          "description": "ID of Pserver", 
          "type": "string"
        }, 
        "pserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "ptnii-equip-name": {
          "description": "PTNII name", 
          "type": "string"
        }, 
        "ram-in-megabytes": {
          "description": "RAM size, in MBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "serial-number": {
          "description": "Serial number, may be queried", 
          "type": "string"
        }
      }, 
      "required": [
        "hostname", 
        "in-maint"
      ]
    }, 
    "pservers": {
      "description": "Collection of compute hosts.\n", 
      "properties": {
        "pserver": {
          "items": {
            "$ref": "#/patchDefinitions/pserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "query-parameters": {
      "description": "QueryParameters for performing a named-query or model query\n", 
      "properties": {
        "named-query": {
          "$ref": "#/patchDefinitions/named-query", 
          "type": "object"
        }, 
        "overloaded-model": {
          "$ref": "#/patchDefinitions/overloaded-model", 
          "type": "object"
        }
      }
    }, 
    "related-lookup": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of related-lookup, related-lookup BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this RELATED-LOOKUP is DELETED also\n", 
      "properties": {
        "property-collect-list": {
          "type": "string"
        }, 
        "related-lookup-uuid": {
          "type": "string"
        }, 
        "source-node-property": {
          "type": "string"
        }, 
        "source-node-type": {
          "type": "string"
        }, 
        "target-node-property": {
          "type": "string"
        }, 
        "target-node-type": {
          "type": "string"
        }
      }, 
      "required": [
        "related-lookup-uuid", 
        "source-node-type", 
        "source-node-property", 
        "target-node-type", 
        "target-node-property"
      ]
    }, 
    "related-lookups": {
      "properties": {
        "related-lookup": {
          "items": {
            "$ref": "#/patchDefinitions/related-lookup"
          }, 
          "type": "array"
        }
      }
    }, 
    "related-to-property": {
      "properties": {
        "property-key": {
          "description": "Key part of a key/value pair", 
          "type": "string"
        }, 
        "property-value": {
          "description": "Value part of a key/value pair", 
          "type": "string"
        }
      }
    }, 
    "relationship": {
      "description": "dictionary of relationship\n", 
      "properties": {
        "relationship": {
          "items": {
            "$ref": "#/patchDefinitions/relationship-dict"
          }, 
          "type": "array"
        }
      }, 
      "type": "object"
    }, 
    "relationship-data": {
      "properties": {
        "relationship-key": {
          "description": "A keyword provided by A&AI to indicate an attribute.", 
          "type": "string"
        }, 
        "relationship-value": {
          "description": "Value of the attribute.", 
          "type": "string"
        }
      }, 
      "required": [
        "relationship-key", 
        "relationship-value"
      ]
    }, 
    "relationship-dict": {
      "properties": {
        "related-link": {
          "description": "URL to the object in A&AI.", 
          "type": "string"
        }, 
        "related-to": {
          "description": "A keyword provided by A&AI to indicate type of node.", 
          "type": "string"
        }, 
        "related-to-property": {
          "items": {
            "$ref": "#/patchDefinitions/related-to-property"
          }, 
          "type": "array"
        }, 
        "relationship-data": {
          "items": {
            "$ref": "#/patchDefinitions/relationship-data"
          }, 
          "type": "array"
        }, 
        "relationship-label": {
          "description": "The edge label for this relationship.", 
          "type": "string"
        }
      }
    }, 
    "reserved-prop-names": {
      "description": "Internal map to define some reserved properties of a vertex\n", 
      "properties": {
        "aai-created-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-last-mod-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-node-type": {
          "type": "string"
        }, 
        "aai-unique-key": {
          "type": "string"
        }, 
        "aai-uri": {
          "type": "string"
        }, 
        "last-mod-source-of-truth": {
          "type": "string"
        }, 
        "source-of-truth": {
          "type": "string"
        }
      }
    }, 
    "response-list": {
      "description": "Response container for the results of a named-query or model query\n", 
      "properties": {
        "inventory-response-items": {
          "$ref": "#/patchDefinitions/inventory-response-items", 
          "type": "object"
        }
      }
    }, 
    "result-data": {
      "properties": {
        "resource-link": {
          "description": "The URL to the specific resource", 
          "type": "string"
        }, 
        "resource-type": {
          "description": "The specific type of node in the A&AI graph", 
          "type": "string"
        }
      }
    }, 
    "route-table-reference": {
      "description": "Openstack route table reference.\n###### Related Nodes\n- FROM l3-network( l3-network Uses route-table-reference, MANY2MANY)\n", 
      "properties": {
        "route-table-reference-fqdn": {
          "description": "FQDN entry in the route table.", 
          "type": "string"
        }, 
        "route-table-reference-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "route-table-reference-id", 
        "route-table-reference-fqdn"
      ]
    }, 
    "route-table-references": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "route-table-reference": {
          "items": {
            "$ref": "#/patchDefinitions/route-table-reference"
          }, 
          "type": "array"
        }
      }
    }, 
    "route-target": {
      "description": "Route target information\n###### Related Nodes\n- TO vpn-binding (PARENT of route-target, route-target BelongsTo vpn-binding, MANY2ONE)(4)\n- TO vrf (PARENT of route-target, route-target BelongsTo vrf, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ROUTE-TARGET is DELETED also\n", 
      "properties": {
        "global-route-target": {
          "description": "Number used to identify an RT, globally unique in the network", 
          "type": "string"
        }, 
        "route-target-role": {
          "description": "Role assigned to this route target", 
          "type": "string"
        }
      }, 
      "required": [
        "global-route-target", 
        "route-target-role"
      ]
    }, 
    "route-targets": {
      "description": "Collection of route target information\n", 
      "properties": {
        "route-target": {
          "items": {
            "$ref": "#/patchDefinitions/route-target"
          }, 
          "type": "array"
        }
      }
    }, 
    "routing-instance": {
      "description": "###### Related Nodes\n- TO site-pair-set (PARENT of routing-instance, routing-instance BelongsTo site-pair-set, MANY2ONE)(4)\n- FROM site-pair (CHILD of routing-instance, site-pair BelongsTo routing-instance, MANY2ONE)(1)\n\n-(1) IF this ROUTING-INSTANCE node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ROUTING-INSTANCE is DELETED also\n", 
      "properties": {
        "routing-instance-id": {
          "description": "Unique id of routing instance", 
          "type": "string"
        }, 
        "rpm-owner": {
          "description": "rpm owner", 
          "type": "string"
        }
      }, 
      "required": [
        "routing-instance-id"
      ]
    }, 
    "routing-instances": {
      "description": "set of probes related to generic-vnf routing instance\n", 
      "properties": {
        "routing-instance": {
          "items": {
            "$ref": "#/patchDefinitions/routing-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "sdn-zone-response": {
      "properties": {
        "az-and-dvs-switches": {
          "items": {
            "$ref": "#/patchDefinitions/az-and-dvs-switches"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "$ref": "#/patchDefinitions/oam-networks", 
          "type": "object"
        }
      }
    }, 
    "sdwan-vpn": {
      "description": "Instance of an sdwan-vpn\n###### Related Nodes\n- TO ext-aai-network( sdwan-vpn BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( sdwan-vpn PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- TO tenant( sdwan-vpn PartOf tenant, ONE2MANY)\nFor CCVPN Usecase\n- TO vpn-binding( sdwan-vpn PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "sdwan-vpn-id": {
          "description": "Uniquely identifies this sdwan-vpn by id", 
          "type": "string"
        }, 
        "sdwan-vpn-name": {
          "description": "Store the name of this sdwan-vpn.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Store the tenant-id of this sdwan-vpn.", 
          "type": "string"
        }, 
        "topology": {
          "description": "Store the topology of this sdwan-vpn.", 
          "type": "string"
        }, 
        "vpn-id": {
          "description": "Store the vpn-id of this sdwan-vpn.", 
          "type": "string"
        }, 
        "vxlan-id": {
          "description": "Store the vxlan-id of this sdwan-vpn.", 
          "type": "string"
        }
      }, 
      "required": [
        "sdwan-vpn-id"
      ]
    }, 
    "sdwan-vpns": {
      "description": "Collection of sdwan-vpns\n", 
      "properties": {
        "sdwan-vpn": {
          "items": {
            "$ref": "#/patchDefinitions/sdwan-vpn"
          }, 
          "type": "array"
        }
      }
    }, 
    "search": {
      "properties": {
        "edge-tag-query-request": {
          "$ref": "#/patchDefinitions/edge-tag-query-request", 
          "type": "object"
        }, 
        "edge-tag-query-result": {
          "$ref": "#/patchDefinitions/edge-tag-query-result", 
          "type": "object"
        }, 
        "sdn-zone-response": {
          "$ref": "#/patchDefinitions/sdn-zone-response", 
          "type": "object"
        }, 
        "search-results": {
          "$ref": "#/patchDefinitions/search-results", 
          "type": "object"
        }
      }
    }, 
    "search-results": {
      "properties": {
        "result-data": {
          "items": {
            "$ref": "#/patchDefinitions/result-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "secondary-filt": {
      "description": "SecondaryFilt for performing a named-query or model query\n"
    }, 
    "secondary-filter": {
      "properties": {
        "filter-type": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "secondary-filts": {
      "description": "SecondaryFilts for performing a named-query or model query\n", 
      "properties": {
        "secondary-filt": {
          "items": {
            "$ref": "#/patchDefinitions/secondary-filt"
          }, 
          "type": "array"
        }
      }
    }, 
    "segmentation-assignment": {
      "description": "Openstack segmentation assignment.\n###### Related Nodes\n- TO l3-network (PARENT of segmentation-assignment, segmentation-assignment BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this SEGMENTATION-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "segmentation-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "segmentation-id"
      ]
    }, 
    "segmentation-assignments": {
      "description": "Collection of openstack segmentation assignments\n", 
      "properties": {
        "segmentation-assignment": {
          "items": {
            "$ref": "#/patchDefinitions/segmentation-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "service": {
      "description": "Stand-in for service model definitions.  Likely to be deprecated in favor of models from ASDC.  Does not strictly map to ASDC services.\n", 
      "properties": {
        "service-description": {
          "description": "Description of the service", 
          "type": "string"
        }, 
        "service-id": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "service-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "service-id", 
        "service-description"
      ]
    }, 
    "service-capabilities": {
      "description": "Collection of service capabilities.\n", 
      "properties": {
        "service-capability": {
          "items": {
            "$ref": "#/patchDefinitions/service-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-capability": {
      "description": "Early definition of server/resource pairings, likely to be replaced by models.  No new use should be made of this.\n###### Related Nodes\n- FROM availability-zone( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo service-capability, MANY2MANY)\n\n-SERVICE-CAPABILITY cannot be deleted if related to AVAILABILITY-ZONE,OAM-NETWORK\n", 
      "properties": {
        "service-type": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type", 
        "vnf-type"
      ]
    }, 
    "service-design-and-creation": {
      "description": "Namespace for objects managed by ASDC\n", 
      "properties": {
        "models": {
          "items": {
            "$ref": "#/patchDefinitions/model"
          }, 
          "type": "array"
        }, 
        "named-queries": {
          "items": {
            "$ref": "#/patchDefinitions/named-query"
          }, 
          "type": "array"
        }, 
        "service-capabilities": {
          "items": {
            "$ref": "#/patchDefinitions/service-capability"
          }, 
          "type": "array"
        }, 
        "services": {
          "items": {
            "$ref": "#/patchDefinitions/service"
          }, 
          "type": "array"
        }, 
        "vnf-images": {
          "items": {
            "$ref": "#/patchDefinitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-instance": {
      "description": "Instance of a service\n###### Related Nodes\n- TO allotted-resource( service-instance Uses allotted-resource, MANY2MANY)\n- TO collection( service-instance ComposedOf collection, ONE2ONE)\n- TO configuration( service-instance Uses configuration, ONE2MANY)\n- TO configuration( service-instance ComposedOf configuration, MANY2MANY)\n- TO connector( service-instance Uses connector, MANY2MANY)\n- TO ctag-assignment( service-instance Uses ctag-assignment, ONE2MANY)\n- TO cvlan-tag( service-instance ComposedOf cvlan-tag, MANY2MANY)\n- TO generic-vnf( service-instance ComposedOf generic-vnf, ONE2MANY)\n- TO instance-group( service-instance Uses instance-group, ONE2MANY)\nMSO creates this edge on VNF Group Service creation\n- TO instance-group( service-instance MemberOf instance-group, MANY2MANY)\n- TO l3-network( service-instance ComposedOf l3-network, ONE2MANY)\n- TO logical-link( service-instance Uses logical-link, MANY2MANY)(2)\n- TO owning-entity( service-instance BelongsTo owning-entity, MANY2ONE)\n- TO pnf( service-instance ComposedOf pnf, ONE2MANY)\n- TO service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- TO service-subscription (PARENT of service-instance, service-instance BelongsTo service-subscription, MANY2ONE)(4)\n- TO vce( service-instance ComposedOf vce, ONE2MANY)\n- TO vlan( service-instance ComposedOf vlan, ONE2MANY)\n- TO zone( service-instance LocatedIn zone, MANY2ONE)\n- FROM allotted-resource (CHILD of service-instance, allotted-resource BelongsTo service-instance, MANY2ONE)(1)\n- FROM connectivity( connectivity PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM device( device PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM forwarding-path( forwarding-path AppliesTo service-instance, MANY2ONE)(1)\n- FROM lan-port-config( lan-port-config PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM metadatum (CHILD of service-instance, metadatum BelongsTo service-instance, MANY2ONE)(1)\n- FROM project( project Uses service-instance, ONE2MANY)\n- FROM sdwan-vpn( sdwan-vpn PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- FROM site-resource( site-resource PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n- FROM sp-partner( sp-partner PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n- FROM wan-port-config( wan-port-config PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n\n-(1) IF this SERVICE-INSTANCE node is deleted, this FROM node is DELETED also\n-(2) IF this SERVICE-INSTANCE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-INSTANCE is DELETED also\n", 
      "properties": {
        "bandwidth-total": {
          "description": "Indicates the total bandwidth to be used for this service.", 
          "type": "string"
        }, 
        "created-at": {
          "description": "create time of Network Service.", 
          "type": "string"
        }, 
        "description": {
          "description": "short description for service-instance.", 
          "type": "string"
        }, 
        "environment-context": {
          "description": "This field will store the environment context assigned to the service-instance.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "service-instance-id": {
          "description": "Uniquely identifies this instance of a service", 
          "type": "string"
        }, 
        "service-instance-location-id": {
          "description": "An identifier that customers assign to the location where this service is being used.", 
          "type": "string"
        }, 
        "service-instance-name": {
          "description": "This field will store a name assigned to the service-instance.", 
          "type": "string"
        }, 
        "service-role": {
          "description": "String capturing the service role.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "String capturing type of service.", 
          "type": "string"
        }, 
        "updated-at": {
          "description": "last update of Network Service.", 
          "type": "string"
        }, 
        "vhn-portal-url": {
          "description": "URL customers will use to access the vHN Portal.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "This field will store the workload context assigned to the service-instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-instance-id"
      ]
    }, 
    "service-instances": {
      "description": "Collection of service instances\n", 
      "properties": {
        "service-instance": {
          "items": {
            "$ref": "#/patchDefinitions/service-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-subscription": {
      "description": "Object that group service instances.\n###### Related Nodes\n- TO customer (PARENT of service-subscription, service-subscription BelongsTo customer, MANY2ONE)(4)\n- TO tenant( service-subscription Uses tenant, MANY2MANY)\n- FROM service-instance (CHILD of service-subscription, service-instance BelongsTo service-subscription, MANY2ONE)(1)\n\n-(1) IF this SERVICE-SUBSCRIPTION node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-SUBSCRIPTION is DELETED also\n", 
      "properties": {
        "service-type": {
          "description": "Value defined by orchestration to identify this service across ECOMP.", 
          "type": "string"
        }, 
        "temp-ub-sub-account-id": {
          "description": "This property will be deleted from A&AI in the near future. Only stop gap solution.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type"
      ]
    }, 
    "service-subscriptions": {
      "description": "Collection of objects that group service instances.\n", 
      "properties": {
        "service-subscription": {
          "items": {
            "$ref": "#/patchDefinitions/service-subscription"
          }, 
          "type": "array"
        }
      }
    }, 
    "services": {
      "description": "Collection of service model definitions.  Likely to be deprecated in favor of models from ASDC.\n", 
      "properties": {
        "service": {
          "items": {
            "$ref": "#/patchDefinitions/service"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pair": {
      "description": "###### Related Nodes\n- TO routing-instance (PARENT of site-pair, site-pair BelongsTo routing-instance, MANY2ONE)(4)\n- FROM class-of-service (CHILD of site-pair, class-of-service BelongsTo site-pair, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SITE-PAIR is DELETED also\n", 
      "properties": {
        "destination-equip-type": {
          "description": "The type of destinatination equipment. Could be Router, UCPE, etc.", 
          "type": "string"
        }, 
        "destination-hostname": {
          "description": "Hostname of the destination equipment to which SLAs are measured against.", 
          "type": "string"
        }, 
        "destination-ip": {
          "description": "Prefix address", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version, v4, v6", 
          "type": "string"
        }, 
        "site-pair-id": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "source-ip": {
          "description": "Prefix address", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-id"
      ]
    }, 
    "site-pair-set": {
      "description": "Set of instances for probes used to measure service level agreements\n###### Related Nodes\n- TO generic-vnf( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM routing-instance (CHILD of site-pair-set, routing-instance BelongsTo site-pair-set, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR-SET node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "site-pair-set-id": {
          "description": "Unique id of site pair set.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-set-id"
      ]
    }, 
    "site-pair-sets": {
      "description": "Collection of sets of instances for probes related to generic-vnf\n", 
      "properties": {
        "site-pair-set": {
          "items": {
            "$ref": "#/patchDefinitions/site-pair-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pairs": {
      "description": "probe within a set\n", 
      "properties": {
        "site-pair": {
          "items": {
            "$ref": "#/patchDefinitions/site-pair"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-resource": {
      "description": "Instance of a site-resource\n###### Related Nodes\n- TO allotted-resource( site-resource Uses allotted-resource, MANY2MANY)\nFor CCVPN Usecase\n- TO complex( site-resource Uses complex, MANY2MANY)\nFor CCVPN Usecase\n- TO ext-aai-network( site-resource BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( site-resource PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "description": {
          "description": "Store the description of this site-resource.", 
          "type": "string"
        }, 
        "generated-site-id": {
          "description": "Store the generated-site-id of this site-resource.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "role": {
          "description": "Store the role of this site-resource.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "site-resource-id": {
          "description": "Uniquely identifies this site-resource by id", 
          "type": "string"
        }, 
        "site-resource-name": {
          "description": "Store the name of this site-resource.", 
          "type": "string"
        }, 
        "type": {
          "description": "Store the type of this site-resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-resource-id"
      ]
    }, 
    "site-resources": {
      "description": "Collection of site-resources\n", 
      "properties": {
        "site-resource": {
          "items": {
            "$ref": "#/patchDefinitions/site-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "snapshot": {
      "description": "Openstack snapshot\n###### Related Nodes\n- TO cloud-region (PARENT of snapshot, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM vserver( vserver Uses snapshot, ONE2ONE)\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "prev-snapshot-id": {
          "description": "This field contains the UUID of the previous snapshot (if any).", 
          "type": "string"
        }, 
        "snapshot-architecture": {
          "description": "Operating system architecture", 
          "type": "string"
        }, 
        "snapshot-id": {
          "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
          "type": "string"
        }, 
        "snapshot-name": {
          "description": "Snapshot name", 
          "type": "string"
        }, 
        "snapshot-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "snapshot-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "snapshot-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot-id"
      ]
    }, 
    "snapshots": {
      "description": "Collection of openstack snapshots\n", 
      "properties": {
        "snapshot": {
          "items": {
            "$ref": "#/patchDefinitions/snapshot"
          }, 
          "type": "array"
        }
      }
    }, 
    "software-version": {
      "description": "Software Version\n###### Related Nodes\n- TO pnf (PARENT of software-version, software-version BelongsTo pnf, MANY2ONE)\n", 
      "properties": {
        "is-active-sw-ver": {
          "description": "used to indicate whether or not this software-version is the active one (activeSw = true)", 
          "type": "boolean"
        }, 
        "software-version-id": {
          "description": "Identifier of the software version", 
          "type": "string"
        }
      }, 
      "required": [
        "software-version-id", 
        "is-active-sw-ver"
      ]
    }, 
    "software-versions": {
      "description": "Collection of software versions.\n", 
      "properties": {
        "software-version": {
          "items": {
            "$ref": "#/patchDefinitions/software-version"
          }, 
          "type": "array"
        }
      }
    }, 
    "sp-partner": {
      "description": "Instance of an sp-partner\n###### Related Nodes\n- TO service-instance( sp-partner PartOf service-instance, ONE2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "callsource": {
          "description": "Store the callsource of this sp-partner.", 
          "type": "string"
        }, 
        "sp-partner-id": {
          "description": "Uniquely identifies this sp-partner by id", 
          "type": "string"
        }, 
        "url": {
          "description": "Store the URL of this sp-partner.", 
          "type": "string"
        }
      }, 
      "required": [
        "sp-partner-id"
      ]
    }, 
    "sp-partners": {
      "description": "Collection of sp-partners\n", 
      "properties": {
        "sp-partner": {
          "items": {
            "$ref": "#/patchDefinitions/sp-partner"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-pf": {
      "description": "SR-IOV Physical Function\n###### Related Nodes\n- TO p-interface (PARENT of sriov-pf, sriov-pf BelongsTo p-interface, ONE2ONE)(4)\n- FROM sriov-vf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-PF is DELETED also\n", 
      "properties": {
        "pf-pci-id": {
          "description": "Identifier for the sriov-pf", 
          "type": "string"
        }
      }, 
      "required": [
        "pf-pci-id"
      ]
    }, 
    "sriov-pfs": {
      "description": "Collection of SR-IOV Physical Functions.\n", 
      "properties": {
        "sriov-pf": {
          "items": {
            "$ref": "#/patchDefinitions/sriov-pf"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-vf": {
      "description": "SR-IOV Virtual Function (not to be confused with virtual network function)\n###### Related Nodes\n- TO l-interface (PARENT of sriov-vf, sriov-vf BelongsTo l-interface, ONE2ONE)(4)\n- TO sriov-pf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-VF is DELETED also\n", 
      "properties": {
        "pci-id": {
          "description": "PCI ID used to identify the sriov-vf", 
          "type": "string"
        }, 
        "vf-broadcast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows all broadcast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-insert-stag": {
          "description": "This option, if set to true, instructs to insert outer tag after traffic comes out of VM.", 
          "type": "boolean"
        }, 
        "vf-link-status": {
          "description": "This option is used to set the link status.  Valid values as of 1607 are on, off, and auto.", 
          "type": "string"
        }, 
        "vf-mac-anti-spoof-check": {
          "description": "This option ensures anti MAC spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-mac-filter": {
          "description": "When MAC filters are specified, VF-agent service configures VFs to do MAC level filtering before the traffic is passed to VM.", 
          "type": "string"
        }, 
        "vf-mirrors": {
          "description": "This option defines the set of Mirror objects which essentially mirrors the traffic from source to set of collector VNF Ports.", 
          "type": "string"
        }, 
        "vf-unknown-multicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown multicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-unknown-unicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown unicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-vlan-anti-spoof-check": {
          "description": "This option ensures anti VLAN spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-vlan-filter": {
          "description": "This metadata provides option to specify list of VLAN filters applied on VF to pass the traffic to VM.", 
          "type": "string"
        }, 
        "vf-vlan-strip": {
          "description": "When this field is set to true, VF will configured to strip the outer TAG before the traffic is passed to VM.", 
          "type": "boolean"
        }
      }, 
      "required": [
        "pci-id"
      ]
    }, 
    "sriov-vfs": {
      "description": "Collection of SR-IOV Virtual Functions.\n", 
      "properties": {
        "sriov-vf": {
          "items": {
            "$ref": "#/patchDefinitions/sriov-vf"
          }, 
          "type": "array"
        }
      }
    }, 
    "start-node-filter": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "subnet": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of subnet, subnet BelongsTo l3-network, MANY2ONE)(4)\n- FROM host-route (CHILD of subnet, host-route BelongsTo subnet, MANY2ONE)(1)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n\n-(1) IF this SUBNET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SUBNET is DELETED also\n-SUBNET cannot be deleted if related to L3-INTERFACE-IPV4-ADDRESS-LIST,L3-INTERFACE-IPV6-ADDRESS-LIST,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST\n", 
      "properties": {
        "cidr-mask": {
          "description": "cidr mask", 
          "type": "string"
        }, 
        "dhcp-enabled": {
          "description": "dhcp enabled", 
          "type": "boolean"
        }, 
        "dhcp-end": {
          "description": "the last address reserved for use by dhcp", 
          "type": "string"
        }, 
        "dhcp-start": {
          "description": "the start address reserved for use by dhcp", 
          "type": "string"
        }, 
        "gateway-address": {
          "description": "gateway ip address", 
          "type": "string"
        }, 
        "ip-assignment-direction": {
          "description": "ip address assignment direction of the subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "network start address", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of this subnet", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "subnet-id": {
          "description": "Subnet ID, should be UUID.", 
          "type": "string"
        }, 
        "subnet-name": {
          "description": "Name associated with the subnet.", 
          "type": "string"
        }, 
        "subnet-role": {
          "description": "role of the subnet, referenced when assigning IPs", 
          "type": "string"
        }
      }, 
      "required": [
        "subnet-id", 
        "dhcp-enabled"
      ]
    }, 
    "subnets": {
      "properties": {
        "subnet": {
          "items": {
            "$ref": "#/patchDefinitions/subnet"
          }, 
          "type": "array"
        }
      }
    }, 
    "tagged-inventory-item-list": {
      "properties": {
        "inventory-item": {
          "items": {
            "$ref": "#/patchDefinitions/inventory-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "tenant": {
      "description": "Openstack tenant\n###### Related Nodes\n- TO cloud-region (PARENT of tenant, tenant BelongsTo cloud-region, MANY2ONE)\n- TO group-assignment( tenant MemberOf group-assignment, MANY2MANY)\n- TO l3-network( tenant Uses l3-network, MANY2MANY)\n- TO volume-group( tenant DependsOn volume-group, ONE2MANY)\n- FROM generic-vnf( generic-vnf BelongsTo tenant, MANY2ONE)\n- FROM nos-server (CHILD of tenant, nos-server BelongsTo tenant, MANY2ONE)\n- FROM sdwan-vpn( sdwan-vpn PartOf tenant, ONE2MANY)\nFor CCVPN Usecase\n- FROM service-subscription( service-subscription Uses tenant, MANY2MANY)\n- FROM vserver (CHILD of tenant, vserver BelongsTo tenant, MANY2ONE)\n\n-TENANT cannot be deleted if related to NOS-SERVER,VSERVER\n", 
      "properties": {
        "tenant-context": {
          "description": "This field will store the tenant context.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Unique id relative to the cloud-region.", 
          "type": "string"
        }, 
        "tenant-name": {
          "description": "Readable name of tenant", 
          "type": "string"
        }
      }, 
      "required": [
        "tenant-id", 
        "tenant-name"
      ]
    }, 
    "tenants": {
      "description": "Collection of openstack tenants.\n", 
      "properties": {
        "tenant": {
          "items": {
            "$ref": "#/patchDefinitions/tenant"
          }, 
          "type": "array"
        }
      }
    }, 
    "tunnel-xconnect": {
      "description": "Represents the specifics of a tunnel cross connect piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource (PARENT of tunnel-xconnect, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this TUNNEL-XCONNECT is DELETED also\n", 
      "properties": {
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "tunnel-xconnects": {
      "description": "This object is used to store the specific tunnel cross connect aspects of an allotted resource\n", 
      "properties": {
        "tunnel-xconnect": {
          "items": {
            "$ref": "#/patchDefinitions/tunnel-xconnect"
          }, 
          "type": "array"
        }
      }
    }, 
    "update": {
      "description": "Serves a PATCH like function.  Does not enforce concurrency control.  Clear each usage with AAI team.\n", 
      "properties": {
        "action": {
          "items": {
            "$ref": "#/patchDefinitions/action"
          }, 
          "type": "array"
        }, 
        "update-node-key": {
          "items": {
            "$ref": "#/patchDefinitions/update-node-key"
          }, 
          "type": "array"
        }, 
        "update-node-type": {
          "type": "string"
        }, 
        "update-node-uri": {
          "type": "string"
        }
      }, 
      "required": [
        "update-node-type"
      ]
    }, 
    "update-node-key": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "vce": {
      "description": "Virtual Customer Edge Router, used specifically for Gamma.  This object is deprecated.\n###### Related Nodes\n- TO availability-zone( vce Uses availability-zone, MANY2MANY)\n- TO complex( vce LocatedIn complex, MANY2MANY)\n- TO vserver( vce HostedOn vserver, ONE2MANY)\n- FROM entitlement (CHILD of vce, entitlement BelongsTo vce, MANY2ONE)(1)\n- FROM license (CHILD of vce, license BelongsTo vce, MANY2ONE)(1)\n- FROM port-group (CHILD of vce, port-group BelongsTo vce, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vce, ONE2MANY)\n\n-(1) IF this VCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-role": {
          "description": "Network role being played by this VNF", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure vce, also used for troubleshooting and is IP used for traps generated by VCE.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not strictly map to ASDC services, SOON TO BE DEPRECATED.", 
          "type": "string"
        }, 
        "v6-vce-wan-address": {
          "description": "Valid v6 IP address for the WAN Link on this router.  Implied length of /64.", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "vpe-id": {
          "description": "Unique ID of VPE connected to this VCE.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "vces": {
      "description": "Collection of Virtual Customer Edge Routers, used specifically for Gamma.  This object is deprecated.\n", 
      "properties": {
        "vce": {
          "items": {
            "$ref": "#/patchDefinitions/vce"
          }, 
          "type": "array"
        }
      }
    }, 
    "vf-module": {
      "description": "a deployment unit of VNFCs\n###### Related Nodes\n- TO generic-vnf (PARENT of vf-module, vf-module BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l3-network( vf-module DependsOn l3-network, MANY2MANY)\n- TO vnfc( vf-module Uses vnfc, ONE2MANY)(2)\n- TO volume-group( vf-module Uses volume-group, ONE2ONE)\n- TO vserver( vf-module Uses vserver, ONE2MANY)\n\n-(2) IF this VF-MODULE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VF-MODULE is DELETED also\n", 
      "properties": {
        "automated-assignment": {
          "description": "Indicates whether vf-module assignment was done via automation or manually", 
          "type": "boolean"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance.", 
          "type": "string"
        }, 
        "is-base-vf-module": {
          "description": "used to indicate whether or not this object is base vf module", 
          "type": "boolean"
        }, 
        "orchestration-status": {
          "description": "orchestration status of this vf-module, mastered by MSO", 
          "type": "string"
        }, 
        "vf-module-id": {
          "description": "Unique ID of vf-module.", 
          "type": "string"
        }, 
        "vf-module-name": {
          "description": "Name of vf-module", 
          "type": "string"
        }
      }, 
      "required": [
        "vf-module-id", 
        "is-base-vf-module", 
        "automated-assignment"
      ]
    }, 
    "vf-modules": {
      "description": "Collection of vf-modules, a deployment unit of VNFCs\n", 
      "properties": {
        "vf-module": {
          "items": {
            "$ref": "#/patchDefinitions/vf-module"
          }, 
          "type": "array"
        }
      }
    }, 
    "vig-server": {
      "description": "vig-server contains information about a vig server used for IPSec-configuration. Populated by SDN-C from 1607\n###### Related Nodes\n- TO ipsec-configuration (PARENT of vig-server, vig-server BelongsTo ipsec-configuration, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VIG-SERVER is DELETED also\n", 
      "properties": {
        "ipaddress-v4-vig": {
          "description": "v4 IP of the vig server", 
          "type": "string"
        }, 
        "ipaddress-v6-vig": {
          "description": "v6 IP of the vig server", 
          "type": "string"
        }, 
        "vig-address-type": {
          "description": "indicates whether the VIG is for AVPN or INTERNET", 
          "type": "string"
        }
      }, 
      "required": [
        "vig-address-type"
      ]
    }, 
    "vig-servers": {
      "properties": {
        "vig-server": {
          "items": {
            "$ref": "#/patchDefinitions/vig-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "vip-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv4-address-list, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- TO cp( vip-ipv4-address-list Uses cp, MANY2MANY)\n- TO instance-group( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "vip-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv4-address"
      ]
    }, 
    "vip-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv6-address-list, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- TO cp( vip-ipv6-address-list Uses cp, MANY2MANY)\n- TO instance-group( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "vip-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv6-address"
      ]
    }, 
    "virtual-data-center": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n###### Related Nodes\n- FROM connector( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM generic-vnf( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- FROM logical-link( logical-link LocatedIn virtual-data-center, MANY2MANY)\n", 
      "properties": {
        "vdc-id": {
          "description": "Unique ID of the vdc", 
          "type": "string"
        }, 
        "vdc-name": {
          "description": "Name of the virtual data center", 
          "type": "string"
        }
      }, 
      "required": [
        "vdc-id", 
        "vdc-name"
      ]
    }, 
    "virtual-data-centers": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n", 
      "properties": {
        "virtual-data-center": {
          "items": {
            "$ref": "#/patchDefinitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan": {
      "description": "Definition of vlan\n###### Related Nodes\n- TO l-interface (PARENT of vlan, vlan LinksTo l-interface, MANY2ONE)(4)\n- TO logical-link( vlan Uses logical-link, MANY2MANY)(2)\n- TO multicast-configuration( vlan Uses multicast-configuration, MANY2MANY)\n- FROM allotted-resource( allotted-resource PartOf vlan, MANY2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of vlan, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vlan, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vlan, ONE2MANY)\n\n-(1) IF this VLAN node is deleted, this FROM node is DELETED also\n-(2) IF this VLAN node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VLAN is DELETED also\n", 
      "properties": {
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-interface": {
          "description": "String that identifies the interface", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-interface", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "vlan-mapping": {
      "description": "vlan-mapping object is an optional child object of the forwarder-evc object.  A given forwarder-evc object may have multiple vlan-mapping objects.\n###### Related Nodes\n- TO forwarder-evc (PARENT of vlan-mapping, vlan-mapping BelongsTo forwarder-evc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VLAN-MAPPING is DELETED also\n", 
      "properties": {
        "ivlan": {
          "description": "The internal VLAN ('IVLAN') value.  Specific to Arista devices.", 
          "type": "string"
        }, 
        "nni-cvlan": {
          "description": "CVLAN value from the NNI/egress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "nni-svlan": {
          "description": "SVLAN value from the NNI/egress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "uni-cvlan": {
          "description": "CVLAN value from the UNI/ingress side of the SAREA gateway access device.", 
          "type": "string"
        }, 
        "vlan-mapping-id": {
          "description": "Key for vlan-mapping object.", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-mapping-id"
      ]
    }, 
    "vlan-mappings": {
      "description": "Collection of vlan mappings.\n", 
      "properties": {
        "vlan-mapping": {
          "items": {
            "$ref": "#/patchDefinitions/vlan-mapping"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan-tag": {
      "description": "###### Related Nodes\n- TO cloud-region( vlan-tag BelongsTo cloud-region, MANY2ONE)\n- TO cp( vlan-tag Uses cp, MANY2MANY)\n- TO l3-network( vlan-tag BelongsTo l3-network, MANY2MANY)\n", 
      "properties": {
        "is-private": {
          "description": "is VLAN private?", 
          "type": "boolean"
        }, 
        "vlan-id-inner": {
          "description": "VLAN inner id", 
          "format": "int32", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "VLAN outer id", 
          "format": "int32", 
          "type": "integer"
        }, 
        "vlan-tag-id": {
          "description": "Unique ID of the vlan-tag", 
          "type": "string"
        }, 
        "vlan-tag-role": {
          "description": "purpose (l3-network to be connected to)", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-tag-id", 
        "vlan-tag-role", 
        "vlan-id-outer", 
        "is-private"
      ]
    }, 
    "vlan-tags": {
      "properties": {
        "vlan-tag": {
          "items": {
            "$ref": "#/patchDefinitions/vlan-tag"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlans": {
      "properties": {
        "vlan": {
          "items": {
            "$ref": "#/patchDefinitions/vlan"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnf": {
      "description": "Abstract vnf class\n", 
      "properties": {
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id"
      ]
    }, 
    "vnf-image": {
      "description": "Image object that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses vnf-image, MANY2ONE)\n\n-VNF-IMAGE cannot be deleted if related to GENERIC-VNF\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "vnf-image-uuid": {
          "description": "Unique ID of this asset", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-image-uuid", 
        "application", 
        "application-vendor"
      ]
    }, 
    "vnf-images": {
      "description": "Collection of image objects that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n", 
      "properties": {
        "vnf-image": {
          "items": {
            "$ref": "#/patchDefinitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnfc": {
      "description": "###### Related Nodes\n- TO cp (PARENT of vnfc, vnfc BelongsTo cp, ONE2MANY)\ncp is child of vnfc(2)\n- TO generic-vnf( vnfc BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( vnfc MemberOf instance-group, MANY2MANY)\n- TO vip-ipv4-address-list( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n- TO vip-ipv6-address-list( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n- TO vserver( vnfc HostedOn vserver, ONE2MANY)\n- FROM configuration( configuration Uses vnfc, ONE2ONE)(1)\n- FROM l3-interface-ipv4-address-list (CHILD of vnfc, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vnfc, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM vf-module( vf-module Uses vnfc, ONE2MANY)(3)\n\n-(1) IF this VNFC node is deleted, this FROM node is DELETED also\n-(2) IF this VNFC node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this VNFC is DELETED also\n-(4) IF this TO node is deleted, this VNFC is DELETED also\n", 
      "properties": {
        "group-notation": {
          "description": "Group notation of VNFC", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "ipaddress-v4-oam-vip": {
          "description": "Oam V4 vip address of this vnfc", 
          "type": "string"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "nfc-function": {
          "description": "English description of function that the specific resource deployment is providing. Assigned as part of the customization of a resource in a service", 
          "type": "string"
        }, 
        "nfc-naming-code": {
          "description": "Short code that is used in naming instances of the item being modeled", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by APP-C", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "prov status of this vnfc", 
          "type": "string"
        }, 
        "vnfc-name": {
          "description": "Unique ID of vnfc.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfc-name", 
        "nfc-naming-code", 
        "nfc-function", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vnfcs": {
      "description": "virtual network components associated with a vserver from application controller.\n", 
      "properties": {
        "vnfc": {
          "items": {
            "$ref": "#/patchDefinitions/vnfc"
          }, 
          "type": "array"
        }
      }
    }, 
    "volume": {
      "description": "Ephemeral Block storage volume.\n###### Related Nodes\n- FROM vserver (PARENT of volume, vserver AttachesTo volume, ONE2MANY)(3)\n\n-(3) IF this FROM node is deleted, this VOLUME is DELETED also\n", 
      "properties": {
        "volume-id": {
          "description": "Unique ID of block storage volume relative to the vserver.", 
          "type": "string"
        }, 
        "volume-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-id", 
        "volume-selflink"
      ]
    }, 
    "volume-group": {
      "description": "Persistent block-level storage.\n###### Related Nodes\n- TO cloud-region (PARENT of volume-group, volume-group BelongsTo cloud-region, MANY2ONE)\n- TO complex( volume-group LocatedIn complex, MANY2ONE)\n- FROM generic-vnf( generic-vnf DependsOn volume-group, ONE2MANY)\n- FROM tenant( tenant DependsOn volume-group, ONE2MANY)\n- FROM vf-module( vf-module Uses volume-group, ONE2ONE)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this volume-group", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this volume-group", 
          "type": "string"
        }, 
        "vf-module-model-customization-id": {
          "description": "helps relate the volume group to the vf-module whose components will require the volume group", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "volume-group-id": {
          "description": "Unique ID of volume-group.", 
          "type": "string"
        }, 
        "volume-group-name": {
          "description": "Name of the volume group.", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-group-id", 
        "vnf-type"
      ]
    }, 
    "volume-groups": {
      "description": "Collection of persistent block-level storage.\n", 
      "properties": {
        "volume-group": {
          "items": {
            "$ref": "#/patchDefinitions/volume-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "volumes": {
      "description": "Collection of ephemeral Block storage volumes.\n", 
      "properties": {
        "volume": {
          "items": {
            "$ref": "#/patchDefinitions/volume"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpls-pe": {
      "description": "VPLS Provider Edge routers.\n###### Related Nodes\n- TO complex( vpls-pe LocatedIn complex, MANY2ONE)\n- TO ctag-pool( vpls-pe Uses ctag-pool, MANY2MANY)\n- FROM lag-interface (CHILD of vpls-pe, lag-interface BindsTo vpls-pe, MANY2ONE)(1)\n- FROM p-interface (CHILD of vpls-pe, p-interface BindsTo vpls-pe, MANY2ONE)(1)\n\n-(1) IF this VPLS-PE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-name": {
          "type": "string"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value, e.g., VPLS-PE.", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for stag to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "equipment-name"
      ]
    }, 
    "vpls-pes": {
      "description": "Collection of VPLS Provider Edge routers\n", 
      "properties": {
        "vpls-pe": {
          "items": {
            "$ref": "#/patchDefinitions/vpls-pe"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpn-binding": {
      "description": "VPN binding\n###### Related Nodes\n- TO customer( vpn-binding Uses customer, MANY2MANY)\n- TO ext-aai-network( vpn-binding BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO p-interface( vpn-binding BindsTo p-interface, ONE2MANY)\nFor CCVPN Usecase\n- FROM allotted-resource( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses vpn-binding, MANY2ONE)\n- FROM connectivity( connectivity PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM l3-network( l3-network Uses vpn-binding, MANY2MANY)\n- FROM logical-link( logical-link Uses vpn-binding, MANY2MANY)\n- FROM network-resource( network-resource Uses vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM route-target (CHILD of vpn-binding, route-target BelongsTo vpn-binding, MANY2ONE)(1)\n- FROM sdwan-vpn( sdwan-vpn PartOf vpn-binding, ONE2MANY)\nFor CCVPN Usecase\n- FROM vrf( vrf AppliesTo vpn-binding, MANY2ONE)\nA vrf uses a vpn-binding.\n\n-(1) IF this VPN-BINDING node is deleted, this FROM node is DELETED also\n-VPN-BINDING cannot be deleted if related to ALLOTTED-RESOURCE,L3-NETWORK,LOGICAL-LINK\n", 
      "properties": {
        "access-client-id": {
          "description": "Store the id of the access client of this vpn.", 
          "type": "string"
        }, 
        "access-provider-id": {
          "description": "Store the id of the access provider of this vpn.", 
          "type": "string"
        }, 
        "access-topology-id": {
          "description": "Store the id of the access topology of this vpn.", 
          "type": "string"
        }, 
        "customer-vpn-id": {
          "description": "id for this customer vpn", 
          "type": "string"
        }, 
        "dst-access-ltp-id": {
          "description": "Store the id of the dst-access-ltp of this vpn.", 
          "type": "string"
        }, 
        "dst-access-node-id": {
          "description": "Store the id of the dst-access-node of this vpn.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "route-distinguisher": {
          "description": "Used to distinguish the distinct VPN routes of separate customers who connect to the provider in an MPLS network.", 
          "type": "string"
        }, 
        "src-access-ltp-id": {
          "description": "Store the id of the src-access-ltp of this vpn.", 
          "type": "string"
        }, 
        "src-access-node-id": {
          "description": "Store the id of the src-access-node of this vpn.", 
          "type": "string"
        }, 
        "vpn-id": {
          "description": "VPN ID, globally unique within A&AI", 
          "type": "string"
        }, 
        "vpn-name": {
          "description": "VPN Name", 
          "type": "string"
        }, 
        "vpn-platform": {
          "description": "the platform associated with the VPN example AVPN, Mobility", 
          "type": "string"
        }, 
        "vpn-region": {
          "description": "region of customer vpn", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Type of the vpn, should be taken from enumerated/valid values", 
          "type": "string"
        }
      }, 
      "required": [
        "vpn-id", 
        "vpn-name"
      ]
    }, 
    "vpn-bindings": {
      "properties": {
        "vpn-binding": {
          "items": {
            "$ref": "#/patchDefinitions/vpn-binding"
          }, 
          "type": "array"
        }
      }
    }, 
    "vrf": {
      "description": "Definition of vrf\n###### Related Nodes\n- TO l-interface( vrf Uses l-interface, ONE2MANY)\n- TO l3-network( vrf Uses l3-network, ONE2MANY)\nA vrf uses many l3-networks\n- TO pnf (PARENT of vrf, vrf BelongsTo pnf, MANY2ONE)\nA vrf belongs to a pnf.(4)\n- TO vpn-binding( vrf AppliesTo vpn-binding, MANY2ONE)\nA vrf uses a vpn-binding.\n- FROM configuration( configuration Uses vrf, ONE2MANY)\nA Configuration uses VRFs\n- FROM route-target (CHILD of vrf, route-target BelongsTo vrf, MANY2ONE)(1)\n\n-(1) IF this VRF node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this VRF is DELETED also\n", 
      "properties": {
        "route-distinguisher": {
          "description": "Route Distinguisher", 
          "type": "string"
        }, 
        "vrf-address-family": {
          "description": "IP address family (v6/v4/both)", 
          "type": "string"
        }, 
        "vrf-description": {
          "description": "VRF Description", 
          "type": "string"
        }, 
        "vrf-id": {
          "description": "VRF UUID.", 
          "type": "string"
        }, 
        "vrf-name": {
          "description": "VRF Name", 
          "type": "string"
        }, 
        "vrf-type": {
          "description": "The type of vrf (bridge-domain as an example)", 
          "type": "string"
        }
      }, 
      "required": [
        "vrf-id", 
        "vrf-name"
      ]
    }, 
    "vrfs": {
      "properties": {
        "vrf": {
          "items": {
            "$ref": "#/patchDefinitions/vrf"
          }, 
          "type": "array"
        }
      }
    }, 
    "vserver": {
      "description": "Virtual Servers, aka virtual machine or VM.\n###### Related Nodes\n- TO flavor( vserver Uses flavor, MANY2ONE)\n- TO image( vserver Uses image, MANY2ONE)\n- TO pserver( vserver HostedOn pserver, MANY2ONE)\n- TO snapshot( vserver Uses snapshot, ONE2ONE)\n- TO tenant (PARENT of vserver, vserver BelongsTo tenant, MANY2ONE)\n- TO volume (PARENT of vserver, vserver AttachesTo volume, ONE2MANY)(2)\n- FROM generic-vnf( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM l-interface (CHILD of vserver, l-interface BindsTo vserver, MANY2ONE)(1)\n- FROM vce( vce HostedOn vserver, ONE2MANY)\n- FROM vf-module( vf-module Uses vserver, ONE2MANY)\n- FROM vnfc( vnfc HostedOn vserver, ONE2MANY)\n\n-(1) IF this VSERVER node is deleted, this FROM node is DELETED also\n-(2) IF this VSERVER node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "is-closed-loop-disabled": {
          "description": "Used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "vserver-id": {
          "description": "Unique identifier for this vserver relative to its tenant", 
          "type": "string"
        }, 
        "vserver-name": {
          "description": "Name of vserver", 
          "type": "string"
        }, 
        "vserver-name2": {
          "description": "Alternative name of vserver", 
          "type": "string"
        }, 
        "vserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "vserver-id", 
        "vserver-name", 
        "vserver-selflink", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vservers": {
      "description": "Collection of virtual Servers, aka virtual machines or VMs.\n", 
      "properties": {
        "vserver": {
          "items": {
            "$ref": "#/patchDefinitions/vserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "wan-port-config": {
      "description": "Instance of a wan-port-config\n###### Related Nodes\n- TO ext-aai-network( wan-port-config BelongsTo ext-aai-network, MANY2MANY)\nFor CCVPN Usecase\n- TO service-instance( wan-port-config PartOf service-instance, MANY2MANY)\nFor CCVPN Usecase\n", 
      "properties": {
        "description": {
          "description": "Store the description of this wan-port-config.", 
          "type": "string"
        }, 
        "device-id": {
          "description": "Store the id of the device of this wan-port-config.", 
          "type": "string"
        }, 
        "device-port-id": {
          "description": "Store the device-port-id of this wan-port-config.", 
          "type": "string"
        }, 
        "input-bandwidth": {
          "description": "Store the input-bandwidth of this wan-port-config.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "Store the ip-address of this wan-port-config.", 
          "type": "string"
        }, 
        "ipv4-address": {
          "description": "Store the ipv4-address of this wan-port-config.", 
          "type": "string"
        }, 
        "ipv6-address": {
          "description": "Store the ipv6-address of this wan-port-config.", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "Store the model-customization-id for this object.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Store the operational-status for this object.", 
          "type": "string"
        }, 
        "output-bandwidth": {
          "description": "Store the output-bandwidth of this wan-port-config.", 
          "type": "string"
        }, 
        "port-number": {
          "description": "Store the port-number of this wan-port-config.", 
          "type": "string"
        }, 
        "port-type": {
          "description": "Store the port-type of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ip-address": {
          "description": "Store the provider-ip-address of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ipv4-address": {
          "description": "Store the provider-ipv4-address of this wan-port-config.", 
          "type": "string"
        }, 
        "provider-ipv6-address": {
          "description": "Store the provider-ipv6-address of this wan-port-config.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Store the link to get more information for this object.", 
          "type": "string"
        }, 
        "transport-network-name": {
          "description": "Store the transport-network-name of this wan-port-config.", 
          "type": "string"
        }, 
        "vlan-id": {
          "description": "Store the id of the vlan of this wan-port-config.", 
          "type": "string"
        }, 
        "wan-port-config-id": {
          "description": "Uniquely identifies this wan-port-config by id", 
          "type": "string"
        }, 
        "wan-port-config-name": {
          "description": "Store the name of this wan-port-config.", 
          "type": "string"
        }, 
        "wan-port-id": {
          "description": "Store the wan-port-id of this wan-port-config.", 
          "type": "string"
        }
      }, 
      "required": [
        "wan-port-config-id"
      ]
    }, 
    "wan-port-configs": {
      "description": "Collection of wan-port-configs\n", 
      "properties": {
        "wan-port-config": {
          "items": {
            "$ref": "#/patchDefinitions/wan-port-config"
          }, 
          "type": "array"
        }
      }
    }, 
    "zone": {
      "description": "A zone is a grouping of assets in a location homing to the same connections into the CBB\n###### Related Nodes\n- TO complex( zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn zone, MANY2ONE)\n- FROM pnf( pnf LocatedIn zone, MANY2ONE)\n- FROM pserver( pserver LocatedIn zone, MANY2ONE)\n- FROM service-instance( service-instance LocatedIn zone, MANY2ONE)\n", 
      "properties": {
        "design-type": {
          "description": "Design of zone [Medium/Large\u2026]", 
          "type": "string"
        }, 
        "status": {
          "description": "Status of a zone.", 
          "type": "string"
        }, 
        "zone-context": {
          "description": "Context of zone [production/test]", 
          "type": "string"
        }, 
        "zone-id": {
          "description": "Code assigned by AIC to the zone", 
          "type": "string"
        }, 
        "zone-name": {
          "description": "English name associated with the zone", 
          "type": "string"
        }
      }, 
      "required": [
        "zone-id", 
        "zone-name", 
        "design-type", 
        "zone-context"
      ]
    }, 
    "zones": {
      "description": "Collection of zones\n", 
      "properties": {
        "zone": {
          "items": {
            "$ref": "#/patchDefinitions/zone"
          }, 
          "type": "array"
        }
      }
    }
  }, 
  "paths": {
    "/business/connectors": {
      "get": {
        "description": "returns connectors", 
        "operationId": "getBusinessConnectors", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-instance-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/connectors"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns connectors", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/connectors/connector/{resource-instance-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing connector", 
        "operationId": "deleteBusinessConnectorsConnector", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing connector", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns connector", 
        "operationId": "getBusinessConnectorsConnector", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/connector"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns connector", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing connector\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessConnectorsConnector", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "connector object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/connector"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing connector", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing connector.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessConnectorsConnector", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "connector object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessConnectorsConnector.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/connector"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing connector", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/connectors/connector/{resource-instance-id}/metadata": {
      "get": {
        "description": "returns metadata", 
        "operationId": "getBusinessConnectorsConnectorMetadata", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "metaname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadata"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadata", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/connectors/connector/{resource-instance-id}/metadata/metadatum/{metaname}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing metadatum", 
        "operationId": "deleteBusinessConnectorsConnectorMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing metadatum", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns metadatum", 
        "operationId": "getBusinessConnectorsConnectorMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadatum"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadatum", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing metadatum\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessConnectorsConnectorMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing metadatum", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing metadatum.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessConnectorsConnectorMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessConnectorsConnectorMetadataMetadatum.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing metadatum", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/connectors/connector/{resource-instance-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessConnectorsConnectorRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessConnectorsConnectorRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessConnectorsConnector.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers": {
      "get": {
        "description": "returns customers", 
        "operationId": "getBusinessCustomers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "global-customer-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subscriber-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subscriber-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/customers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns customers", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing customer", 
        "operationId": "deleteBusinessCustomersCustomer", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing customer", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns customer", 
        "operationId": "getBusinessCustomersCustomer", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/customer"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns customer", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing customer\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessCustomersCustomer", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "customer object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/customer"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing customer", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing customer.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessCustomersCustomer", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "customer object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing customer", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessCustomersCustomerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessCustomersCustomerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions": {
      "get": {
        "description": "returns service-subscriptions", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptions", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service-subscriptions"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-subscriptions", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing service-subscription", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscription", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing service-subscription", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns service-subscription", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscription", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service-subscription"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-subscription", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing service-subscription\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscription", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service-subscription object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/service-subscription"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing service-subscription", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing service-subscription.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscription", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service-subscription object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscription.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/service-subscription"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing service-subscription", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscription.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances": {
      "get": {
        "description": "returns service-instances", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstances", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-instance-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-instance-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "environment-context", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "workload-context", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-instance-location-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "orchestration-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service-instances"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-instances", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing service-instance", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing service-instance", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns service-instance", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service-instance"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-instance", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing service-instance\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service-instance object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/service-instance"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing service-instance", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing service-instance.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service-instance object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/service-instance"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing service-instance", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/allotted-resources": {
      "get": {
        "description": "returns allotted-resources", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResources", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "role", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "allotted-resource-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-provider-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-client-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-topology-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-node-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-ltp-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/allotted-resources"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns allotted-resources", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/allotted-resources/allotted-resource/{id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing allotted-resource", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing allotted-resource", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns allotted-resource", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/allotted-resource"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns allotted-resource", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing allotted-resource\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "allotted-resource object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/allotted-resource"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing allotted-resource", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing allotted-resource.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "allotted-resource object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/allotted-resource"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing allotted-resource", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/allotted-resources/allotted-resource/{id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/allotted-resources/allotted-resource/{id}/tunnel-xconnects": {
      "get": {
        "description": "returns tunnel-xconnects", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnects", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/tunnel-xconnects"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tunnel-xconnects", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/allotted-resources/allotted-resource/{id}/tunnel-xconnects/tunnel-xconnect/{id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing tunnel-xconnect", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing tunnel-xconnect", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns tunnel-xconnect", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/tunnel-xconnect"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tunnel-xconnect", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing tunnel-xconnect\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "tunnel-xconnect object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/tunnel-xconnect"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing tunnel-xconnect", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing tunnel-xconnect.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "tunnel-xconnect object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/tunnel-xconnect"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing tunnel-xconnect", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/allotted-resources/allotted-resource/{id}/tunnel-xconnects/tunnel-xconnect/{id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnectRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnectRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/metadata": {
      "get": {
        "description": "returns metadata", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceMetadata", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "metaname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadata"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadata", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/metadata/metadatum/{metaname}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing metadatum", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceMetadataMetadatum", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing metadatum", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns metadatum", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceMetadataMetadatum", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadatum"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadatum", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing metadatum\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceMetadataMetadatum", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing metadatum", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing metadatum.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceMetadataMetadatum", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceMetadataMetadatum.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing metadatum", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/customers/customer/{global-customer-id}/service-subscriptions/service-subscription/{service-type}/service-instances/service-instance/{service-instance-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/lines-of-business": {
      "get": {
        "description": "returns lines-of-business", 
        "operationId": "getBusinessLinesOfBusiness", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "line-of-business-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lines-of-business"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lines-of-business", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/lines-of-business/line-of-business/{line-of-business-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing line-of-business", 
        "operationId": "deleteBusinessLinesOfBusinessLineOfBusiness", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing line-of-business", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns line-of-business", 
        "operationId": "getBusinessLinesOfBusinessLineOfBusiness", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/line-of-business"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns line-of-business", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing line-of-business\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessLinesOfBusinessLineOfBusiness", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "line-of-business object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/line-of-business"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing line-of-business", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing line-of-business.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessLinesOfBusinessLineOfBusiness", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "line-of-business object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessLinesOfBusinessLineOfBusiness.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/line-of-business"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing line-of-business", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/lines-of-business/line-of-business/{line-of-business-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessLinesOfBusinessLineOfBusinessRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessLinesOfBusinessLineOfBusinessRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessLinesOfBusinessLineOfBusiness.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/owning-entities": {
      "get": {
        "description": "returns owning-entities", 
        "operationId": "getBusinessOwningEntities", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "owning-entity-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "owning-entity-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/owning-entities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns owning-entities", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/owning-entities/owning-entity/{owning-entity-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing owning-entity", 
        "operationId": "deleteBusinessOwningEntitiesOwningEntity", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing owning-entity", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns owning-entity", 
        "operationId": "getBusinessOwningEntitiesOwningEntity", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/owning-entity"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns owning-entity", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing owning-entity\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessOwningEntitiesOwningEntity", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "owning-entity object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/owning-entity"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing owning-entity", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing owning-entity.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessOwningEntitiesOwningEntity", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "owning-entity object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessOwningEntitiesOwningEntity.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/owning-entity"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing owning-entity", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/owning-entities/owning-entity/{owning-entity-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessOwningEntitiesOwningEntityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessOwningEntitiesOwningEntityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessOwningEntitiesOwningEntity.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/platforms": {
      "get": {
        "description": "returns platforms", 
        "operationId": "getBusinessPlatforms", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "platform-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/platforms"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns platforms", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/platforms/platform/{platform-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing platform", 
        "operationId": "deleteBusinessPlatformsPlatform", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing platform", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns platform", 
        "operationId": "getBusinessPlatformsPlatform", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/platform"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns platform", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing platform\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessPlatformsPlatform", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "platform object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/platform"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing platform", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing platform.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessPlatformsPlatform", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "platform object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessPlatformsPlatform.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/platform"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing platform", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/platforms/platform/{platform-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessPlatformsPlatformRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessPlatformsPlatformRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessPlatformsPlatform.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/projects": {
      "get": {
        "description": "returns projects", 
        "operationId": "getBusinessProjects", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "project-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/projects"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns projects", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/projects/project/{project-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing project", 
        "operationId": "deleteBusinessProjectsProject", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing project", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns project", 
        "operationId": "getBusinessProjectsProject", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/project"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns project", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing project\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessProjectsProject", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "project object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/project"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing project", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing project.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessProjectsProject", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "project object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessProjectsProject.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/project"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing project", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/projects/project/{project-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessProjectsProjectRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessProjectsProjectRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessProjectsProject.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/sp-partners": {
      "get": {
        "description": "returns sp-partners", 
        "operationId": "getBusinessSpPartners", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "sp-partner-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "url", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "callsource", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sp-partners"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sp-partners", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/sp-partners/sp-partner/{sp-partner-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sp-partner", 
        "operationId": "deleteBusinessSpPartnersSpPartner", 
        "parameters": [
          {
            "description": "Uniquely identifies this sp-partner by id", 
            "example": "__SP-PARTNER-ID__", 
            "in": "path", 
            "name": "sp-partner-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sp-partner", 
        "tags": [
          "Business"
        ]
      }, 
      "get": {
        "description": "returns sp-partner", 
        "operationId": "getBusinessSpPartnersSpPartner", 
        "parameters": [
          {
            "description": "Uniquely identifies this sp-partner by id", 
            "example": "__SP-PARTNER-ID__", 
            "in": "path", 
            "name": "sp-partner-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sp-partner"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sp-partner", 
        "tags": [
          "Business"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sp-partner\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateBusinessSpPartnersSpPartner", 
        "parameters": [
          {
            "description": "Uniquely identifies this sp-partner by id", 
            "example": "__SP-PARTNER-ID__", 
            "in": "path", 
            "name": "sp-partner-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sp-partner object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sp-partner"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sp-partner", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sp-partner.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateBusinessSpPartnersSpPartner", 
        "parameters": [
          {
            "description": "Uniquely identifies this sp-partner by id", 
            "example": "__SP-PARTNER-ID__", 
            "in": "path", 
            "name": "sp-partner-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sp-partner object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessSpPartnersSpPartner.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sp-partner"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sp-partner", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/business/sp-partners/sp-partner/{sp-partner-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteBusinessSpPartnersSpPartnerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this sp-partner by id", 
            "example": "__SP-PARTNER-ID__", 
            "in": "path", 
            "name": "sp-partner-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Business"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateBusinessSpPartnersSpPartnerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this sp-partner by id", 
            "example": "__SP-PARTNER-ID__", 
            "in": "path", 
            "name": "sp-partner-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/BusinessSpPartnersSpPartner.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Business"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions": {
      "get": {
        "description": "returns cloud-regions", 
        "operationId": "getCloudInfrastructureCloudRegions", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cloud-owner", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cloud-region-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cloud-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "owner-defined-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/cloud-regions"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cloud-regions", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing cloud-region", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegion", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing cloud-region", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns cloud-region", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegion", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/cloud-region"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cloud-region", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing cloud-region\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegion", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "cloud-region object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/cloud-region"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing cloud-region", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing cloud-region.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegion", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "cloud-region object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegion.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/cloud-region"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing cloud-region", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/availability-zones": {
      "get": {
        "description": "returns availability-zones", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionAvailabilityZones", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "availability-zone-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/availability-zones"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns availability-zones", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/availability-zones/availability-zone/{availability-zone-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing availability-zone", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing availability-zone", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns availability-zone", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/availability-zone"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns availability-zone", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing availability-zone\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "availability-zone object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/availability-zone"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing availability-zone", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing availability-zone.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "availability-zone object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/availability-zone"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing availability-zone", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/availability-zones/availability-zone/{availability-zone-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZoneRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZoneRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/dvs-switches": {
      "get": {
        "description": "returns dvs-switches", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionDvsSwitches", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "switch-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vcenter-url", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/dvs-switches"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns dvs-switches", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/dvs-switches/dvs-switch/{switch-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing dvs-switch", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing dvs-switch", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns dvs-switch", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/dvs-switch"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns dvs-switch", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing dvs-switch\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "dvs-switch object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/dvs-switch"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing dvs-switch", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing dvs-switch.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "dvs-switch object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/dvs-switch"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing dvs-switch", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/dvs-switches/dvs-switch/{switch-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitchRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitchRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/esr-system-info-list": {
      "get": {
        "description": "returns esr-system-info-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "esr-system-info-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-system-info", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-system-info", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns esr-system-info", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-system-info\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-system-info", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-system-info.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-system-info", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors": {
      "get": {
        "description": "returns flavors", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavors", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "flavor-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "flavor-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/flavors"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns flavors", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing flavor", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing flavor", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns flavor", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/flavor"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns flavor", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing flavor\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "flavor object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/flavor"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing flavor", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing flavor.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "flavor object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/flavor"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing flavor", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}/hpa-capabilities": {
      "get": {
        "description": "returns hpa-capabilities", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilities", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "hpa-capability-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "hpa-feature", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "architecture", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-capabilities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-capabilities", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing hpa-capability", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns hpa-capability", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-capability"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing hpa-capability\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-capability object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/hpa-capability"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing hpa-capability.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-capability object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapability.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/hpa-capability"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}/hpa-feature-attributes/{hpa-attribute-key}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing hpa-feature-attributes", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns hpa-feature-attributes", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-feature-attributes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing hpa-feature-attributes\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-feature-attributes object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/hpa-feature-attributes"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing hpa-feature-attributes.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-feature-attributes object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributes.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/hpa-feature-attributes"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}/hpa-feature-attributes/{hpa-attribute-key}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributesRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributesRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityHpaFeatureAttributes.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapabilityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorHpaCapabilitiesHpaCapability.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/flavors/flavor/{flavor-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavorRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/group-assignments": {
      "get": {
        "description": "returns group-assignments", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionGroupAssignments", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/group-assignments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns group-assignments", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/group-assignments/group-assignment/{group-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing group-assignment", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing group-assignment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns group-assignment", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/group-assignment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns group-assignment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing group-assignment\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "group-assignment object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/group-assignment"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing group-assignment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing group-assignment.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "group-assignment object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/group-assignment"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing group-assignment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/group-assignments/group-assignment/{group-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/hpa-capabilities": {
      "get": {
        "description": "returns hpa-capabilities", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionHpaCapabilities", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "hpa-capability-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "hpa-feature", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "architecture", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-capabilities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-capabilities", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing hpa-capability", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns hpa-capability", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-capability"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing hpa-capability\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-capability object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/hpa-capability"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing hpa-capability.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapability", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-capability object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapability.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/hpa-capability"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing hpa-capability", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}/hpa-feature-attributes/{hpa-attribute-key}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing hpa-feature-attributes", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns hpa-feature-attributes", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-feature-attributes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing hpa-feature-attributes\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-feature-attributes object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/hpa-feature-attributes"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing hpa-feature-attributes.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-feature-attributes object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributes.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/hpa-feature-attributes"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing hpa-feature-attributes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}/hpa-feature-attributes/{hpa-attribute-key}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributesRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributesRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name of the specific HPA attribute", 
            "example": "__HPA-ATTRIBUTE-KEY__", 
            "in": "path", 
            "name": "hpa-attribute-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityHpaFeatureAttributes.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/hpa-capabilities/hpa-capability/{hpa-capability-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapabilityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID to uniquely identify a HPA capability", 
            "example": "__HPA-CAPABILITY-ID__", 
            "in": "path", 
            "name": "hpa-capability-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionHpaCapabilitiesHpaCapability.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/images": {
      "get": {
        "description": "returns images", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImages", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "image-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "image-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/images"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns images", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/images/image/{image-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing image", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionImagesImage", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing image", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns image", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImagesImage", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/image"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns image", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing image\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionImagesImage", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "image object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/image"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing image", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing image.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionImagesImage", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "image object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionImagesImage.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/image"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing image", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/images/image/{image-id}/metadata": {
      "get": {
        "description": "returns metadata", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadata", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "metaname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadata"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadata", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/images/image/{image-id}/metadata/metadatum/{metaname}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing metadatum", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadataMetadatum", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing metadatum", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns metadatum", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadataMetadatum", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadatum"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadatum", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing metadatum\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadataMetadatum", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing metadatum", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing metadatum.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadataMetadatum", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionImagesImageMetadataMetadatum.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing metadatum", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/images/image/{image-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionImagesImageRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionImagesImageRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionImagesImage.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/oam-networks": {
      "get": {
        "description": "returns oam-networks", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionOamNetworks", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "cvlan-tag", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/oam-networks"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns oam-networks", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/oam-networks/oam-network/{network-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing oam-network", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing oam-network", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns oam-network", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/oam-network"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns oam-network", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing oam-network\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "oam-network object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/oam-network"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing oam-network", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing oam-network.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "oam-network object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/oam-network"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing oam-network", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/oam-networks/oam-network/{network-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetworkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetworkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegion.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/snapshots": {
      "get": {
        "description": "returns snapshots", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionSnapshots", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "snapshot-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "snapshot-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prev-snapshot-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/snapshots"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns snapshots", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/snapshots/snapshot/{snapshot-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing snapshot", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing snapshot", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns snapshot", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/snapshot"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns snapshot", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing snapshot\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "snapshot object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/snapshot"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing snapshot", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing snapshot.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "snapshot object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing snapshot", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/snapshots/snapshot/{snapshot-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshotRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshotRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants": {
      "get": {
        "description": "returns tenants", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenants", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "tenant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "tenant-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "tenant-context", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/tenants"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tenants", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing tenant", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenant", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing tenant", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns tenant", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenant", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/tenant"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tenant", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing tenant\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenant", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "tenant object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/tenant"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing tenant", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing tenant.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenant", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "tenant object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenant.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/tenant"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing tenant", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/nos-servers": {
      "get": {
        "description": "returns nos-servers", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServers", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nos-server-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/nos-servers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns nos-servers", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/nos-servers/nos-server/{nos-server-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing nos-server", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServer", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this nos relative to its tenant", 
            "example": "__NOS-SERVER-ID__", 
            "in": "path", 
            "name": "nos-server-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing nos-server", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns nos-server", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServer", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this nos relative to its tenant", 
            "example": "__NOS-SERVER-ID__", 
            "in": "path", 
            "name": "nos-server-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/nos-server"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns nos-server", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing nos-server\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServer", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this nos relative to its tenant", 
            "example": "__NOS-SERVER-ID__", 
            "in": "path", 
            "name": "nos-server-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "nos-server object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/nos-server"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing nos-server", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing nos-server.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServer", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this nos relative to its tenant", 
            "example": "__NOS-SERVER-ID__", 
            "in": "path", 
            "name": "nos-server-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "nos-server object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/nos-server"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing nos-server", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/nos-servers/nos-server/{nos-server-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this nos relative to its tenant", 
            "example": "__NOS-SERVER-ID__", 
            "in": "path", 
            "name": "nos-server-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this nos relative to its tenant", 
            "example": "__NOS-SERVER-ID__", 
            "in": "path", 
            "name": "nos-server-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantNosServersNosServer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenant.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers": {
      "get": {
        "description": "returns vservers", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVservers", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vserver-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vserver-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vserver-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "is-closed-loop-disabled", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vservers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vservers", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vserver", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns vserver", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vserver"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vserver\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vserver object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vserver"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vserver.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vserver object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vserver"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfaces", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/volumes": {
      "get": {
        "description": "returns volumes", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumes", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "volume-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/volumes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volumes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/volumes/volume/{volume-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing volume", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing volume", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns volume", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/volume"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volume", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing volume\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "volume object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/volume"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing volume", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing volume.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "volume object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/volume"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing volume", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/tenants/tenant/{tenant-id}/vservers/vserver/{vserver-id}/volumes/volume/{volume-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolumeRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolumeRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/vip-ipv4-address-list/{vip-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vip-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vip-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns vip-ipv4-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vip-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vip-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vip-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vip-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vip-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vip-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vip-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vip-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vip-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vip-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/vip-ipv4-address-list/{vip-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/vip-ipv6-address-list/{vip-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vip-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vip-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns vip-ipv6-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vip-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vip-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vip-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vip-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vip-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vip-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vip-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vip-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vip-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vip-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/vip-ipv6-address-list/{vip-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/volume-groups": {
      "get": {
        "description": "returns volume-groups", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVolumeGroups", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "volume-group-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "volume-group-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/volume-groups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volume-groups", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/volume-groups/volume-group/{volume-group-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing volume-group", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing volume-group", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns volume-group", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/volume-group"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volume-group", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing volume-group\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "volume-group object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/volume-group"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing volume-group", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing volume-group.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "volume-group object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/volume-group"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing volume-group", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}/volume-groups/volume-group/{volume-group-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroupRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroupRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/complexes": {
      "get": {
        "description": "returns complexes", 
        "operationId": "getCloudInfrastructureComplexes", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "physical-location-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "data-center-code", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "complex-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "identity-url", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/complexes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns complexes", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/complexes/complex/{physical-location-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing complex", 
        "operationId": "deleteCloudInfrastructureComplexesComplex", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing complex", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns complex", 
        "operationId": "getCloudInfrastructureComplexesComplex", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/complex"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns complex", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing complex\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureComplexesComplex", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "complex object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/complex"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing complex", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing complex.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureComplexesComplex", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "complex object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureComplexesComplex.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/complex"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing complex", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/complexes/complex/{physical-location-id}/ctag-pools": {
      "get": {
        "description": "returns ctag-pools", 
        "operationId": "getCloudInfrastructureComplexesComplexCtagPools", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "availability-zone-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ctag-pools"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-pools", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/complexes/complex/{physical-location-id}/ctag-pools/ctag-pool/{target-pe}/{availability-zone-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing ctag-pool", 
        "operationId": "deleteCloudInfrastructureComplexesComplexCtagPoolsCtagPool", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing ctag-pool", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns ctag-pool", 
        "operationId": "getCloudInfrastructureComplexesComplexCtagPoolsCtagPool", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ctag-pool"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-pool", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing ctag-pool\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureComplexesComplexCtagPoolsCtagPool", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ctag-pool object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/ctag-pool"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing ctag-pool", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing ctag-pool.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureComplexesComplexCtagPoolsCtagPool", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ctag-pool object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureComplexesComplexCtagPoolsCtagPool.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/ctag-pool"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing ctag-pool", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/complexes/complex/{physical-location-id}/ctag-pools/ctag-pool/{target-pe}/{availability-zone-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureComplexesComplexCtagPoolsCtagPoolRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureComplexesComplexCtagPoolsCtagPoolRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureComplexesComplexCtagPoolsCtagPool.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/complexes/complex/{physical-location-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureComplexesComplexRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureComplexesComplexRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureComplexesComplex.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/network-profiles": {
      "get": {
        "description": "returns network-profiles", 
        "operationId": "getCloudInfrastructureNetworkProfiles", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nm-profile-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-profiles"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-profiles", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/network-profiles/network-profile/{nm-profile-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing network-profile", 
        "operationId": "deleteCloudInfrastructureNetworkProfilesNetworkProfile", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing network-profile", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns network-profile", 
        "operationId": "getCloudInfrastructureNetworkProfilesNetworkProfile", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-profile"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-profile", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing network-profile\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureNetworkProfilesNetworkProfile", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-profile object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/network-profile"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing network-profile", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing network-profile.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureNetworkProfilesNetworkProfile", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-profile object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureNetworkProfilesNetworkProfile.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/network-profile"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing network-profile", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/network-profiles/network-profile/{nm-profile-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureNetworkProfilesNetworkProfileRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureNetworkProfilesNetworkProfileRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureNetworkProfilesNetworkProfile.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/network-technologies": {
      "get": {
        "description": "returns network-technologies", 
        "operationId": "getCloudInfrastructureNetworkTechnologies", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-technologies"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-technologies", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/network-technologies/network-technology/{network-technology-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing network-technology", 
        "operationId": "deleteCloudInfrastructureNetworkTechnologiesNetworkTechnology", 
        "parameters": [
          {
            "description": "Unique identifier of the network-technology object (UUID)", 
            "example": "__NETWORK-TECHNOLOGY-ID__", 
            "in": "path", 
            "name": "network-technology-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing network-technology", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns network-technology", 
        "operationId": "getCloudInfrastructureNetworkTechnologiesNetworkTechnology", 
        "parameters": [
          {
            "description": "Unique identifier of the network-technology object (UUID)", 
            "example": "__NETWORK-TECHNOLOGY-ID__", 
            "in": "path", 
            "name": "network-technology-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-technology"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-technology", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing network-technology\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureNetworkTechnologiesNetworkTechnology", 
        "parameters": [
          {
            "description": "Unique identifier of the network-technology object (UUID)", 
            "example": "__NETWORK-TECHNOLOGY-ID__", 
            "in": "path", 
            "name": "network-technology-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-technology object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/network-technology"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing network-technology", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing network-technology.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureNetworkTechnologiesNetworkTechnology", 
        "parameters": [
          {
            "description": "Unique identifier of the network-technology object (UUID)", 
            "example": "__NETWORK-TECHNOLOGY-ID__", 
            "in": "path", 
            "name": "network-technology-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-technology object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureNetworkTechnologiesNetworkTechnology.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/network-technology"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing network-technology", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/network-technologies/network-technology/{network-technology-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureNetworkTechnologiesNetworkTechnologyRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier of the network-technology object (UUID)", 
            "example": "__NETWORK-TECHNOLOGY-ID__", 
            "in": "path", 
            "name": "network-technology-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureNetworkTechnologiesNetworkTechnologyRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier of the network-technology object (UUID)", 
            "example": "__NETWORK-TECHNOLOGY-ID__", 
            "in": "path", 
            "name": "network-technology-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureNetworkTechnologiesNetworkTechnology.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/operational-environments": {
      "get": {
        "description": "returns operational-environments", 
        "operationId": "getCloudInfrastructureOperationalEnvironments", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-environment-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/operational-environments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns operational-environments", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/operational-environments/operational-environment/{operational-environment-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing operational-environment", 
        "operationId": "deleteCloudInfrastructureOperationalEnvironmentsOperationalEnvironment", 
        "parameters": [
          {
            "description": "UUID of an operational environment", 
            "example": "__OPERATIONAL-ENVIRONMENT-ID__", 
            "in": "path", 
            "name": "operational-environment-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing operational-environment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns operational-environment", 
        "operationId": "getCloudInfrastructureOperationalEnvironmentsOperationalEnvironment", 
        "parameters": [
          {
            "description": "UUID of an operational environment", 
            "example": "__OPERATIONAL-ENVIRONMENT-ID__", 
            "in": "path", 
            "name": "operational-environment-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/operational-environment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns operational-environment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing operational-environment\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureOperationalEnvironmentsOperationalEnvironment", 
        "parameters": [
          {
            "description": "UUID of an operational environment", 
            "example": "__OPERATIONAL-ENVIRONMENT-ID__", 
            "in": "path", 
            "name": "operational-environment-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "operational-environment object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/operational-environment"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing operational-environment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing operational-environment.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureOperationalEnvironmentsOperationalEnvironment", 
        "parameters": [
          {
            "description": "UUID of an operational environment", 
            "example": "__OPERATIONAL-ENVIRONMENT-ID__", 
            "in": "path", 
            "name": "operational-environment-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "operational-environment object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureOperationalEnvironmentsOperationalEnvironment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/operational-environment"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing operational-environment", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/operational-environments/operational-environment/{operational-environment-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureOperationalEnvironmentsOperationalEnvironmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of an operational environment", 
            "example": "__OPERATIONAL-ENVIRONMENT-ID__", 
            "in": "path", 
            "name": "operational-environment-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureOperationalEnvironmentsOperationalEnvironmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of an operational environment", 
            "example": "__OPERATIONAL-ENVIRONMENT-ID__", 
            "in": "path", 
            "name": "operational-environment-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureOperationalEnvironmentsOperationalEnvironment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers": {
      "get": {
        "description": "returns pservers", 
        "operationId": "getCloudInfrastructurePservers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "hostname", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "inv-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pserver-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pserver-name2", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/pservers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pservers", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing pserver", 
        "operationId": "deleteCloudInfrastructurePserversPserver", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing pserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns pserver", 
        "operationId": "getCloudInfrastructurePserversPserver", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/pserver"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing pserver\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserver", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "pserver object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/pserver"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing pserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing pserver.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserver", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "pserver object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserver.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/pserver"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing pserver", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/hpa-capacity/{hpa-capacity-key}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing hpa-capacity", 
        "operationId": "deleteCloudInfrastructurePserversPserverHpaCapacity", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
            "example": "__HPA-CAPACITY-KEY__", 
            "in": "path", 
            "name": "hpa-capacity-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing hpa-capacity", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns hpa-capacity", 
        "operationId": "getCloudInfrastructurePserversPserverHpaCapacity", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
            "example": "__HPA-CAPACITY-KEY__", 
            "in": "path", 
            "name": "hpa-capacity-key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/hpa-capacity"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns hpa-capacity", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing hpa-capacity\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverHpaCapacity", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
            "example": "__HPA-CAPACITY-KEY__", 
            "in": "path", 
            "name": "hpa-capacity-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-capacity object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/hpa-capacity"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing hpa-capacity", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing hpa-capacity.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverHpaCapacity", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
            "example": "__HPA-CAPACITY-KEY__", 
            "in": "path", 
            "name": "hpa-capacity-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "hpa-capacity object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverHpaCapacity.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/hpa-capacity"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing hpa-capacity", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/hpa-capacity/{hpa-capacity-key}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverHpaCapacityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
            "example": "__HPA-CAPACITY-KEY__", 
            "in": "path", 
            "name": "hpa-capacity-key", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverHpaCapacityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Composite key formed with hpaFeature and append list of hpaFeatureAttributes needed for capacity check", 
            "example": "__HPA-CAPACITY-KEY__", 
            "in": "path", 
            "name": "hpa-capacity-key", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverHpaCapacity.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces": {
      "get": {
        "description": "returns lag-interfaces", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfaces", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-role", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interfaces", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing lag-interface", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing lag-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns lag-interface", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing lag-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing lag-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing lag-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing lag-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfaces", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/lag-interfaces/lag-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces": {
      "get": {
        "description": "returns p-interfaces", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfaces", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/p-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interfaces", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing p-interface", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing p-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns p-interface", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/p-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing p-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "p-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/p-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing p-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing p-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "p-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/p-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing p-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfaces", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/sriov-pfs": {
      "get": {
        "description": "returns sriov-pfs", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfs", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pf-pci-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-pfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pfs", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/sriov-pfs/sriov-pf/{pf-pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-pf", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-pf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns sriov-pf", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-pf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-pf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-pf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-pf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-pf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-pf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-pf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-pf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-pf", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/p-interfaces/p-interface/{interface-name}/sriov-pfs/sriov-pf/{pf-pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/pservers/pserver/{hostname}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructurePserversPserverRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructurePserversPserverRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructurePserversPserver.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/virtual-data-centers": {
      "get": {
        "description": "returns virtual-data-centers", 
        "operationId": "getCloudInfrastructureVirtualDataCenters", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vdc-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vdc-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/virtual-data-centers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns virtual-data-centers", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/virtual-data-centers/virtual-data-center/{vdc-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing virtual-data-center", 
        "operationId": "deleteCloudInfrastructureVirtualDataCentersVirtualDataCenter", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing virtual-data-center", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "get": {
        "description": "returns virtual-data-center", 
        "operationId": "getCloudInfrastructureVirtualDataCentersVirtualDataCenter", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/virtual-data-center"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns virtual-data-center", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing virtual-data-center\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCloudInfrastructureVirtualDataCentersVirtualDataCenter", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "virtual-data-center object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/virtual-data-center"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing virtual-data-center", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing virtual-data-center.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCloudInfrastructureVirtualDataCentersVirtualDataCenter", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "virtual-data-center object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureVirtualDataCentersVirtualDataCenter.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/virtual-data-center"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing virtual-data-center", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/cloud-infrastructure/virtual-data-centers/virtual-data-center/{vdc-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCloudInfrastructureVirtualDataCentersVirtualDataCenterRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "CloudInfrastructure"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCloudInfrastructureVirtualDataCentersVirtualDataCenterRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CloudInfrastructureVirtualDataCentersVirtualDataCenter.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "CloudInfrastructure"
        ]
      }
    }, 
    "/common/contacts": {
      "get": {
        "description": "returns contacts", 
        "operationId": "getCommonContacts", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/contacts"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns contacts", 
        "tags": [
          "Common"
        ]
      }
    }, 
    "/common/contacts/contact/{contact-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing contact", 
        "operationId": "deleteCommonContactsContact", 
        "parameters": [
          {
            "description": "Name of the contact", 
            "example": "__CONTACT-NAME__", 
            "in": "path", 
            "name": "contact-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing contact", 
        "tags": [
          "Common"
        ]
      }, 
      "get": {
        "description": "returns contact", 
        "operationId": "getCommonContactsContact", 
        "parameters": [
          {
            "description": "Name of the contact", 
            "example": "__CONTACT-NAME__", 
            "in": "path", 
            "name": "contact-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/contact"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns contact", 
        "tags": [
          "Common"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing contact\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateCommonContactsContact", 
        "parameters": [
          {
            "description": "Name of the contact", 
            "example": "__CONTACT-NAME__", 
            "in": "path", 
            "name": "contact-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "contact object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/contact"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing contact", 
        "tags": [
          "Common"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing contact.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateCommonContactsContact", 
        "parameters": [
          {
            "description": "Name of the contact", 
            "example": "__CONTACT-NAME__", 
            "in": "path", 
            "name": "contact-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "contact object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CommonContactsContact.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/contact"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing contact", 
        "tags": [
          "Common"
        ]
      }
    }, 
    "/common/contacts/contact/{contact-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteCommonContactsContactRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the contact", 
            "example": "__CONTACT-NAME__", 
            "in": "path", 
            "name": "contact-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Common"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateCommonContactsContactRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Name of the contact", 
            "example": "__CONTACT-NAME__", 
            "in": "path", 
            "name": "contact-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/CommonContactsContact.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Common"
        ]
      }
    }, 
    "/external-system/esr-ems-list": {
      "get": {
        "description": "returns esr-ems-list", 
        "operationId": "getExternalSystemEsrEmsList", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ems-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-ems-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-ems-list", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-ems-list/esr-ems/{ems-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-ems", 
        "operationId": "deleteExternalSystemEsrEmsListEsrEms", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-ems", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "get": {
        "description": "returns esr-ems", 
        "operationId": "getExternalSystemEsrEmsListEsrEms", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-ems"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-ems", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-ems\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateExternalSystemEsrEmsListEsrEms", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-ems object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-ems"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-ems", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-ems.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateExternalSystemEsrEmsListEsrEms", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-ems object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrEmsListEsrEms.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-ems"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-ems", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-ems-list/esr-ems/{ems-id}/esr-system-info-list": {
      "get": {
        "description": "returns esr-system-info-list", 
        "operationId": "getExternalSystemEsrEmsListEsrEmsEsrSystemInfoList", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "esr-system-info-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info-list", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-ems-list/esr-ems/{ems-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-system-info", 
        "operationId": "deleteExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "get": {
        "description": "returns esr-system-info", 
        "operationId": "getExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-system-info\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-system-info.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-ems-list/esr-ems/{ems-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrEmsListEsrEmsEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-ems-list/esr-ems/{ems-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteExternalSystemEsrEmsListEsrEmsRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateExternalSystemEsrEmsListEsrEmsRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrEmsListEsrEms.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-thirdparty-sdnc-list": {
      "get": {
        "description": "returns esr-thirdparty-sdnc-list", 
        "operationId": "getExternalSystemEsrThirdpartySdncList", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-thirdparty-sdnc-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-thirdparty-sdnc-list", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-thirdparty-sdnc-list/esr-thirdparty-sdnc/{thirdparty-sdnc-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-thirdparty-sdnc", 
        "operationId": "deleteExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-thirdparty-sdnc", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "get": {
        "description": "returns esr-thirdparty-sdnc", 
        "operationId": "getExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-thirdparty-sdnc"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-thirdparty-sdnc", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-thirdparty-sdnc\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-thirdparty-sdnc object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-thirdparty-sdnc"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-thirdparty-sdnc", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-thirdparty-sdnc.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-thirdparty-sdnc object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-thirdparty-sdnc"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-thirdparty-sdnc", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-thirdparty-sdnc-list/esr-thirdparty-sdnc/{thirdparty-sdnc-id}/esr-system-info-list": {
      "get": {
        "description": "returns esr-system-info-list", 
        "operationId": "getExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoList", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "esr-system-info-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info-list", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-thirdparty-sdnc-list/esr-thirdparty-sdnc/{thirdparty-sdnc-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-system-info", 
        "operationId": "deleteExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "get": {
        "description": "returns esr-system-info", 
        "operationId": "getExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-system-info\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-system-info.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-thirdparty-sdnc-list/esr-thirdparty-sdnc/{thirdparty-sdnc-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrThirdpartySdncListEsrThirdpartySdncEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-thirdparty-sdnc-list/esr-thirdparty-sdnc/{thirdparty-sdnc-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteExternalSystemEsrThirdpartySdncListEsrThirdpartySdncRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateExternalSystemEsrThirdpartySdncListEsrThirdpartySdncRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-vnfm-list": {
      "get": {
        "description": "returns esr-vnfm-list", 
        "operationId": "getExternalSystemEsrVnfmList", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnfm-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-vnfm-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-vnfm-list", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-vnfm-list/esr-vnfm/{vnfm-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-vnfm", 
        "operationId": "deleteExternalSystemEsrVnfmListEsrVnfm", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-vnfm", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "get": {
        "description": "returns esr-vnfm", 
        "operationId": "getExternalSystemEsrVnfmListEsrVnfm", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-vnfm"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-vnfm", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-vnfm\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateExternalSystemEsrVnfmListEsrVnfm", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-vnfm object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-vnfm"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-vnfm", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-vnfm.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateExternalSystemEsrVnfmListEsrVnfm", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-vnfm object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrVnfmListEsrVnfm.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-vnfm"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-vnfm", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-vnfm-list/esr-vnfm/{vnfm-id}/esr-system-info-list": {
      "get": {
        "description": "returns esr-system-info-list", 
        "operationId": "getExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoList", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "esr-system-info-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info-list", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-vnfm-list/esr-vnfm/{vnfm-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-system-info", 
        "operationId": "deleteExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "get": {
        "description": "returns esr-system-info", 
        "operationId": "getExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-system-info\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-system-info.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-system-info", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-vnfm-list/esr-vnfm/{vnfm-id}/esr-system-info-list/esr-system-info/{esr-system-info-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrVnfmListEsrVnfmEsrSystemInfoListEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/external-system/esr-vnfm-list/esr-vnfm/{vnfm-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteExternalSystemEsrVnfmListEsrVnfmRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ExternalSystem"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateExternalSystemEsrVnfmListEsrVnfmRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ExternalSystemEsrVnfmListEsrVnfm.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ExternalSystem"
        ]
      }
    }, 
    "/network/collections": {
      "get": {
        "description": "returns collections", 
        "operationId": "getNetworkCollections", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "collection-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/collections"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns collections", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/collections/collection/{collection-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing collection", 
        "operationId": "deleteNetworkCollectionsCollection", 
        "parameters": [
          {
            "description": "Collection Object UUID", 
            "example": "__COLLECTION-ID__", 
            "in": "path", 
            "name": "collection-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing collection", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns collection", 
        "operationId": "getNetworkCollectionsCollection", 
        "parameters": [
          {
            "description": "Collection Object UUID", 
            "example": "__COLLECTION-ID__", 
            "in": "path", 
            "name": "collection-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/collection"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns collection", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing collection\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkCollectionsCollection", 
        "parameters": [
          {
            "description": "Collection Object UUID", 
            "example": "__COLLECTION-ID__", 
            "in": "path", 
            "name": "collection-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "collection object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/collection"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing collection", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing collection.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkCollectionsCollection", 
        "parameters": [
          {
            "description": "Collection Object UUID", 
            "example": "__COLLECTION-ID__", 
            "in": "path", 
            "name": "collection-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "collection object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkCollectionsCollection.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/collection"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing collection", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/collections/collection/{collection-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkCollectionsCollectionRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Collection Object UUID", 
            "example": "__COLLECTION-ID__", 
            "in": "path", 
            "name": "collection-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkCollectionsCollectionRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Collection Object UUID", 
            "example": "__COLLECTION-ID__", 
            "in": "path", 
            "name": "collection-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkCollectionsCollection.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations": {
      "get": {
        "description": "returns configurations", 
        "operationId": "getNetworkConfigurations", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "configuration-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/configurations"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns configurations", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing configuration", 
        "operationId": "deleteNetworkConfigurationsConfiguration", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns configuration", 
        "operationId": "getNetworkConfigurationsConfiguration", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/configuration"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing configuration\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkConfigurationsConfiguration", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "configuration object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/configuration"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing configuration.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkConfigurationsConfiguration", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "configuration object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfiguration.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/configuration"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing configuration", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/evcs": {
      "get": {
        "description": "returns evcs", 
        "operationId": "getNetworkConfigurationsConfigurationEvcs", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/evcs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns evcs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/evcs/evc/{evc-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing evc", 
        "operationId": "deleteNetworkConfigurationsConfigurationEvcsEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique/key field for the evc object", 
            "example": "__EVC-ID__", 
            "in": "path", 
            "name": "evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing evc", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns evc", 
        "operationId": "getNetworkConfigurationsConfigurationEvcsEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique/key field for the evc object", 
            "example": "__EVC-ID__", 
            "in": "path", 
            "name": "evc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/evc"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns evc", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing evc\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkConfigurationsConfigurationEvcsEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique/key field for the evc object", 
            "example": "__EVC-ID__", 
            "in": "path", 
            "name": "evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "evc object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/evc"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing evc", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing evc.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationEvcsEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique/key field for the evc object", 
            "example": "__EVC-ID__", 
            "in": "path", 
            "name": "evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "evc object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationEvcsEvc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/evc"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing evc", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/evcs/evc/{evc-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkConfigurationsConfigurationEvcsEvcRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique/key field for the evc object", 
            "example": "__EVC-ID__", 
            "in": "path", 
            "name": "evc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationEvcsEvcRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique/key field for the evc object", 
            "example": "__EVC-ID__", 
            "in": "path", 
            "name": "evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationEvcsEvc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/forwarder-evcs": {
      "get": {
        "description": "returns forwarder-evcs", 
        "operationId": "getNetworkConfigurationsConfigurationForwarderEvcs", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/forwarder-evcs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns forwarder-evcs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/forwarder-evcs/forwarder-evc/{forwarder-evc-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing forwarder-evc", 
        "operationId": "deleteNetworkConfigurationsConfigurationForwarderEvcsForwarderEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing forwarder-evc", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns forwarder-evc", 
        "operationId": "getNetworkConfigurationsConfigurationForwarderEvcsForwarderEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/forwarder-evc"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns forwarder-evc", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing forwarder-evc\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkConfigurationsConfigurationForwarderEvcsForwarderEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "forwarder-evc object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/forwarder-evc"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing forwarder-evc", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing forwarder-evc.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationForwarderEvcsForwarderEvc", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "forwarder-evc object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationForwarderEvcsForwarderEvc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/forwarder-evc"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing forwarder-evc", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/forwarder-evcs/forwarder-evc/{forwarder-evc-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationForwarderEvcsForwarderEvc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/forwarder-evcs/forwarder-evc/{forwarder-evc-id}/vlan-mappings": {
      "get": {
        "description": "returns vlan-mappings", 
        "operationId": "getNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappings", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan-mappings"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan-mappings", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/forwarder-evcs/forwarder-evc/{forwarder-evc-id}/vlan-mappings/vlan-mapping/{vlan-mapping-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan-mapping", 
        "operationId": "deleteNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMapping", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for vlan-mapping object.", 
            "example": "__VLAN-MAPPING-ID__", 
            "in": "path", 
            "name": "vlan-mapping-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan-mapping", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan-mapping", 
        "operationId": "getNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMapping", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for vlan-mapping object.", 
            "example": "__VLAN-MAPPING-ID__", 
            "in": "path", 
            "name": "vlan-mapping-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan-mapping"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan-mapping", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan-mapping\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMapping", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for vlan-mapping object.", 
            "example": "__VLAN-MAPPING-ID__", 
            "in": "path", 
            "name": "vlan-mapping-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan-mapping object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan-mapping"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan-mapping", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan-mapping.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMapping", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for vlan-mapping object.", 
            "example": "__VLAN-MAPPING-ID__", 
            "in": "path", 
            "name": "vlan-mapping-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan-mapping object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMapping.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan-mapping"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan-mapping", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/forwarder-evcs/forwarder-evc/{forwarder-evc-id}/vlan-mappings/vlan-mapping/{vlan-mapping-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMappingRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for vlan-mapping object.", 
            "example": "__VLAN-MAPPING-ID__", 
            "in": "path", 
            "name": "vlan-mapping-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMappingRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for forwarder-evc object", 
            "example": "__FORWARDER-EVC-ID__", 
            "in": "path", 
            "name": "forwarder-evc-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Key for vlan-mapping object.", 
            "example": "__VLAN-MAPPING-ID__", 
            "in": "path", 
            "name": "vlan-mapping-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationForwarderEvcsForwarderEvcVlanMappingsVlanMapping.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/metadata": {
      "get": {
        "description": "returns metadata", 
        "operationId": "getNetworkConfigurationsConfigurationMetadata", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "metaname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadata"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadata", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/metadata/metadatum/{metaname}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing metadatum", 
        "operationId": "deleteNetworkConfigurationsConfigurationMetadataMetadatum", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing metadatum", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns metadatum", 
        "operationId": "getNetworkConfigurationsConfigurationMetadataMetadatum", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadatum"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadatum", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing metadatum\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkConfigurationsConfigurationMetadataMetadatum", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing metadatum", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing metadatum.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationMetadataMetadatum", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfigurationMetadataMetadatum.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing metadatum", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/configurations/configuration/{configuration-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkConfigurationsConfigurationRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkConfigurationsConfigurationRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConfigurationsConfiguration.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/connectivities": {
      "get": {
        "description": "returns connectivities", 
        "operationId": "getNetworkConnectivities", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "connectivity-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "bandwidth-profile-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "color-aware", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "coupling-flag", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "etht-svc-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-provider-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-client-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-topology-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-node-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-ltp-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/connectivities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns connectivities", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/connectivities/connectivity/{connectivity-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing connectivity", 
        "operationId": "deleteNetworkConnectivitiesConnectivity", 
        "parameters": [
          {
            "description": "Uniquely identifies this connectivity by id", 
            "example": "__CONNECTIVITY-ID__", 
            "in": "path", 
            "name": "connectivity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing connectivity", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns connectivity", 
        "operationId": "getNetworkConnectivitiesConnectivity", 
        "parameters": [
          {
            "description": "Uniquely identifies this connectivity by id", 
            "example": "__CONNECTIVITY-ID__", 
            "in": "path", 
            "name": "connectivity-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/connectivity"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns connectivity", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing connectivity\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkConnectivitiesConnectivity", 
        "parameters": [
          {
            "description": "Uniquely identifies this connectivity by id", 
            "example": "__CONNECTIVITY-ID__", 
            "in": "path", 
            "name": "connectivity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "connectivity object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/connectivity"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing connectivity", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing connectivity.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkConnectivitiesConnectivity", 
        "parameters": [
          {
            "description": "Uniquely identifies this connectivity by id", 
            "example": "__CONNECTIVITY-ID__", 
            "in": "path", 
            "name": "connectivity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "connectivity object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConnectivitiesConnectivity.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/connectivity"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing connectivity", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/connectivities/connectivity/{connectivity-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkConnectivitiesConnectivityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this connectivity by id", 
            "example": "__CONNECTIVITY-ID__", 
            "in": "path", 
            "name": "connectivity-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkConnectivitiesConnectivityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this connectivity by id", 
            "example": "__CONNECTIVITY-ID__", 
            "in": "path", 
            "name": "connectivity-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkConnectivitiesConnectivity.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/devices": {
      "get": {
        "description": "returns devices", 
        "operationId": "getNetworkDevices", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "device-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "esn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "device-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "class", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-ip", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-ipv4", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-ipv6", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/devices"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns devices", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/devices/device/{device-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing device", 
        "operationId": "deleteNetworkDevicesDevice", 
        "parameters": [
          {
            "description": "Uniquely identifies this device by id", 
            "example": "__DEVICE-ID__", 
            "in": "path", 
            "name": "device-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing device", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns device", 
        "operationId": "getNetworkDevicesDevice", 
        "parameters": [
          {
            "description": "Uniquely identifies this device by id", 
            "example": "__DEVICE-ID__", 
            "in": "path", 
            "name": "device-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/device"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns device", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing device\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkDevicesDevice", 
        "parameters": [
          {
            "description": "Uniquely identifies this device by id", 
            "example": "__DEVICE-ID__", 
            "in": "path", 
            "name": "device-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "device object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/device"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing device", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing device.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkDevicesDevice", 
        "parameters": [
          {
            "description": "Uniquely identifies this device by id", 
            "example": "__DEVICE-ID__", 
            "in": "path", 
            "name": "device-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "device object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkDevicesDevice.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/device"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing device", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/devices/device/{device-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkDevicesDeviceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this device by id", 
            "example": "__DEVICE-ID__", 
            "in": "path", 
            "name": "device-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkDevicesDeviceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this device by id", 
            "example": "__DEVICE-ID__", 
            "in": "path", 
            "name": "device-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkDevicesDevice.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ext-aai-networks": {
      "get": {
        "description": "returns ext-aai-networks", 
        "operationId": "getNetworkExtAaiNetworks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "aai-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ext-aai-networks"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ext-aai-networks", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ext-aai-networks/ext-aai-network/{aai-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing ext-aai-network", 
        "operationId": "deleteNetworkExtAaiNetworksExtAaiNetwork", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing ext-aai-network", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns ext-aai-network", 
        "operationId": "getNetworkExtAaiNetworksExtAaiNetwork", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ext-aai-network"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ext-aai-network", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing ext-aai-network\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkExtAaiNetworksExtAaiNetwork", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ext-aai-network object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/ext-aai-network"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing ext-aai-network", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing ext-aai-network.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkExtAaiNetworksExtAaiNetwork", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ext-aai-network object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkExtAaiNetworksExtAaiNetwork.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/ext-aai-network"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing ext-aai-network", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ext-aai-networks/ext-aai-network/{aai-id}/esr-system-info/{esr-system-info-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing esr-system-info", 
        "operationId": "deleteNetworkExtAaiNetworksExtAaiNetworkEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing esr-system-info", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns esr-system-info", 
        "operationId": "getNetworkExtAaiNetworksExtAaiNetworkEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/esr-system-info"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing esr-system-info\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkExtAaiNetworksExtAaiNetworkEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing esr-system-info", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing esr-system-info.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkExtAaiNetworksExtAaiNetworkEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "esr-system-info object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkExtAaiNetworksExtAaiNetworkEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/esr-system-info"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing esr-system-info", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ext-aai-networks/ext-aai-network/{aai-id}/esr-system-info/{esr-system-info-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkExtAaiNetworksExtAaiNetworkEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkExtAaiNetworksExtAaiNetworkEsrSystemInfoRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkExtAaiNetworksExtAaiNetworkEsrSystemInfo.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ext-aai-networks/ext-aai-network/{aai-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkExtAaiNetworksExtAaiNetworkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkExtAaiNetworksExtAaiNetworkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the referenced AAI.", 
            "example": "__AAI-ID__", 
            "in": "path", 
            "name": "aai-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkExtAaiNetworksExtAaiNetwork.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/forwarding-paths": {
      "get": {
        "description": "returns forwarding-paths", 
        "operationId": "getNetworkForwardingPaths", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "forwarding-path-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "forwarding-path-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/forwarding-paths"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns forwarding-paths", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/forwarding-paths/forwarding-path/{forwarding-path-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing forwarding-path", 
        "operationId": "deleteNetworkForwardingPathsForwardingPath", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing forwarding-path", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns forwarding-path", 
        "operationId": "getNetworkForwardingPathsForwardingPath", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/forwarding-path"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns forwarding-path", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing forwarding-path\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkForwardingPathsForwardingPath", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "forwarding-path object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/forwarding-path"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing forwarding-path", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing forwarding-path.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkForwardingPathsForwardingPath", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "forwarding-path object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkForwardingPathsForwardingPath.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/forwarding-path"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing forwarding-path", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/forwarding-paths/forwarding-path/{forwarding-path-id}/forwarders": {
      "get": {
        "description": "returns forwarders", 
        "operationId": "getNetworkForwardingPathsForwardingPathForwarders", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int32", 
            "in": "query", 
            "name": "sequence", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/forwarders"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns forwarders", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/forwarding-paths/forwarding-path/{forwarding-path-id}/forwarders/forwarder/{sequence}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing forwarder", 
        "operationId": "deleteNetworkForwardingPathsForwardingPathForwardersForwarder", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of this segmentation", 
            "example": "__SEQUENCE__", 
            "format": "int32", 
            "in": "path", 
            "name": "sequence", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing forwarder", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns forwarder", 
        "operationId": "getNetworkForwardingPathsForwardingPathForwardersForwarder", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of this segmentation", 
            "example": "__SEQUENCE__", 
            "format": "int32", 
            "in": "path", 
            "name": "sequence", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/forwarder"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns forwarder", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing forwarder\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkForwardingPathsForwardingPathForwardersForwarder", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of this segmentation", 
            "example": "__SEQUENCE__", 
            "format": "int32", 
            "in": "path", 
            "name": "sequence", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "forwarder object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/forwarder"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing forwarder", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing forwarder.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkForwardingPathsForwardingPathForwardersForwarder", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of this segmentation", 
            "example": "__SEQUENCE__", 
            "format": "int32", 
            "in": "path", 
            "name": "sequence", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "forwarder object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkForwardingPathsForwardingPathForwardersForwarder.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/forwarder"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing forwarder", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/forwarding-paths/forwarding-path/{forwarding-path-id}/forwarders/forwarder/{sequence}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkForwardingPathsForwardingPathForwardersForwarderRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of this segmentation", 
            "example": "__SEQUENCE__", 
            "format": "int32", 
            "in": "path", 
            "name": "sequence", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkForwardingPathsForwardingPathForwardersForwarderRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of this segmentation", 
            "example": "__SEQUENCE__", 
            "format": "int32", 
            "in": "path", 
            "name": "sequence", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkForwardingPathsForwardingPathForwardersForwarder.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/forwarding-paths/forwarding-path/{forwarding-path-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkForwardingPathsForwardingPathRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkForwardingPathsForwardingPathRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of this FP", 
            "example": "__FORWARDING-PATH-ID__", 
            "in": "path", 
            "name": "forwarding-path-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkForwardingPathsForwardingPath.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs": {
      "get": {
        "description": "returns generic-vnfs", 
        "operationId": "getNetworkGenericVnfs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "regional-resource-zone", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "is-closed-loop-disabled", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-function", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-role", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-naming-code", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/generic-vnfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns generic-vnfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing generic-vnf", 
        "operationId": "deleteNetworkGenericVnfsGenericVnf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing generic-vnf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns generic-vnf", 
        "operationId": "getNetworkGenericVnfsGenericVnf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/generic-vnf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns generic-vnf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing generic-vnf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "generic-vnf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/generic-vnf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing generic-vnf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing generic-vnf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "generic-vnf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/generic-vnf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing generic-vnf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/entitlements": {
      "get": {
        "description": "returns entitlements", 
        "operationId": "getNetworkGenericVnfsGenericVnfEntitlements", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/entitlements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns entitlements", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/entitlements/entitlement/{group-uuid}/{resource-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing entitlement", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing entitlement", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns entitlement", 
        "operationId": "getNetworkGenericVnfsGenericVnfEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/entitlement"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns entitlement", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing entitlement\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "entitlement object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/entitlement"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing entitlement", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing entitlement.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "entitlement object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfEntitlementsEntitlement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/entitlement"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing entitlement", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/entitlements/entitlement/{group-uuid}/{resource-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfEntitlementsEntitlementRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfEntitlementsEntitlementRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfEntitlementsEntitlement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfaces", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces": {
      "get": {
        "description": "returns lag-interfaces", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfaces", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-role", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing lag-interface", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns lag-interface", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing lag-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing lag-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfaces", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/lag-interfaces/lag-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/licenses": {
      "get": {
        "description": "returns licenses", 
        "operationId": "getNetworkGenericVnfsGenericVnfLicenses", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/licenses"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns licenses", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/licenses/license/{group-uuid}/{resource-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing license", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing license", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns license", 
        "operationId": "getNetworkGenericVnfsGenericVnfLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/license"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns license", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing license\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "license object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/license"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing license", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing license.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "license object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLicensesLicense.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/license"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing license", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/licenses/license/{group-uuid}/{resource-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfLicensesLicenseRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfLicensesLicenseRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfLicensesLicense.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/vf-modules": {
      "get": {
        "description": "returns vf-modules", 
        "operationId": "getNetworkGenericVnfsGenericVnfVfModules", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-module-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-module-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "contrail-service-instance-fqdn", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vf-modules"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vf-modules", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/vf-modules/vf-module/{vf-module-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vf-module", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfVfModulesVfModule", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vf-module", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vf-module", 
        "operationId": "getNetworkGenericVnfsGenericVnfVfModulesVfModule", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vf-module"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vf-module", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vf-module\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkGenericVnfsGenericVnfVfModulesVfModule", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vf-module object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vf-module"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vf-module", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vf-module.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfVfModulesVfModule", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vf-module object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfVfModulesVfModule.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vf-module"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vf-module", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/generic-vnfs/generic-vnf/{vnf-id}/vf-modules/vf-module/{vf-module-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkGenericVnfsGenericVnfVfModulesVfModuleRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkGenericVnfsGenericVnfVfModulesVfModuleRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkGenericVnfsGenericVnfVfModulesVfModule.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/instance-groups": {
      "get": {
        "description": "returns instance-groups", 
        "operationId": "getNetworkInstanceGroups", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/instance-groups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns instance-groups", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/instance-groups/instance-group/{id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing instance-group", 
        "operationId": "deleteNetworkInstanceGroupsInstanceGroup", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing instance-group", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns instance-group", 
        "operationId": "getNetworkInstanceGroupsInstanceGroup", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/instance-group"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns instance-group", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing instance-group\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkInstanceGroupsInstanceGroup", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "instance-group object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/instance-group"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing instance-group", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing instance-group.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkInstanceGroupsInstanceGroup", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "instance-group object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkInstanceGroupsInstanceGroup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/instance-group"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing instance-group", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/instance-groups/instance-group/{id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkInstanceGroupsInstanceGroupRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkInstanceGroupsInstanceGroupRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkInstanceGroupsInstanceGroup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ipsec-configurations": {
      "get": {
        "description": "returns ipsec-configurations", 
        "operationId": "getNetworkIpsecConfigurations", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipsec-configuration-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ipsec-configurations"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ipsec-configurations", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ipsec-configurations/ipsec-configuration/{ipsec-configuration-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing ipsec-configuration", 
        "operationId": "deleteNetworkIpsecConfigurationsIpsecConfiguration", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing ipsec-configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns ipsec-configuration", 
        "operationId": "getNetworkIpsecConfigurationsIpsecConfiguration", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ipsec-configuration"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ipsec-configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing ipsec-configuration\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkIpsecConfigurationsIpsecConfiguration", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ipsec-configuration object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/ipsec-configuration"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing ipsec-configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing ipsec-configuration.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkIpsecConfigurationsIpsecConfiguration", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ipsec-configuration object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkIpsecConfigurationsIpsecConfiguration.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/ipsec-configuration"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing ipsec-configuration", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ipsec-configurations/ipsec-configuration/{ipsec-configuration-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkIpsecConfigurationsIpsecConfigurationRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkIpsecConfigurationsIpsecConfigurationRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkIpsecConfigurationsIpsecConfiguration.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ipsec-configurations/ipsec-configuration/{ipsec-configuration-id}/vig-servers": {
      "get": {
        "description": "returns vig-servers", 
        "operationId": "getNetworkIpsecConfigurationsIpsecConfigurationVigServers", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vig-address-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vig-servers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vig-servers", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ipsec-configurations/ipsec-configuration/{ipsec-configuration-id}/vig-servers/vig-server/{vig-address-type}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vig-server", 
        "operationId": "deleteNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vig-server", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vig-server", 
        "operationId": "getNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vig-server"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vig-server", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vig-server\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vig-server object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vig-server"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vig-server", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vig-server.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vig-server object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vig-server"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vig-server", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/ipsec-configurations/ipsec-configuration/{ipsec-configuration-id}/vig-servers/vig-server/{vig-address-type}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks": {
      "get": {
        "description": "returns l3-networks", 
        "operationId": "getNetworkL3Networks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-role", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "contrail-network-fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-networks"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-networks", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-network", 
        "operationId": "deleteNetworkL3NetworksL3Network", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-network", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-network", 
        "operationId": "getNetworkL3NetworksL3Network", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-network"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-network", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-network\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkL3NetworksL3Network", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-network object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-network"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-network", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-network.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkL3NetworksL3Network", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-network object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3Network.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-network"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-network", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/aggregate-routes": {
      "get": {
        "description": "returns aggregate-routes", 
        "operationId": "getNetworkL3NetworksL3NetworkAggregateRoutes", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/aggregate-routes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns aggregate-routes", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/aggregate-routes/aggregate-route/{route-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing aggregate-route", 
        "operationId": "deleteNetworkL3NetworksL3NetworkAggregateRoutesAggregateRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of the aggregate-route instance", 
            "example": "__ROUTE-ID__", 
            "in": "path", 
            "name": "route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing aggregate-route", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns aggregate-route", 
        "operationId": "getNetworkL3NetworksL3NetworkAggregateRoutesAggregateRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of the aggregate-route instance", 
            "example": "__ROUTE-ID__", 
            "in": "path", 
            "name": "route-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/aggregate-route"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns aggregate-route", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing aggregate-route\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkL3NetworksL3NetworkAggregateRoutesAggregateRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of the aggregate-route instance", 
            "example": "__ROUTE-ID__", 
            "in": "path", 
            "name": "route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "aggregate-route object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/aggregate-route"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing aggregate-route", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing aggregate-route.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkAggregateRoutesAggregateRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of the aggregate-route instance", 
            "example": "__ROUTE-ID__", 
            "in": "path", 
            "name": "route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "aggregate-route object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkAggregateRoutesAggregateRoute.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/aggregate-route"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing aggregate-route", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/aggregate-routes/aggregate-route/{route-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkL3NetworksL3NetworkAggregateRoutesAggregateRouteRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of the aggregate-route instance", 
            "example": "__ROUTE-ID__", 
            "in": "path", 
            "name": "route-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkAggregateRoutesAggregateRouteRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of the aggregate-route instance", 
            "example": "__ROUTE-ID__", 
            "in": "path", 
            "name": "route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkAggregateRoutesAggregateRoute.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/ctag-assignments": {
      "get": {
        "description": "returns ctag-assignments", 
        "operationId": "getNetworkL3NetworksL3NetworkCtagAssignments", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ctag-assignments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-assignments", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/ctag-assignments/ctag-assignment/{vlan-id-inner}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing ctag-assignment", 
        "operationId": "deleteNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing ctag-assignment", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns ctag-assignment", 
        "operationId": "getNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/ctag-assignment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-assignment", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing ctag-assignment\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "ctag-assignment object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/ctag-assignment"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing ctag-assignment", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing ctag-assignment.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "ctag-assignment object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/ctag-assignment"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing ctag-assignment", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/ctag-assignments/ctag-assignment/{vlan-id-inner}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkL3NetworksL3NetworkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3Network.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/segmentation-assignments": {
      "get": {
        "description": "returns segmentation-assignments", 
        "operationId": "getNetworkL3NetworksL3NetworkSegmentationAssignments", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "segmentation-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/segmentation-assignments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns segmentation-assignments", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/segmentation-assignments/segmentation-assignment/{segmentation-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing segmentation-assignment", 
        "operationId": "deleteNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing segmentation-assignment", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns segmentation-assignment", 
        "operationId": "getNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/segmentation-assignment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns segmentation-assignment", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing segmentation-assignment\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "segmentation-assignment object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/segmentation-assignment"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing segmentation-assignment", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing segmentation-assignment.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "segmentation-assignment object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/segmentation-assignment"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing segmentation-assignment", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/segmentation-assignments/segmentation-assignment/{segmentation-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignmentRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/subnets": {
      "get": {
        "description": "returns subnets", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnets", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subnet-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subnet-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/subnets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns subnets", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/subnets/subnet/{subnet-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing subnet", 
        "operationId": "deleteNetworkL3NetworksL3NetworkSubnetsSubnet", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing subnet", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns subnet", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnetsSubnet", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/subnet"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns subnet", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing subnet\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkL3NetworksL3NetworkSubnetsSubnet", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "subnet object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/subnet"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing subnet", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing subnet.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkSubnetsSubnet", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "subnet object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkSubnetsSubnet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/subnet"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing subnet", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/subnets/subnet/{subnet-id}/host-routes": {
      "get": {
        "description": "returns host-routes", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutes", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "host-route-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/host-routes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns host-routes", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/subnets/subnet/{subnet-id}/host-routes/host-route/{host-route-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing host-route", 
        "operationId": "deleteNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing host-route", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns host-route", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/host-route"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns host-route", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing host-route\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/host-route"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing host-route", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing host-route.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/host-route"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing host-route", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/subnets/subnet/{subnet-id}/host-routes/host-route/{host-route-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRouteRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRouteRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/l3-networks/l3-network/{network-id}/subnets/subnet/{subnet-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkL3NetworksL3NetworkSubnetsSubnetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkL3NetworksL3NetworkSubnetsSubnetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkL3NetworksL3NetworkSubnetsSubnet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lag-links": {
      "get": {
        "description": "returns lag-links", 
        "operationId": "getNetworkLagLinks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-links"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-links", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lag-links/lag-link/{link-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing lag-link", 
        "operationId": "deleteNetworkLagLinksLagLink", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing lag-link", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns lag-link", 
        "operationId": "getNetworkLagLinksLagLink", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-link"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-link", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing lag-link\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkLagLinksLagLink", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-link object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/lag-link"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing lag-link", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing lag-link.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkLagLinksLagLink", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-link object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLagLinksLagLink.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/lag-link"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing lag-link", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lag-links/lag-link/{link-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkLagLinksLagLinkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkLagLinksLagLinkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLagLinksLagLink.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lan-port-configs": {
      "get": {
        "description": "returns lan-port-configs", 
        "operationId": "getNetworkLanPortConfigs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "lan-port-config-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "lan-port-config-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "device-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "port-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipv4-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipv6-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-tag", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lan-port-configs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lan-port-configs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lan-port-configs/lan-port-config/{lan-port-config-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing lan-port-config", 
        "operationId": "deleteNetworkLanPortConfigsLanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing lan-port-config", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns lan-port-config", 
        "operationId": "getNetworkLanPortConfigsLanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lan-port-config"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lan-port-config", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing lan-port-config\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkLanPortConfigsLanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lan-port-config object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/lan-port-config"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing lan-port-config", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing lan-port-config.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkLanPortConfigsLanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lan-port-config object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLanPortConfigsLanPortConfig.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/lan-port-config"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing lan-port-config", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lan-port-configs/lan-port-config/{lan-port-config-id}/dhcp-services": {
      "get": {
        "description": "returns dhcp-services", 
        "operationId": "getNetworkLanPortConfigsLanPortConfigDhcpServices", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "dhcp-service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "server-ipv4-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "server-ipv6-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "dhcp-service-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "domain-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/dhcp-services"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns dhcp-services", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lan-port-configs/lan-port-config/{lan-port-config-id}/dhcp-services/dhcp-service/{dhcp-service-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing dhcp-service", 
        "operationId": "deleteNetworkLanPortConfigsLanPortConfigDhcpServicesDhcpService", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this dhcp-service by id", 
            "example": "__DHCP-SERVICE-ID__", 
            "in": "path", 
            "name": "dhcp-service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing dhcp-service", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns dhcp-service", 
        "operationId": "getNetworkLanPortConfigsLanPortConfigDhcpServicesDhcpService", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this dhcp-service by id", 
            "example": "__DHCP-SERVICE-ID__", 
            "in": "path", 
            "name": "dhcp-service-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/dhcp-service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns dhcp-service", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing dhcp-service\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkLanPortConfigsLanPortConfigDhcpServicesDhcpService", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this dhcp-service by id", 
            "example": "__DHCP-SERVICE-ID__", 
            "in": "path", 
            "name": "dhcp-service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "dhcp-service object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/dhcp-service"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing dhcp-service", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing dhcp-service.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkLanPortConfigsLanPortConfigDhcpServicesDhcpService", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this dhcp-service by id", 
            "example": "__DHCP-SERVICE-ID__", 
            "in": "path", 
            "name": "dhcp-service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "dhcp-service object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLanPortConfigsLanPortConfigDhcpServicesDhcpService.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/dhcp-service"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing dhcp-service", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lan-port-configs/lan-port-config/{lan-port-config-id}/dhcp-services/dhcp-service/{dhcp-service-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkLanPortConfigsLanPortConfigDhcpServicesDhcpServiceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this dhcp-service by id", 
            "example": "__DHCP-SERVICE-ID__", 
            "in": "path", 
            "name": "dhcp-service-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkLanPortConfigsLanPortConfigDhcpServicesDhcpServiceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Uniquely identifies this dhcp-service by id", 
            "example": "__DHCP-SERVICE-ID__", 
            "in": "path", 
            "name": "dhcp-service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLanPortConfigsLanPortConfigDhcpServicesDhcpService.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/lan-port-configs/lan-port-config/{lan-port-config-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkLanPortConfigsLanPortConfigRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkLanPortConfigsLanPortConfigRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this lan-port-config by id", 
            "example": "__LAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "lan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLanPortConfigsLanPortConfig.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/logical-links": {
      "get": {
        "description": "returns logical-links", 
        "operationId": "getNetworkLogicalLinks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "circuit-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "purpose", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/logical-links"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns logical-links", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/logical-links/logical-link/{link-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing logical-link", 
        "operationId": "deleteNetworkLogicalLinksLogicalLink", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing logical-link", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns logical-link", 
        "operationId": "getNetworkLogicalLinksLogicalLink", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/logical-link"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns logical-link", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing logical-link\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkLogicalLinksLogicalLink", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "logical-link object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/logical-link"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing logical-link", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing logical-link.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkLogicalLinksLogicalLink", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "logical-link object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLogicalLinksLogicalLink.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/logical-link"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing logical-link", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/logical-links/logical-link/{link-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkLogicalLinksLogicalLinkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkLogicalLinksLogicalLinkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkLogicalLinksLogicalLink.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/multicast-configurations": {
      "get": {
        "description": "returns multicast-configurations", 
        "operationId": "getNetworkMulticastConfigurations", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "multicast-configuration-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/multicast-configurations"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns multicast-configurations", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/multicast-configurations/multicast-configuration/{multicast-configuration-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing multicast-configuration", 
        "operationId": "deleteNetworkMulticastConfigurationsMulticastConfiguration", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing multicast-configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns multicast-configuration", 
        "operationId": "getNetworkMulticastConfigurationsMulticastConfiguration", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/multicast-configuration"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns multicast-configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing multicast-configuration\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkMulticastConfigurationsMulticastConfiguration", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "multicast-configuration object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/multicast-configuration"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing multicast-configuration", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing multicast-configuration.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkMulticastConfigurationsMulticastConfiguration", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "multicast-configuration object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkMulticastConfigurationsMulticastConfiguration.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/multicast-configuration"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing multicast-configuration", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/multicast-configurations/multicast-configuration/{multicast-configuration-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkMulticastConfigurationsMulticastConfigurationRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkMulticastConfigurationsMulticastConfigurationRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkMulticastConfigurationsMulticastConfiguration.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/network-policies": {
      "get": {
        "description": "returns network-policies", 
        "operationId": "getNetworkNetworkPolicies", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-policy-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-policy-fqdn", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-policies"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-policies", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/network-policies/network-policy/{network-policy-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing network-policy", 
        "operationId": "deleteNetworkNetworkPoliciesNetworkPolicy", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing network-policy", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns network-policy", 
        "operationId": "getNetworkNetworkPoliciesNetworkPolicy", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-policy"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-policy", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing network-policy\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNetworkPoliciesNetworkPolicy", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-policy object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/network-policy"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing network-policy", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing network-policy.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNetworkPoliciesNetworkPolicy", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-policy object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNetworkPoliciesNetworkPolicy.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/network-policy"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing network-policy", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/network-policies/network-policy/{network-policy-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNetworkPoliciesNetworkPolicyRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNetworkPoliciesNetworkPolicyRelationshipListRelationship", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNetworkPoliciesNetworkPolicy.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/network-resources": {
      "get": {
        "description": "returns network-resources", 
        "operationId": "getNetworkNetworkResources", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "provider-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "client-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "te-topo-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-resources"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-resources", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/network-resources/network-resource/{network-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing network-resource", 
        "operationId": "deleteNetworkNetworkResourcesNetworkResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this network-resource by id", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing network-resource", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns network-resource", 
        "operationId": "getNetworkNetworkResourcesNetworkResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this network-resource by id", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/network-resource"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-resource", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing network-resource\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNetworkResourcesNetworkResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this network-resource by id", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-resource object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/network-resource"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing network-resource", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing network-resource.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNetworkResourcesNetworkResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this network-resource by id", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "network-resource object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNetworkResourcesNetworkResource.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/network-resource"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing network-resource", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/network-resources/network-resource/{network-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNetworkResourcesNetworkResourceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this network-resource by id", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNetworkResourcesNetworkResourceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this network-resource by id", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNetworkResourcesNetworkResource.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces": {
      "get": {
        "description": "returns newvces", 
        "operationId": "getNetworkNewvces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-id2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/newvces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns newvces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing newvce", 
        "operationId": "deleteNetworkNewvcesNewvce", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing newvce", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns newvce", 
        "operationId": "getNetworkNewvcesNewvce", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/newvce"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns newvce", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing newvce\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvce", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "newvce object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/newvce"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing newvce", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing newvce.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvce", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "newvce object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvce.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/newvce"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing newvce", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkNewvcesNewvceLInterfaces", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/newvces/newvce/{vnf-id2}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkNewvcesNewvceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkNewvcesNewvceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkNewvcesNewvce.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/physical-links": {
      "get": {
        "description": "returns physical-links", 
        "operationId": "getNetworkPhysicalLinks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "circuit-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/physical-links"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns physical-links", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/physical-links/physical-link/{link-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing physical-link", 
        "operationId": "deleteNetworkPhysicalLinksPhysicalLink", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing physical-link", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns physical-link", 
        "operationId": "getNetworkPhysicalLinksPhysicalLink", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/physical-link"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns physical-link", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing physical-link\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPhysicalLinksPhysicalLink", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "physical-link object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/physical-link"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing physical-link", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing physical-link.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPhysicalLinksPhysicalLink", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "physical-link object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPhysicalLinksPhysicalLink.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/physical-link"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing physical-link", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/physical-links/physical-link/{link-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPhysicalLinksPhysicalLinkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPhysicalLinksPhysicalLinkRelationshipListRelationship", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPhysicalLinksPhysicalLink.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs": {
      "get": {
        "description": "returns pnfs", 
        "operationId": "getNetworkPnfs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "orchestration-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "inv-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "admin-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/pnfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pnfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing pnf", 
        "operationId": "deleteNetworkPnfsPnf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing pnf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns pnf", 
        "operationId": "getNetworkPnfsPnf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/pnf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pnf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing pnf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "pnf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/pnf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing pnf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing pnf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "pnf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/pnf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing pnf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces": {
      "get": {
        "description": "returns lag-interfaces", 
        "operationId": "getNetworkPnfsPnfLagInterfaces", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-role", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing lag-interface", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns lag-interface", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing lag-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing lag-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfaces", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/lag-interfaces/lag-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces": {
      "get": {
        "description": "returns p-interfaces", 
        "operationId": "getNetworkPnfsPnfPInterfaces", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/p-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing p-interface", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing p-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns p-interface", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/p-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing p-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "p-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/p-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing p-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing p-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "p-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/p-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing p-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfaces", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/sriov-pfs": {
      "get": {
        "description": "returns sriov-pfs", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceSriovPfs", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pf-pci-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-pfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/sriov-pfs/sriov-pf/{pf-pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-pf", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-pf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-pf", 
        "operationId": "getNetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-pf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-pf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-pf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-pf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-pf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-pf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-pf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-pf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-pf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/p-interfaces/p-interface/{interface-name}/sriov-pfs/sriov-pf/{pf-pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfPInterfacesPInterfaceSriovPfsSriovPf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/software-versions": {
      "get": {
        "description": "returns software-versions", 
        "operationId": "getNetworkPnfsPnfSoftwareVersions", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/software-versions"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns software-versions", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/software-versions/software-version/{software-version-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing software-version", 
        "operationId": "deleteNetworkPnfsPnfSoftwareVersionsSoftwareVersion", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier of the software version", 
            "example": "__SOFTWARE-VERSION-ID__", 
            "in": "path", 
            "name": "software-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing software-version", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns software-version", 
        "operationId": "getNetworkPnfsPnfSoftwareVersionsSoftwareVersion", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier of the software version", 
            "example": "__SOFTWARE-VERSION-ID__", 
            "in": "path", 
            "name": "software-version-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/software-version"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns software-version", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing software-version\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfSoftwareVersionsSoftwareVersion", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier of the software version", 
            "example": "__SOFTWARE-VERSION-ID__", 
            "in": "path", 
            "name": "software-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "software-version object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/software-version"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing software-version", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing software-version.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfSoftwareVersionsSoftwareVersion", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier of the software version", 
            "example": "__SOFTWARE-VERSION-ID__", 
            "in": "path", 
            "name": "software-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "software-version object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfSoftwareVersionsSoftwareVersion.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/software-version"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing software-version", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/vrfs": {
      "get": {
        "description": "returns vrfs", 
        "operationId": "getNetworkPnfsPnfVrfs", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vrf-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vrfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vrfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/vrfs/vrf/{vrf-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vrf", 
        "operationId": "deleteNetworkPnfsPnfVrfsVrf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vrf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vrf", 
        "operationId": "getNetworkPnfsPnfVrfsVrf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vrf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vrf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vrf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfVrfsVrf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vrf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vrf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vrf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vrf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfVrfsVrf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vrf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfVrfsVrf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vrf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vrf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/vrfs/vrf/{vrf-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfVrfsVrfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfVrfsVrfRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfVrfsVrf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/vrfs/vrf/{vrf-id}/route-targets": {
      "get": {
        "description": "returns route-targets", 
        "operationId": "getNetworkPnfsPnfVrfsVrfRouteTargets", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/route-targets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-targets", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/vrfs/vrf/{vrf-id}/route-targets/route-target/{global-route-target}/{route-target-role}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing route-target", 
        "operationId": "deleteNetworkPnfsPnfVrfsVrfRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing route-target", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns route-target", 
        "operationId": "getNetworkPnfsPnfVrfsVrfRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/route-target"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-target", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing route-target\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkPnfsPnfVrfsVrfRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "route-target object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/route-target"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing route-target", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing route-target.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkPnfsPnfVrfsVrfRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "route-target object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfVrfsVrfRouteTargetsRouteTarget.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/route-target"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing route-target", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/pnfs/pnf/{pnf-name}/vrfs/vrf/{vrf-id}/route-targets/route-target/{global-route-target}/{route-target-role}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkPnfsPnfVrfsVrfRouteTargetsRouteTargetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkPnfsPnfVrfsVrfRouteTargetsRouteTargetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VRF UUID.", 
            "example": "__VRF-ID__", 
            "in": "path", 
            "name": "vrf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkPnfsPnfVrfsVrfRouteTargetsRouteTarget.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/route-table-references": {
      "get": {
        "description": "returns route-table-references", 
        "operationId": "getNetworkRouteTableReferences", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "route-table-reference-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "route-table-reference-fqdn", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/route-table-references"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-table-references", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/route-table-references/route-table-reference/{route-table-reference-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing route-table-reference", 
        "operationId": "deleteNetworkRouteTableReferencesRouteTableReference", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing route-table-reference", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns route-table-reference", 
        "operationId": "getNetworkRouteTableReferencesRouteTableReference", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/route-table-reference"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-table-reference", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing route-table-reference\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkRouteTableReferencesRouteTableReference", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "route-table-reference object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/route-table-reference"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing route-table-reference", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing route-table-reference.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkRouteTableReferencesRouteTableReference", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "route-table-reference object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkRouteTableReferencesRouteTableReference.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/route-table-reference"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing route-table-reference", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/route-table-references/route-table-reference/{route-table-reference-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkRouteTableReferencesRouteTableReferenceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkRouteTableReferencesRouteTableReferenceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkRouteTableReferencesRouteTableReference.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/sdwan-vpns": {
      "get": {
        "description": "returns sdwan-vpns", 
        "operationId": "getNetworkSdwanVpns", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "sdwan-vpn-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "sdwan-vpn-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vxlan-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "topology", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sdwan-vpns"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sdwan-vpns", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/sdwan-vpns/sdwan-vpn/{sdwan-vpn-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sdwan-vpn", 
        "operationId": "deleteNetworkSdwanVpnsSdwanVpn", 
        "parameters": [
          {
            "description": "Uniquely identifies this sdwan-vpn by id", 
            "example": "__SDWAN-VPN-ID__", 
            "in": "path", 
            "name": "sdwan-vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sdwan-vpn", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sdwan-vpn", 
        "operationId": "getNetworkSdwanVpnsSdwanVpn", 
        "parameters": [
          {
            "description": "Uniquely identifies this sdwan-vpn by id", 
            "example": "__SDWAN-VPN-ID__", 
            "in": "path", 
            "name": "sdwan-vpn-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sdwan-vpn"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sdwan-vpn", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sdwan-vpn\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkSdwanVpnsSdwanVpn", 
        "parameters": [
          {
            "description": "Uniquely identifies this sdwan-vpn by id", 
            "example": "__SDWAN-VPN-ID__", 
            "in": "path", 
            "name": "sdwan-vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sdwan-vpn object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sdwan-vpn"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sdwan-vpn", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sdwan-vpn.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkSdwanVpnsSdwanVpn", 
        "parameters": [
          {
            "description": "Uniquely identifies this sdwan-vpn by id", 
            "example": "__SDWAN-VPN-ID__", 
            "in": "path", 
            "name": "sdwan-vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sdwan-vpn object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSdwanVpnsSdwanVpn.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sdwan-vpn"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sdwan-vpn", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/sdwan-vpns/sdwan-vpn/{sdwan-vpn-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkSdwanVpnsSdwanVpnRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this sdwan-vpn by id", 
            "example": "__SDWAN-VPN-ID__", 
            "in": "path", 
            "name": "sdwan-vpn-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkSdwanVpnsSdwanVpnRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this sdwan-vpn by id", 
            "example": "__SDWAN-VPN-ID__", 
            "in": "path", 
            "name": "sdwan-vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSdwanVpnsSdwanVpn.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets": {
      "get": {
        "description": "returns site-pair-sets", 
        "operationId": "getNetworkSitePairSets", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "site-pair-set-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/site-pair-sets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pair-sets", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing site-pair-set", 
        "operationId": "deleteNetworkSitePairSetsSitePairSet", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing site-pair-set", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns site-pair-set", 
        "operationId": "getNetworkSitePairSetsSitePairSet", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/site-pair-set"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pair-set", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing site-pair-set\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkSitePairSetsSitePairSet", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "site-pair-set object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/site-pair-set"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing site-pair-set", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing site-pair-set.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSet", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "site-pair-set object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/site-pair-set"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing site-pair-set", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances": {
      "get": {
        "description": "returns routing-instances", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstances", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "routing-instance-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/routing-instances"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns routing-instances", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing routing-instance", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing routing-instance", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns routing-instance", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/routing-instance"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns routing-instance", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing routing-instance\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "routing-instance object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/routing-instance"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing routing-instance", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing routing-instance.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "routing-instance object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/routing-instance"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing routing-instance", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs": {
      "get": {
        "description": "returns site-pairs", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairs", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "site-pair-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/site-pairs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pairs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs/site-pair/{site-pair-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing site-pair", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing site-pair", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns site-pair", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/site-pair"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pair", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing site-pair\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "site-pair object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/site-pair"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing site-pair", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing site-pair.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "site-pair object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/site-pair"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing site-pair", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs/site-pair/{site-pair-id}/classes-of-service": {
      "get": {
        "description": "returns classes-of-service", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfService", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cos", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/classes-of-service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns classes-of-service", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs/site-pair/{site-pair-id}/classes-of-service/class-of-service/{cos}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing class-of-service", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing class-of-service", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns class-of-service", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/class-of-service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns class-of-service", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing class-of-service\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "class-of-service object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/class-of-service"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing class-of-service", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing class-of-service.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "class-of-service object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/class-of-service"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing class-of-service", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs/site-pair/{site-pair-id}/classes-of-service/class-of-service/{cos}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfServiceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfServiceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs/site-pair/{site-pair-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-resources": {
      "get": {
        "description": "returns site-resources", 
        "operationId": "getNetworkSiteResources", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "site-resource-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "site-resource-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "role", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "generated-site-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/site-resources"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-resources", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-resources/site-resource/{site-resource-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing site-resource", 
        "operationId": "deleteNetworkSiteResourcesSiteResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this site-resource by id", 
            "example": "__SITE-RESOURCE-ID__", 
            "in": "path", 
            "name": "site-resource-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing site-resource", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns site-resource", 
        "operationId": "getNetworkSiteResourcesSiteResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this site-resource by id", 
            "example": "__SITE-RESOURCE-ID__", 
            "in": "path", 
            "name": "site-resource-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/site-resource"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-resource", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing site-resource\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkSiteResourcesSiteResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this site-resource by id", 
            "example": "__SITE-RESOURCE-ID__", 
            "in": "path", 
            "name": "site-resource-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "site-resource object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/site-resource"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing site-resource", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing site-resource.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkSiteResourcesSiteResource", 
        "parameters": [
          {
            "description": "Uniquely identifies this site-resource by id", 
            "example": "__SITE-RESOURCE-ID__", 
            "in": "path", 
            "name": "site-resource-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "site-resource object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSiteResourcesSiteResource.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/site-resource"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing site-resource", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/site-resources/site-resource/{site-resource-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkSiteResourcesSiteResourceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this site-resource by id", 
            "example": "__SITE-RESOURCE-ID__", 
            "in": "path", 
            "name": "site-resource-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkSiteResourcesSiteResourceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this site-resource by id", 
            "example": "__SITE-RESOURCE-ID__", 
            "in": "path", 
            "name": "site-resource-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkSiteResourcesSiteResource.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces": {
      "get": {
        "description": "returns vces", 
        "operationId": "getNetworkVces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "regional-resource-zone", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpe-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vce", 
        "operationId": "deleteNetworkVcesVce", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vce", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vce", 
        "operationId": "getNetworkVcesVce", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vce"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vce", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vce\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVcesVce", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vce object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vce"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vce", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vce.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVcesVce", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vce object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVce.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vce"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vce", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/entitlements": {
      "get": {
        "description": "returns entitlements", 
        "operationId": "getNetworkVcesVceEntitlements", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/entitlements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns entitlements", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/entitlements/entitlement/{group-uuid}/{resource-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing entitlement", 
        "operationId": "deleteNetworkVcesVceEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing entitlement", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns entitlement", 
        "operationId": "getNetworkVcesVceEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/entitlement"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns entitlement", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing entitlement\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVcesVceEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "entitlement object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/entitlement"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing entitlement", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing entitlement.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVcesVceEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "entitlement object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVceEntitlementsEntitlement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/entitlement"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing entitlement", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/entitlements/entitlement/{group-uuid}/{resource-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVcesVceEntitlementsEntitlementRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVcesVceEntitlementsEntitlementRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVceEntitlementsEntitlement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/licenses": {
      "get": {
        "description": "returns licenses", 
        "operationId": "getNetworkVcesVceLicenses", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/licenses"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns licenses", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/licenses/license/{group-uuid}/{resource-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing license", 
        "operationId": "deleteNetworkVcesVceLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing license", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns license", 
        "operationId": "getNetworkVcesVceLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/license"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns license", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing license\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVcesVceLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "license object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/license"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing license", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing license.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVcesVceLicensesLicense", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "license object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVceLicensesLicense.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/license"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing license", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/licenses/license/{group-uuid}/{resource-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVcesVceLicensesLicenseRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVcesVceLicensesLicenseRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVceLicensesLicense.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/port-groups": {
      "get": {
        "description": "returns port-groups", 
        "operationId": "getNetworkVcesVcePortGroups", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "port-group-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "switch-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/port-groups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns port-groups", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/port-groups/port-group/{interface-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing port-group", 
        "operationId": "deleteNetworkVcesVcePortGroupsPortGroup", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing port-group", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns port-group", 
        "operationId": "getNetworkVcesVcePortGroupsPortGroup", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/port-group"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns port-group", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing port-group\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVcesVcePortGroupsPortGroup", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "port-group object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/port-group"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing port-group", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing port-group.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVcesVcePortGroupsPortGroup", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "port-group object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVcePortGroupsPortGroup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/port-group"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing port-group", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/port-groups/port-group/{interface-id}/cvlan-tags": {
      "get": {
        "description": "returns cvlan-tags", 
        "operationId": "getNetworkVcesVcePortGroupsPortGroupCvlanTags", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "cvlan-tag", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/cvlan-tags"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cvlan-tags", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/port-groups/port-group/{interface-id}/cvlan-tags/cvlan-tag-entry/{cvlan-tag}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing cvlan-tag-entry", 
        "operationId": "deleteNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing cvlan-tag-entry", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns cvlan-tag-entry", 
        "operationId": "getNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/cvlan-tag-entry"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cvlan-tag-entry", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing cvlan-tag-entry\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "cvlan-tag-entry object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/cvlan-tag-entry"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing cvlan-tag-entry", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing cvlan-tag-entry.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "cvlan-tag-entry object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/cvlan-tag-entry"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing cvlan-tag-entry", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/port-groups/port-group/{interface-id}/cvlan-tags/cvlan-tag-entry/{cvlan-tag}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntryRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntryRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/port-groups/port-group/{interface-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVcesVcePortGroupsPortGroupRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVcesVcePortGroupsPortGroupRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVcePortGroupsPortGroup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vces/vce/{vnf-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVcesVceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVcesVceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVcesVce.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vlan-tags": {
      "get": {
        "description": "returns vlan-tags", 
        "operationId": "getNetworkVlanTags", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan-tags"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan-tags", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vlan-tags/vlan-tag/{vlan-tag-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan-tag", 
        "operationId": "deleteNetworkVlanTagsVlanTag", 
        "parameters": [
          {
            "description": "Unique ID of the vlan-tag", 
            "example": "__VLAN-TAG-ID__", 
            "in": "path", 
            "name": "vlan-tag-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan-tag", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan-tag", 
        "operationId": "getNetworkVlanTagsVlanTag", 
        "parameters": [
          {
            "description": "Unique ID of the vlan-tag", 
            "example": "__VLAN-TAG-ID__", 
            "in": "path", 
            "name": "vlan-tag-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan-tag"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan-tag", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan-tag\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVlanTagsVlanTag", 
        "parameters": [
          {
            "description": "Unique ID of the vlan-tag", 
            "example": "__VLAN-TAG-ID__", 
            "in": "path", 
            "name": "vlan-tag-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan-tag object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan-tag"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan-tag", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan-tag.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVlanTagsVlanTag", 
        "parameters": [
          {
            "description": "Unique ID of the vlan-tag", 
            "example": "__VLAN-TAG-ID__", 
            "in": "path", 
            "name": "vlan-tag-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan-tag object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVlanTagsVlanTag.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan-tag"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan-tag", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vlan-tags/vlan-tag/{vlan-tag-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVlanTagsVlanTagRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the vlan-tag", 
            "example": "__VLAN-TAG-ID__", 
            "in": "path", 
            "name": "vlan-tag-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVlanTagsVlanTagRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of the vlan-tag", 
            "example": "__VLAN-TAG-ID__", 
            "in": "path", 
            "name": "vlan-tag-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVlanTagsVlanTag.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs": {
      "get": {
        "description": "returns vnfcs", 
        "operationId": "getNetworkVnfcs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnfc-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nfc-naming-code", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nfc-function", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipaddress-v4-oam-vip", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "is-closed-loop-disabled", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-notation", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vnfcs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnfcs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vnfc", 
        "operationId": "deleteNetworkVnfcsVnfc", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vnfc", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vnfc", 
        "operationId": "getNetworkVnfcsVnfc", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vnfc"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnfc", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vnfc\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVnfcsVnfc", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vnfc object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vnfc"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vnfc", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vnfc.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVnfcsVnfc", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vnfc object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vnfc"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vnfc", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps": {
      "get": {
        "description": "returns cps", 
        "operationId": "getNetworkVnfcsVnfcCps", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/cps"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cps", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps/cp/{cp-instance-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing cp", 
        "operationId": "deleteNetworkVnfcsVnfcCpsCp", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing cp", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns cp", 
        "operationId": "getNetworkVnfcsVnfcCpsCp", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/cp"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cp", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing cp\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVnfcsVnfcCpsCp", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "cp object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/cp"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing cp", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing cp.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVnfcsVnfcCpsCp", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "cp object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcCpsCp.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/cp"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing cp", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps/cp/{cp-instance-id}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps/cp/{cp-instance-id}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcCpsCpL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps/cp/{cp-instance-id}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps/cp/{cp-instance-id}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcCpsCpL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/cps/cp/{cp-instance-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVnfcsVnfcCpsCpRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVnfcsVnfcCpsCpRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of the connection point.", 
            "example": "__CP-INSTANCE-ID__", 
            "in": "path", 
            "name": "cp-instance-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcCpsCp.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkVnfcsVnfcL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkVnfcsVnfcL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVnfcsVnfcL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVnfcsVnfcL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVnfcsVnfcL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVnfcsVnfcL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkVnfcsVnfcL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkVnfcsVnfcL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVnfcsVnfcL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVnfcsVnfcL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVnfcsVnfcL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVnfcsVnfcL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfcL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vnfcs/vnfc/{vnfc-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVnfcsVnfcRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVnfcsVnfcRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVnfcsVnfc.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes": {
      "get": {
        "description": "returns vpls-pes", 
        "operationId": "getNetworkVplsPes", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "equipment-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vpls-pes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpls-pes", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vpls-pe", 
        "operationId": "deleteNetworkVplsPesVplsPe", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vpls-pe", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vpls-pe", 
        "operationId": "getNetworkVplsPesVplsPe", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vpls-pe"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpls-pe", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vpls-pe\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPe", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vpls-pe object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vpls-pe"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vpls-pe", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vpls-pe.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPe", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vpls-pe object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPe.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vpls-pe"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vpls-pe", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces": {
      "get": {
        "description": "returns lag-interfaces", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfaces", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-role", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing lag-interface", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns lag-interface", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/lag-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing lag-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing lag-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "lag-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/lag-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing lag-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfaces", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/lag-interfaces/lag-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeLagInterfacesLagInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPeLagInterfacesLagInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces": {
      "get": {
        "description": "returns p-interfaces", 
        "operationId": "getNetworkVplsPesVplsPePInterfaces", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/p-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing p-interface", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing p-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns p-interface", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/p-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing p-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "p-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/p-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing p-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing p-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "p-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/p-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing p-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfaces", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l-interface", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l-interface", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l-interface\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l-interface.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterface", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l-interface object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l-interface", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-vf", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-vf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-vf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-vf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-vf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/sriov-vfs/sriov-vf/{pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVfRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceSriovVfsSriovVf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vlan", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vlan", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vlan\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vlan", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vlan.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vlan object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vlan", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv4-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv4-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv4-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv4-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv4-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing l3-interface-ipv6-address-list", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing l3-interface-ipv6-address-list\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing l3-interface-ipv6-address-list.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "l3-interface-ipv6-address-list object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing l3-interface-ipv6-address-list", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressListRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/l-interfaces/l-interface/{interface-name}/vlans/vlan/{vlan-interface}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlanRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceLInterfacesLInterfaceVlansVlan.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterface.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/sriov-pfs": {
      "get": {
        "description": "returns sriov-pfs", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfs", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pf-pci-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-pfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pfs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/sriov-pfs/sriov-pf/{pf-pci-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing sriov-pf", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing sriov-pf", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns sriov-pf", 
        "operationId": "getNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/sriov-pf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pf", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing sriov-pf\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-pf object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/sriov-pf"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing sriov-pf", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing sriov-pf.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "sriov-pf object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/sriov-pf"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing sriov-pf", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/p-interfaces/p-interface/{interface-name}/sriov-pfs/sriov-pf/{pf-pci-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPfRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPfRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPePInterfacesPInterfaceSriovPfsSriovPf.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpls-pes/vpls-pe/{equipment-name}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVplsPesVplsPeRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVplsPesVplsPeRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVplsPesVplsPe.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpn-bindings": {
      "get": {
        "description": "returns vpn-bindings", 
        "operationId": "getNetworkVpnBindings", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-provider-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-client-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "access-topology-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "src-access-node-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "src-access-ltp-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "dst-access-node-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "dst-access-ltp-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vpn-bindings"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpn-bindings", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpn-bindings/vpn-binding/{vpn-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vpn-binding", 
        "operationId": "deleteNetworkVpnBindingsVpnBinding", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vpn-binding", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns vpn-binding", 
        "operationId": "getNetworkVpnBindingsVpnBinding", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vpn-binding"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpn-binding", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vpn-binding\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVpnBindingsVpnBinding", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vpn-binding object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vpn-binding"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vpn-binding", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vpn-binding.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVpnBindingsVpnBinding", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vpn-binding object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVpnBindingsVpnBinding.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vpn-binding"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vpn-binding", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpn-bindings/vpn-binding/{vpn-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVpnBindingsVpnBindingRelationshipListRelationship", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVpnBindingsVpnBindingRelationshipListRelationship", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVpnBindingsVpnBinding.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpn-bindings/vpn-binding/{vpn-id}/route-targets": {
      "get": {
        "description": "returns route-targets", 
        "operationId": "getNetworkVpnBindingsVpnBindingRouteTargets", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/route-targets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-targets", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpn-bindings/vpn-binding/{vpn-id}/route-targets/route-target/{global-route-target}/{route-target-role}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing route-target", 
        "operationId": "deleteNetworkVpnBindingsVpnBindingRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing route-target", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns route-target", 
        "operationId": "getNetworkVpnBindingsVpnBindingRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/route-target"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-target", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing route-target\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkVpnBindingsVpnBindingRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "route-target object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/route-target"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing route-target", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing route-target.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkVpnBindingsVpnBindingRouteTargetsRouteTarget", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "route-target object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVpnBindingsVpnBindingRouteTargetsRouteTarget.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/route-target"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing route-target", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/vpn-bindings/vpn-binding/{vpn-id}/route-targets/route-target/{global-route-target}/{route-target-role}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkVpnBindingsVpnBindingRouteTargetsRouteTargetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkVpnBindingsVpnBindingRouteTargetsRouteTargetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Number used to identify an RT, globally unique in the network", 
            "example": "__GLOBAL-ROUTE-TARGET__", 
            "in": "path", 
            "name": "global-route-target", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Role assigned to this route target", 
            "example": "__ROUTE-TARGET-ROLE__", 
            "in": "path", 
            "name": "route-target-role", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkVpnBindingsVpnBindingRouteTargetsRouteTarget.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/wan-port-configs": {
      "get": {
        "description": "returns wan-port-configs", 
        "operationId": "getNetworkWanPortConfigs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "wan-port-config-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "wan-port-config-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "device-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ip-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipv4-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipv6-address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "port-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "port-number", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "device-port-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "wan-port-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "operational-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/wan-port-configs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns wan-port-configs", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/wan-port-configs/wan-port-config/{wan-port-config-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing wan-port-config", 
        "operationId": "deleteNetworkWanPortConfigsWanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this wan-port-config by id", 
            "example": "__WAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "wan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing wan-port-config", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns wan-port-config", 
        "operationId": "getNetworkWanPortConfigsWanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this wan-port-config by id", 
            "example": "__WAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "wan-port-config-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/wan-port-config"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns wan-port-config", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing wan-port-config\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkWanPortConfigsWanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this wan-port-config by id", 
            "example": "__WAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "wan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "wan-port-config object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/wan-port-config"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing wan-port-config", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing wan-port-config.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkWanPortConfigsWanPortConfig", 
        "parameters": [
          {
            "description": "Uniquely identifies this wan-port-config by id", 
            "example": "__WAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "wan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "wan-port-config object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkWanPortConfigsWanPortConfig.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/wan-port-config"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing wan-port-config", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/wan-port-configs/wan-port-config/{wan-port-config-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkWanPortConfigsWanPortConfigRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this wan-port-config by id", 
            "example": "__WAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "wan-port-config-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkWanPortConfigsWanPortConfigRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Uniquely identifies this wan-port-config by id", 
            "example": "__WAN-PORT-CONFIG-ID__", 
            "in": "path", 
            "name": "wan-port-config-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkWanPortConfigsWanPortConfig.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/zones": {
      "get": {
        "description": "returns zones", 
        "operationId": "getNetworkZones", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "zone-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "design-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "zone-context", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/zones"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns zones", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/zones/zone/{zone-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing zone", 
        "operationId": "deleteNetworkZonesZone", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing zone", 
        "tags": [
          "Network"
        ]
      }, 
      "get": {
        "description": "returns zone", 
        "operationId": "getNetworkZonesZone", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/zone"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns zone", 
        "tags": [
          "Network"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing zone\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateNetworkZonesZone", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "zone object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/zone"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing zone", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing zone.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateNetworkZonesZone", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "zone object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkZonesZone.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/zone"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing zone", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/network/zones/zone/{zone-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteNetworkZonesZoneRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "Network"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateNetworkZonesZoneRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/NetworkZonesZone.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "Network"
        ]
      }
    }, 
    "/service-design-and-creation/models": {
      "get": {
        "description": "returns models", 
        "operationId": "getServiceDesignAndCreationModels", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/models"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns models", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing model", 
        "operationId": "deleteServiceDesignAndCreationModelsModel", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing model", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns model", 
        "operationId": "getServiceDesignAndCreationModelsModel", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing model\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModel", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/model"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing model", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing model.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModel", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModel.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/model"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing model", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers": {
      "get": {
        "description": "returns model-vers", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVers", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "distribution-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model-vers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-vers", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing model-ver", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVer", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing model-ver", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns model-ver", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVer", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model-ver"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-ver", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing model-ver\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModelModelVersModelVer", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model-ver object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/model-ver"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing model-ver", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing model-ver.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVer", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model-ver object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/model-ver"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing model-ver", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/metadata": {
      "get": {
        "description": "returns metadata", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerMetadata", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "metaname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadata"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadata", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/metadata/metadatum/{metaname}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing metadatum", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing metadatum", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns metadatum", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/metadatum"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadatum", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing metadatum\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModelModelVersModelVerMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing metadatum", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing metadatum.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerMetadataMetadatum", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "metadatum object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerMetadataMetadatum.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/metadatum"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing metadatum", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements": {
      "get": {
        "description": "returns model-elements", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElements", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-element-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model-elements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-elements", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing model-element", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing model-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns model-element", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model-element"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing model-element\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model-element object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/model-element"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing model-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing model-element.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model-element object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/model-element"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing model-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints": {
      "get": {
        "description": "returns model-constraints", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraints", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-constraint-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model-constraints"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-constraints", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing model-constraint", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraint", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing model-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns model-constraint", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraint", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/model-constraint"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing model-constraint\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraint", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model-constraint object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/model-constraint"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing model-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing model-constraint.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraint", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "model-constraint object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraint.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/model-constraint"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing model-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}/constrained-element-sets": {
      "get": {
        "description": "returns constrained-element-sets", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSets", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "constrained-element-set-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/constrained-element-sets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns constrained-element-sets", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}/constrained-element-sets/constrained-element-set/{constrained-element-set-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing constrained-element-set", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing constrained-element-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns constrained-element-set", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/constrained-element-set"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns constrained-element-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing constrained-element-set\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "constrained-element-set object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/constrained-element-set"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing constrained-element-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing constrained-element-set.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "constrained-element-set object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/constrained-element-set"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing constrained-element-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}/constrained-element-sets/constrained-element-set/{constrained-element-set-uuid}/element-choice-sets": {
      "get": {
        "description": "returns element-choice-sets", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSets", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "element-choice-set-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/element-choice-sets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns element-choice-sets", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}/constrained-element-sets/constrained-element-set/{constrained-element-set-uuid}/element-choice-sets/element-choice-set/{element-choice-set-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing element-choice-set", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing element-choice-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns element-choice-set", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/element-choice-set"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns element-choice-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing element-choice-set\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "element-choice-set object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/element-choice-set"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing element-choice-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing element-choice-set.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "element-choice-set object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/element-choice-set"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing element-choice-set", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}/constrained-element-sets/constrained-element-set/{constrained-element-set-uuid}/element-choice-sets/element-choice-set/{element-choice-set-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/model-constraints/model-constraint/{model-constraint-uuid}/constrained-element-sets/constrained-element-set/{constrained-element-set-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/model-elements/model-element/{model-element-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/model-vers/model-ver/{model-version-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationModelsModelModelVersModelVerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelModelVersModelVerRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModelModelVersModelVer.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/models/model/{model-invariant-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationModelsModelRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationModelsModelRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationModelsModel.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries": {
      "get": {
        "description": "returns named-queries", 
        "operationId": "getServiceDesignAndCreationNamedQueries", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "named-query-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "named-query-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/named-queries"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-queries", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing named-query", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQuery", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing named-query", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns named-query", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQuery", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/named-query"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-query", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing named-query\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationNamedQueriesNamedQuery", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "named-query object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/named-query"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing named-query", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing named-query.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQuery", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "named-query object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQuery.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/named-query"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing named-query", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements": {
      "get": {
        "description": "returns named-query-elements", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElements", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "named-query-element-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/named-query-elements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-query-elements", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing named-query-element", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing named-query-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns named-query-element", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/named-query-element"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-query-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing named-query-element\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "named-query-element object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/named-query-element"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing named-query-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing named-query-element.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "named-query-element object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/named-query-element"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing named-query-element", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}/property-constraints": {
      "get": {
        "description": "returns property-constraints", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraints", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "property-constraint-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/property-constraints"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns property-constraints", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}/property-constraints/property-constraint/{property-constraint-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing property-constraint", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraintsPropertyConstraint", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__PROPERTY-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "property-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing property-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns property-constraint", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraintsPropertyConstraint", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__PROPERTY-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "property-constraint-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/property-constraint"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns property-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing property-constraint\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraintsPropertyConstraint", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__PROPERTY-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "property-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "property-constraint object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/property-constraint"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing property-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing property-constraint.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraintsPropertyConstraint", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__PROPERTY-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "property-constraint-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "property-constraint object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraintsPropertyConstraint.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/property-constraint"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing property-constraint", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}/related-lookups": {
      "get": {
        "description": "returns related-lookups", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookups", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "related-lookup-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/related-lookups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns related-lookups", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}/related-lookups/related-lookup/{related-lookup-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing related-lookup", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing related-lookup", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns related-lookup", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/related-lookup"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns related-lookup", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing related-lookup\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "related-lookup object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/related-lookup"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing related-lookup", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing related-lookup.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "related-lookup object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/related-lookup"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing related-lookup", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}/related-lookups/related-lookup/{related-lookup-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookupRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookupRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/named-query-elements/named-query-element/{named-query-element-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/named-queries/named-query/{named-query-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationNamedQueriesNamedQueryRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationNamedQueriesNamedQueryRelationshipListRelationship", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationNamedQueriesNamedQuery.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/service-capabilities": {
      "get": {
        "description": "returns service-capabilities", 
        "operationId": "getServiceDesignAndCreationServiceCapabilities", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service-capabilities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-capabilities", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/service-capabilities/service-capability/{service-type}/{vnf-type}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing service-capability", 
        "operationId": "deleteServiceDesignAndCreationServiceCapabilitiesServiceCapability", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing service-capability", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns service-capability", 
        "operationId": "getServiceDesignAndCreationServiceCapabilitiesServiceCapability", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service-capability"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-capability", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing service-capability\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationServiceCapabilitiesServiceCapability", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service-capability object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/service-capability"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing service-capability", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing service-capability.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationServiceCapabilitiesServiceCapability", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service-capability object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationServiceCapabilitiesServiceCapability.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/service-capability"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing service-capability", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/service-capabilities/service-capability/{service-type}/{vnf-type}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationServiceCapabilitiesServiceCapabilityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationServiceCapabilitiesServiceCapabilityRelationshipListRelationship", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationServiceCapabilitiesServiceCapability.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/services": {
      "get": {
        "description": "returns services", 
        "operationId": "getServiceDesignAndCreationServices", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-description", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/services"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns services", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/services/service/{service-id}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing service", 
        "operationId": "deleteServiceDesignAndCreationServicesService", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing service", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns service", 
        "operationId": "getServiceDesignAndCreationServicesService", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing service\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationServicesService", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/service"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing service", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing service.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationServicesService", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "service object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationServicesService.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/service"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing service", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/services/service/{service-id}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationServicesServiceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationServicesServiceRelationshipListRelationship", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationServicesService.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/vnf-images": {
      "get": {
        "description": "returns vnf-images", 
        "operationId": "getServiceDesignAndCreationVnfImages", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-image-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vnf-images"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnf-images", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/vnf-images/vnf-image/{vnf-image-uuid}": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing vnf-image", 
        "operationId": "deleteServiceDesignAndCreationVnfImagesVnfImage", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "resource-version for concurrency", 
            "in": "query", 
            "name": "resource-version", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing vnf-image", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "get": {
        "description": "returns vnf-image", 
        "operationId": "getServiceDesignAndCreationVnfImagesVnfImage", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/getDefinitions/vnf-image"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnf-image", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "patch": {
        "consumes": [
          "application/json"
        ], 
        "description": "Update an existing vnf-image\n#\nNote:  Endpoints that are not devoted to object relationships support both PUT and PATCH operations.\nThe PUT operation will entirely replace an existing object.\nThe PATCH operation sends a \"description of changes\" for an existing object.  The entire set of changes must be applied.  An error result means no change occurs.\n#\nOther differences between PUT and PATCH are:\n#\n- For PATCH, you can send any of the values shown in sample REQUEST body.  There are no required values.\n- For PATCH, resource-id which is a required REQUEST body element for PUT, must not be sent.\n- PATCH cannot be used to update relationship elements; there are dedicated PUT operations for this.\n", 
        "operationId": "UpdateServiceDesignAndCreationVnfImagesVnfImage", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vnf-image object that needs to be updated.", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/patchDefinitions/vnf-image"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "update an existing vnf-image", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "Create or update an existing vnf-image.\n#\nNote! This PUT method has a corresponding PATCH method that can be used to update just a few of the fields of an existing object, rather than a full object replacement.  An example can be found in the [PATCH section] below\n", 
        "operationId": "createOrUpdateServiceDesignAndCreationVnfImagesVnfImage", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "vnf-image object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationVnfImagesVnfImage.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/vnf-image"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "create or update an existing vnf-image", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }, 
    "/service-design-and-creation/vnf-images/vnf-image/{vnf-image-uuid}/relationship-list/relationship": {
      "delete": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "description": "delete an existing relationship", 
        "operationId": "deleteServiceDesignAndCreationVnfImagesVnfImageRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "delete an existing relationship", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json", 
          "application/xml"
        ], 
        "operationId": "createOrUpdateServiceDesignAndCreationVnfImagesVnfImageRelationshipListRelationship", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "relationship object that needs to be created or updated. [Valid relationship examples shown here](apidocs/relations/v15/ServiceDesignAndCreationVnfImagesVnfImage.json)", 
            "in": "body", 
            "name": "body", 
            "required": true, 
            "schema": {
              "$ref": "#/definitions/relationship-dict"
            }
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "see node definition for valid relationships", 
        "tags": [
          "ServiceDesignAndCreation"
        ]
      }
    }
  }, 
  "schemes": [
    "https"
  ], 
  "swagger": "2.0"
}