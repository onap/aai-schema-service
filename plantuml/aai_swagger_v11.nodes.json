{
  "basePath": "/aai/v11", 
  "definitions": {
    "action": {
      "properties": {
        "action-data": {
          "items": {
            "$ref": "#/definitions/action-data"
          }, 
          "type": "array"
        }, 
        "action-type": {
          "type": "string"
        }
      }
    }, 
    "action-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "actions": {
      "description": "APIs that are more action related than REST (e.g., notify, update).\n", 
      "properties": {
        "notify": {
          "$ref": "#/definitions/notify", 
          "type": "object"
        }, 
        "update": {
          "$ref": "#/definitions/update", 
          "type": "object"
        }
      }
    }, 
    "allotted-resource": {
      "description": "Represents a slice or partial piece of a resource that gets separately allotted\n###### Related Nodes\n- TO generic-vnf( allotted-resource PartOf generic-vnf, MANY2MANY)\n- TO instance-group( allotted-resource MemberOf instance-group, MANY2MANY)\n- TO l-interface( allotted-resource Uses l-interface, ONE2MANY)\n- TO l3-network( allotted-resource PartOf l3-network, MANY2MANY)\n- TO network-policy( allotted-resource Uses network-policy, ONE2ONE)\n- TO service-instance (PARENT of allotted-resource, allotted-resource BelongsTo service-instance, MANY2ONE)(4)\n- TO vlan( allotted-resource PartOf vlan, MANY2MANY)\n- TO vpn-binding( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses allotted-resource, ONE2ONE)(3)\n- FROM service-instance( service-instance Uses allotted-resource, MANY2MANY)\n- FROM tunnel-xconnect (CHILD of allotted-resource, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(1)\n\n-(1) IF this ALLOTTED-RESOURCE node is deleted, this FROM node is DELETED also\n-(3) IF this FROM node is deleted, this ALLOTTED-RESOURCE is DELETED also\n-(4) IF this TO node is deleted, this ALLOTTED-RESOURCE is DELETED also\n", 
      "properties": {
        "description": {
          "description": "The descriptive information assigned to this allotted resource instance", 
          "type": "string"
        }, 
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "role": {
          "description": "role in the network that this resource will be providing.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Link back to more information in the controller", 
          "type": "string"
        }, 
        "tunnel-xconnects": {
          "items": {
            "$ref": "#/definitions/tunnel-xconnect"
          }, 
          "type": "array"
        }, 
        "type": {
          "description": "Generic description of the type of allotted resource.", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "allotted-resources": {
      "description": "This object is used to store slices of services being offered\n", 
      "properties": {
        "allotted-resource": {
          "items": {
            "$ref": "#/definitions/allotted-resource"
          }, 
          "type": "array"
        }
      }
    }, 
    "availability-zone": {
      "description": "Availability zone, a collection of compute hosts/pservers\n###### Related Nodes\n- TO cloud-region (PARENT of availability-zone, availability-zone BelongsTo cloud-region, MANY2ONE)(4)\n- TO complex( availability-zone LocatedIn complex, MANY2ONE)\n- TO service-capability( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM ctag-pool( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- FROM dvs-switch( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- FROM generic-vnf( generic-vnf Uses availability-zone, MANY2MANY)\n- FROM pserver( pserver MemberOf availability-zone, MANY2ONE)\n- FROM vce( vce Uses availability-zone, MANY2MANY)\n\n-(4) IF this TO node is deleted, this AVAILABILITY-ZONE is DELETED also\n-AVAILABILITY-ZONE cannot be deleted if related to CTAG-POOL,DVS-SWITCH,GENERIC-VNF,PSERVER,VCE\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone.  Unique across a cloud region", 
          "type": "string"
        }, 
        "hypervisor-type": {
          "description": "Type of hypervisor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "State that indicates whether the availability zone should be used, etc.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "availability-zone-name", 
        "hypervisor-type"
      ]
    }, 
    "availability-zones": {
      "description": "Collection of availability zones\n", 
      "properties": {
        "availability-zone": {
          "items": {
            "$ref": "#/definitions/availability-zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "az-and-dvs-switches": {
      "properties": {
        "availability-zone": {
          "$ref": "#/definitions/availability-zone", 
          "type": "object"
        }, 
        "dvs-switches": {
          "items": {
            "$ref": "#/definitions/dvs-switch"
          }, 
          "type": "array"
        }
      }
    }, 
    "business": {
      "description": "Namespace for business related constructs\n", 
      "properties": {
        "connectors": {
          "items": {
            "$ref": "#/definitions/connector"
          }, 
          "type": "array"
        }, 
        "customers": {
          "items": {
            "$ref": "#/definitions/customer"
          }, 
          "type": "array"
        }, 
        "lines-of-business": {
          "items": {
            "$ref": "#/definitions/line-of-business"
          }, 
          "type": "array"
        }, 
        "owning-entities": {
          "items": {
            "$ref": "#/definitions/owning-entity"
          }, 
          "type": "array"
        }, 
        "platforms": {
          "items": {
            "$ref": "#/definitions/platform"
          }, 
          "type": "array"
        }, 
        "projects": {
          "items": {
            "$ref": "#/definitions/project"
          }, 
          "type": "array"
        }
      }
    }, 
    "class-of-service": {
      "description": "###### Related Nodes\n- TO site-pair (PARENT of class-of-service, class-of-service BelongsTo site-pair, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this CLASS-OF-SERVICE is DELETED also\n", 
      "properties": {
        "cos": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "probe-id": {
          "description": "identifier of probe", 
          "type": "string"
        }, 
        "probe-type": {
          "description": "type of probe", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cos"
      ]
    }, 
    "classes-of-service": {
      "description": "class-of-service of probe\n", 
      "properties": {
        "class-of-service": {
          "items": {
            "$ref": "#/definitions/class-of-service"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-infrastructure": {
      "description": "Namespace for cloud infrastructure.\n", 
      "properties": {
        "cloud-regions": {
          "items": {
            "$ref": "#/definitions/cloud-region"
          }, 
          "type": "array"
        }, 
        "complexes": {
          "items": {
            "$ref": "#/definitions/complex"
          }, 
          "type": "array"
        }, 
        "network-profiles": {
          "items": {
            "$ref": "#/definitions/network-profile"
          }, 
          "type": "array"
        }, 
        "pservers": {
          "items": {
            "$ref": "#/definitions/pserver"
          }, 
          "type": "array"
        }, 
        "virtual-data-centers": {
          "items": {
            "$ref": "#/definitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "cloud-region": {
      "description": "cloud-region designates an installation of a cloud cluster or region or instantiation.\n###### Related Nodes\n- TO complex( cloud-region LocatedIn complex, MANY2ONE)\n- TO l3-network( cloud-region Uses l3-network, MANY2MANY)\n- TO zone( cloud-region LocatedIn zone, MANY2ONE)\n- FROM availability-zone (CHILD of cloud-region, availability-zone BelongsTo cloud-region, MANY2ONE)(1)\n- FROM dvs-switch (CHILD of cloud-region, dvs-switch BelongsTo cloud-region, MANY2ONE)\n- FROM esr-system-info (CHILD of cloud-region, esr-system-info BelongsTo cloud-region, MANY2ONE)(1)\n- FROM flavor (CHILD of cloud-region, flavor BelongsTo cloud-region, MANY2ONE)\n- FROM group-assignment (CHILD of cloud-region, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM image (CHILD of cloud-region, image BelongsTo cloud-region, MANY2ONE)\n- FROM logical-link( logical-link LocatedIn cloud-region, MANY2MANY)\n- FROM oam-network (CHILD of cloud-region, oam-network BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver LocatedIn cloud-region, MANY2ONE)\n- FROM snapshot (CHILD of cloud-region, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM tenant (CHILD of cloud-region, tenant BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv4-address-list (CHILD of cloud-region, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM vip-ipv6-address-list (CHILD of cloud-region, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- FROM volume-group (CHILD of cloud-region, volume-group BelongsTo cloud-region, MANY2ONE)\n\n-(1) IF this CLOUD-REGION node is deleted, this FROM node is DELETED also\n-CLOUD-REGION cannot be deleted if related to DVS-SWITCH,FLAVOR,GROUP-ASSIGNMENT,IMAGE,OAM-NETWORK,SNAPSHOT,TENANT,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST,VOLUME-GROUP\n", 
      "properties": {
        "availability-zones": {
          "items": {
            "$ref": "#/definitions/availability-zone"
          }, 
          "type": "array"
        }, 
        "cloud-epa-caps": {
          "description": "MultiVIM will discover and expose EPA capabilities.", 
          "type": "string"
        }, 
        "cloud-extra-info": {
          "description": "ESR inputs extra information about the VIM or Cloud which will be decoded by MultiVIM.", 
          "type": "string"
        }, 
        "cloud-owner": {
          "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
          "type": "string"
        }, 
        "cloud-region-id": {
          "description": "Identifier used by the vendor for the region. Second part of composite key", 
          "type": "string"
        }, 
        "cloud-region-version": {
          "description": "Software version employed at the site.  NOTE - THIS FIELD IS NOT KEPT UP TO DATE.", 
          "type": "string"
        }, 
        "cloud-type": {
          "description": "Type of the cloud (e.g., openstack)", 
          "type": "string"
        }, 
        "cloud-zone": {
          "description": "Zone where the cloud is homed.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "complex-name": {
          "description": "complex name for cloud-region instance.  NOTE - THIS FIELD IS NOT CORRECTLY POPULATED.", 
          "type": "string"
        }, 
        "dvs-switches": {
          "items": {
            "$ref": "#/definitions/dvs-switch"
          }, 
          "type": "array"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "flavors": {
          "items": {
            "$ref": "#/definitions/flavor"
          }, 
          "type": "array"
        }, 
        "group-assignments": {
          "items": {
            "$ref": "#/definitions/group-assignment"
          }, 
          "type": "array"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "images": {
          "items": {
            "$ref": "#/definitions/image"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "items": {
            "$ref": "#/definitions/oam-network"
          }, 
          "type": "array"
        }, 
        "owner-defined-type": {
          "description": "Cloud-owner defined type indicator (e.g., dcp, lcp)", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "snapshots": {
          "items": {
            "$ref": "#/definitions/snapshot"
          }, 
          "type": "array"
        }, 
        "sriov-automation": {
          "description": "Whether the cloud region supports (true) or does not support (false) SR-IOV automation.", 
          "type": "string"
        }, 
        "tenants": {
          "items": {
            "$ref": "#/definitions/tenant"
          }, 
          "type": "array"
        }, 
        "vip-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/vip-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "vip-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/vip-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "volume-groups": {
          "items": {
            "$ref": "#/definitions/volume-group"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "cloud-owner", 
        "cloud-region-id"
      ]
    }, 
    "cloud-regions": {
      "properties": {
        "cloud-region": {
          "items": {
            "$ref": "#/definitions/cloud-region"
          }, 
          "type": "array"
        }
      }
    }, 
    "complex": {
      "description": "Collection of physical locations that can house cloud-regions.\n###### Related Nodes\n- TO l3-network( complex Uses l3-network, MANY2MANY)\n- FROM availability-zone( availability-zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn complex, MANY2ONE)\n- FROM ctag-pool (CHILD of complex, ctag-pool BelongsTo complex, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf LocatedIn complex, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo complex, MANY2MANY)\n- FROM pnf( pnf LocatedIn complex, MANY2ONE)\n- FROM pserver( pserver LocatedIn complex, MANY2ONE)\n- FROM vce( vce LocatedIn complex, MANY2MANY)\n- FROM volume-group( volume-group LocatedIn complex, MANY2ONE)\n- FROM vpls-pe( vpls-pe LocatedIn complex, MANY2ONE)\n- FROM zone( zone LocatedIn complex, MANY2ONE)\n\n-(1) IF this COMPLEX node is deleted, this FROM node is DELETED also\n-COMPLEX cannot be deleted if related to AVAILABILITY-ZONE,CLOUD-REGION,GENERIC-VNF,OAM-NETWORK,PNF,PSERVER,VCE,VOLUME-GROUP,VPLS-PE,ZONE\n", 
      "properties": {
        "city": {
          "type": "string"
        }, 
        "complex-name": {
          "description": "Gamma complex name for LCP instance.", 
          "type": "string"
        }, 
        "country": {
          "type": "string"
        }, 
        "ctag-pools": {
          "items": {
            "$ref": "#/definitions/ctag-pool"
          }, 
          "type": "array"
        }, 
        "data-center-code": {
          "description": "Data center code which can be an alternate way to identify a complex", 
          "type": "string"
        }, 
        "elevation": {
          "type": "string"
        }, 
        "identity-url": {
          "description": "URL of the keystone identity service", 
          "type": "string"
        }, 
        "lata": {
          "type": "string"
        }, 
        "latitude": {
          "type": "string"
        }, 
        "longitude": {
          "type": "string"
        }, 
        "physical-location-id": {
          "description": "Unique identifier for physical location, e.g., CLLI", 
          "type": "string"
        }, 
        "physical-location-type": {
          "description": "Type, e.g., central office, data center.", 
          "type": "string"
        }, 
        "postal-code": {
          "type": "string"
        }, 
        "region": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "state": {
          "type": "string"
        }, 
        "street1": {
          "type": "string"
        }, 
        "street2": {
          "type": "string"
        }
      }, 
      "required": [
        "physical-location-id", 
        "physical-location-type", 
        "street1", 
        "city", 
        "postal-code", 
        "country", 
        "region"
      ]
    }, 
    "complexes": {
      "description": "Collection of physical locations that can house cloud-regions.\n", 
      "properties": {
        "complex": {
          "items": {
            "$ref": "#/definitions/complex"
          }, 
          "type": "array"
        }
      }
    }, 
    "configuration": {
      "description": "Port Mirror Configuration.\n###### Related Nodes\n- TO allotted-resource( configuration Uses allotted-resource, ONE2ONE)(2)\n- TO logical-link( configuration Uses logical-link, ONE2MANY)(2)\n- FROM generic-vnf( generic-vnf Uses configuration, ONE2MANY)(3)\n- FROM metadatum (CHILD of configuration, metadatum BelongsTo configuration, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses configuration, ONE2MANY)\n\n-(1) IF this CONFIGURATION node is deleted, this FROM node is DELETED also\n-(2) IF this CONFIGURATION node is deleted, this TO node is DELETED also\n-(3) IF this FROM node is deleted, this CONFIGURATION is DELETED also\n", 
      "properties": {
        "configuration-id": {
          "description": "UUID assigned to configuration.", 
          "type": "string"
        }, 
        "configuration-name": {
          "description": "Name of the configuration.", 
          "type": "string"
        }, 
        "configuration-selflink": {
          "description": "URL to endpoint where AAI can get more details from SDN-GC.", 
          "type": "string"
        }, 
        "configuration-sub-type": {
          "description": "vprobe, pprobe.", 
          "type": "string"
        }, 
        "configuration-type": {
          "description": "port-mirroring-configuration.", 
          "type": "string"
        }, 
        "management-option": {
          "description": "Indicates the entity that will manage this feature. Could be an organization or the name of the application as well.", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-customization-id": {
          "description": "id of  the configuration used to customize the resource", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of the configuration.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "configuration-id", 
        "configuration-type", 
        "configuration-sub-type", 
        "orchestration-status", 
        "operational-status", 
        "configuration-selflink", 
        "model-customization-id"
      ]
    }, 
    "configurations": {
      "description": "Collection of configurations\n", 
      "properties": {
        "configuration": {
          "items": {
            "$ref": "#/definitions/configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "connector": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n###### Related Nodes\n- TO virtual-data-center( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM metadatum (CHILD of connector, metadatum BelongsTo connector, MANY2ONE)(1)\n- FROM service-instance( service-instance Uses connector, MANY2MANY)\n\n-(1) IF this CONNECTOR node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-instance-id": {
          "description": "Unique id of resource instance.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "resource-instance-id"
      ]
    }, 
    "connectors": {
      "description": "Collection of resource instances used to connect a variety of disparate inventory widgets\n", 
      "properties": {
        "connector": {
          "items": {
            "$ref": "#/definitions/connector"
          }, 
          "type": "array"
        }
      }
    }, 
    "constrained-element-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-constraint (PARENT of constrained-element-set, constrained-element-set BelongsTo model-constraint, MANY2ONE)(4)\n- TO model-element (PARENT of constrained-element-set, constrained-element-set BelongsTo model-element, MANY2ONE)(4)\n- FROM element-choice-set (CHILD of constrained-element-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(1)\n\n-(1) IF this CONSTRAINED-ELEMENT-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this CONSTRAINED-ELEMENT-SET is DELETED also\n", 
      "properties": {
        "check-type": {
          "type": "string"
        }, 
        "constrained-element-set-uuid": {
          "type": "string"
        }, 
        "constraint-type": {
          "type": "string"
        }, 
        "element-choice-sets": {
          "items": {
            "$ref": "#/definitions/element-choice-set"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "constrained-element-set-uuid", 
        "constraint-type", 
        "check-type"
      ]
    }, 
    "constrained-element-sets": {
      "properties": {
        "constrained-element-set": {
          "items": {
            "$ref": "#/definitions/constrained-element-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-assignment": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of ctag-assignment, ctag-assignment BelongsTo l3-network, MANY2ONE)(4)\n- FROM service-instance( service-instance Uses ctag-assignment, ONE2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "id.", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vlan-id-inner"
      ]
    }, 
    "ctag-assignments": {
      "properties": {
        "ctag-assignment": {
          "items": {
            "$ref": "#/definitions/ctag-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "ctag-pool": {
      "description": "A collection of C tags (vlan tags) grouped for a specific purpose.\n###### Related Nodes\n- TO availability-zone( ctag-pool AppliesTo availability-zone, MANY2MANY)\n- TO complex (PARENT of ctag-pool, ctag-pool BelongsTo complex, MANY2ONE)(4)\n- FROM generic-vnf( generic-vnf Uses ctag-pool, MANY2MANY)\n- FROM vpls-pe( vpls-pe Uses ctag-pool, MANY2MANY)\n\n-(4) IF this TO node is deleted, this CTAG-POOL is DELETED also\n", 
      "properties": {
        "availability-zone-name": {
          "description": "Name of the availability zone", 
          "type": "string"
        }, 
        "ctag-pool-purpose": {
          "description": "Describes what the intended purpose of this pool is.", 
          "type": "string"
        }, 
        "ctag-values": {
          "description": "Comma separated list of ctags", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "target-pe": {
          "description": "The Target provider edge router", 
          "type": "string"
        }
      }, 
      "required": [
        "target-pe", 
        "availability-zone-name", 
        "ctag-pool-purpose"
      ]
    }, 
    "ctag-pools": {
      "properties": {
        "ctag-pool": {
          "items": {
            "$ref": "#/definitions/ctag-pool"
          }, 
          "type": "array"
        }
      }
    }, 
    "customer": {
      "description": "customer identifiers to provide linkage back to BSS information.\n###### Related Nodes\n- FROM service-subscription (CHILD of customer, service-subscription BelongsTo customer, MANY2ONE)(1)\n\n-(1) IF this CUSTOMER node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "global-customer-id": {
          "description": "Global customer id used across ECOMP to uniquely identify customer.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-subscriptions": {
          "items": {
            "$ref": "#/definitions/service-subscription"
          }, 
          "type": "array"
        }, 
        "subscriber-name": {
          "description": "Subscriber name, an alternate way to retrieve a customer.", 
          "type": "string"
        }, 
        "subscriber-type": {
          "description": "Subscriber type, a way to provide VID with only the INFRA customers.", 
          "type": "string"
        }
      }, 
      "required": [
        "global-customer-id", 
        "subscriber-name", 
        "subscriber-type"
      ]
    }, 
    "customers": {
      "description": "Collection of customer identifiers to provide linkage back to BSS information.\n", 
      "properties": {
        "customer": {
          "items": {
            "$ref": "#/definitions/customer"
          }, 
          "type": "array"
        }
      }
    }, 
    "cvlan-tag-entry": {
      "properties": {
        "cvlan-tag": {
          "description": "See mis-na-virtualization-platform.yang", 
          "format": "int64", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "cvlan-tag"
      ]
    }, 
    "cvlan-tags": {
      "properties": {
        "cvlan-tag-entry": {
          "items": {
            "$ref": "#/definitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }
      }
    }, 
    "dvs-switch": {
      "description": "Digital virtual switch metadata, used by SDN-C to configure VCEs.  A&AI needs to receive this data from the PO deployment team and administer it using the provisioningTool.sh into A&AI. \n###### Related Nodes\n- TO availability-zone( dvs-switch AppliesTo availability-zone, MANY2MANY)\n- TO cloud-region (PARENT of dvs-switch, dvs-switch BelongsTo cloud-region, MANY2ONE)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "switch-name": {
          "description": "DVS switch name", 
          "type": "string"
        }, 
        "vcenter-url": {
          "description": "URL used to reach the vcenter", 
          "type": "string"
        }
      }, 
      "required": [
        "switch-name", 
        "vcenter-url"
      ]
    }, 
    "dvs-switches": {
      "description": "Collection of digital virtual switch metadata used for vmWare VCEs and GenericVnfs.\n", 
      "properties": {
        "dvs-switch": {
          "items": {
            "$ref": "#/definitions/dvs-switch"
          }, 
          "type": "array"
        }
      }
    }, 
    "edge-prop-names": {
      "description": "Internal map to define the properties of an edge and interpret the map EdgeRules\n", 
      "properties": {
        "SVC-INFRA": {
          "type": "string"
        }, 
        "contains-other-v": {
          "type": "string"
        }, 
        "delete-other-v": {
          "type": "string"
        }, 
        "direction": {
          "type": "string"
        }, 
        "edgeLabel": {
          "type": "string"
        }, 
        "multiplicityRule": {
          "type": "string"
        }, 
        "prevent-delete": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-request": {
      "properties": {
        "edge-tag": {
          "type": "string"
        }, 
        "include-node-filter": {
          "items": {
            "$ref": "#/definitions/include-node-filter"
          }, 
          "type": "array"
        }, 
        "result-detail": {
          "type": "string"
        }, 
        "secondary-filter": {
          "items": {
            "$ref": "#/definitions/secondary-filter"
          }, 
          "type": "array"
        }, 
        "start-node-filter": {
          "items": {
            "$ref": "#/definitions/start-node-filter"
          }, 
          "type": "array"
        }, 
        "start-node-type": {
          "type": "string"
        }
      }
    }, 
    "edge-tag-query-result": {
      "properties": {
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/definitions/inventory-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "element-choice-set": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO constrained-element-set (PARENT of element-choice-set, element-choice-set BelongsTo constrained-element-set, MANY2ONE)(4)\n- FROM model-element (CHILD of element-choice-set, model-element BelongsTo element-choice-set, MANY2ONE)(1)\n\n-(1) IF this ELEMENT-CHOICE-SET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ELEMENT-CHOICE-SET is DELETED also\n", 
      "properties": {
        "cardinality": {
          "type": "string"
        }, 
        "element-choice-set-name": {
          "type": "string"
        }, 
        "element-choice-set-uuid": {
          "type": "string"
        }, 
        "model-elements": {
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "element-choice-set-uuid", 
        "element-choice-set-name"
      ]
    }, 
    "element-choice-sets": {
      "properties": {
        "element-choice-set": {
          "items": {
            "$ref": "#/definitions/element-choice-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "entitlement": {
      "description": "Metadata for entitlement group.\n###### Related Nodes\n- TO generic-vnf (PARENT of entitlement, entitlement BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of entitlement, entitlement BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ENTITLEMENT is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-uuid": {
          "description": "Unique ID of an entitlement resource.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "entitlements": {
      "description": "Entitlements, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "entitlement": {
          "items": {
            "$ref": "#/definitions/entitlement"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-ems": {
      "description": "Persist EMS address information used by EMS driver.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-ems, esr-system-info BelongsTo esr-ems, MANY2ONE)(1)\n\n-(1) IF this ESR-EMS node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "ems-id": {
          "description": "Unique ID of EMS.", 
          "type": "string"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "ems-id"
      ]
    }, 
    "esr-ems-list": {
      "properties": {
        "esr-ems": {
          "items": {
            "$ref": "#/definitions/esr-ems"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-system-info": {
      "description": "Persist common address information of external systems.\n###### Related Nodes\n- TO cloud-region (PARENT of esr-system-info, esr-system-info BelongsTo cloud-region, MANY2ONE)(4)\n- TO esr-ems (PARENT of esr-system-info, esr-system-info BelongsTo esr-ems, MANY2ONE)(4)\n- TO esr-thirdparty-sdnc (PARENT of esr-system-info, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(4)\n- TO esr-vnfm (PARENT of esr-system-info, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this ESR-SYSTEM-INFO is DELETED also\n", 
      "properties": {
        "cloud-domain": {
          "description": "domain info for authentication.", 
          "type": "string"
        }, 
        "default-tenant": {
          "description": "default tenant of VIM.", 
          "type": "string"
        }, 
        "esr-system-info-id": {
          "description": "Unique ID of esr system info.", 
          "type": "string"
        }, 
        "ip-address": {
          "description": "service IP of ftp server.", 
          "type": "string"
        }, 
        "passive": {
          "description": "ftp passive mode or not.", 
          "type": "boolean"
        }, 
        "password": {
          "description": "password used to access external systems.", 
          "type": "string"
        }, 
        "port": {
          "description": "service port of ftp server.", 
          "type": "string"
        }, 
        "protocol": {
          "description": "protocol of third party SDNC, for example netconf/snmp.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "remote-path": {
          "description": "resource or performance data file path.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-url": {
          "description": "url used to access external systems.", 
          "type": "string"
        }, 
        "ssl-cacert": {
          "description": "ca file content if enabled ssl on auth-url.", 
          "type": "string"
        }, 
        "ssl-insecure": {
          "description": "Whether to verify VIM's certificate.", 
          "type": "boolean"
        }, 
        "system-name": {
          "description": "name of external system.", 
          "type": "string"
        }, 
        "system-status": {
          "description": "the status of external system.", 
          "type": "string"
        }, 
        "system-type": {
          "description": "it could be vim/vnfm/thirdparty-sdnc/ems-resource/ems-performance/ems-alarm.", 
          "type": "string"
        }, 
        "type": {
          "description": "type of external systems.", 
          "type": "string"
        }, 
        "user-name": {
          "description": "username used to access external systems.", 
          "type": "string"
        }, 
        "vendor": {
          "description": "vendor of external systems.", 
          "type": "string"
        }, 
        "version": {
          "description": "version of external systems.", 
          "type": "string"
        }
      }, 
      "required": [
        "esr-system-info-id", 
        "user-name", 
        "password", 
        "system-type"
      ]
    }, 
    "esr-system-info-list": {
      "description": "Collection of persistent block-level external system auth info.\n", 
      "properties": {
        "esr-system-info": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-thirdparty-sdnc": {
      "description": "Persist SDNC address information used by ONAP SDNC.\n###### Related Nodes\n- TO pnf( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM esr-system-info (CHILD of esr-thirdparty-sdnc, esr-system-info BelongsTo esr-thirdparty-sdnc, ONE2ONE)(1)\n\n-(1) IF this ESR-THIRDPARTY-SDNC node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "location": {
          "description": "used for DC type to indicate the location of SDNC, such as Core or Edge.", 
          "type": "string"
        }, 
        "product-name": {
          "description": "password used to access SDNC server.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "thirdparty-sdnc-id": {
          "description": "Unique ID of SDNC.", 
          "type": "string"
        }
      }, 
      "required": [
        "thirdparty-sdnc-id"
      ]
    }, 
    "esr-thirdparty-sdnc-list": {
      "properties": {
        "esr-thirdparty-sdnc": {
          "items": {
            "$ref": "#/definitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }
      }
    }, 
    "esr-vnfm": {
      "description": "Persist VNFM address information used by VF-C.\n###### Related Nodes\n- FROM esr-system-info (CHILD of esr-vnfm, esr-system-info BelongsTo esr-vnfm, ONE2ONE)(1)\n\n-(1) IF this ESR-VNFM node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "certificate-url": {
          "description": "certificate url of VNFM.", 
          "type": "string"
        }, 
        "esr-system-info-list": {
          "items": {
            "$ref": "#/definitions/esr-system-info"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vim-id": {
          "description": "indecate the VIM to deploy VNF.", 
          "type": "string"
        }, 
        "vnfm-id": {
          "description": "Unique ID of VNFM.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfm-id"
      ]
    }, 
    "esr-vnfm-list": {
      "properties": {
        "esr-vnfm": {
          "items": {
            "$ref": "#/definitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "external-system": {
      "description": "Namespace for external system.\n", 
      "properties": {
        "esr-ems-list": {
          "items": {
            "$ref": "#/definitions/esr-ems"
          }, 
          "type": "array"
        }, 
        "esr-thirdparty-sdnc-list": {
          "items": {
            "$ref": "#/definitions/esr-thirdparty-sdnc"
          }, 
          "type": "array"
        }, 
        "esr-vnfm-list": {
          "items": {
            "$ref": "#/definitions/esr-vnfm"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-properties": {
      "description": "Extra properties for inventory item for response list\n", 
      "properties": {
        "extra-property": {
          "items": {
            "$ref": "#/definitions/extra-property"
          }, 
          "type": "array"
        }
      }
    }, 
    "extra-property": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "flavor": {
      "description": "Openstack flavor.\n###### Related Nodes\n- TO cloud-region (PARENT of flavor, flavor BelongsTo cloud-region, MANY2ONE)\n- FROM vserver( vserver Uses flavor, MANY2ONE)\n\n-FLAVOR cannot be deleted if related to VSERVER\n", 
      "properties": {
        "flavor-disabled": {
          "description": "Boolean as to whether this flavor is no longer enabled", 
          "type": "boolean"
        }, 
        "flavor-disk": {
          "description": "Disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-ephemeral": {
          "description": "Amount of ephemeral disk space", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-id": {
          "description": "Flavor id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "flavor-is-public": {
          "description": "whether flavor is available to all users or private to the tenant it was created in.", 
          "type": "boolean"
        }, 
        "flavor-name": {
          "description": "Flavor name", 
          "type": "string"
        }, 
        "flavor-ram": {
          "description": "Amount of memory", 
          "format": "int32", 
          "type": "integer"
        }, 
        "flavor-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "flavor-swap": {
          "description": "amount of swap space allocation", 
          "type": "string"
        }, 
        "flavor-vcpus": {
          "description": "Number of CPUs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "flavor-id", 
        "flavor-name", 
        "flavor-selflink"
      ]
    }, 
    "flavors": {
      "description": "Collection of openstack flavors.\n", 
      "properties": {
        "flavor": {
          "items": {
            "$ref": "#/definitions/flavor"
          }, 
          "type": "array"
        }
      }
    }, 
    "generic-vnf": {
      "description": "General purpose VNF\n###### Related Nodes\n- TO availability-zone( generic-vnf Uses availability-zone, MANY2MANY)\n- TO complex( generic-vnf LocatedIn complex, MANY2MANY)\n- TO configuration( generic-vnf Uses configuration, ONE2MANY)(2)\n- TO ctag-pool( generic-vnf Uses ctag-pool, MANY2MANY)\n- TO instance-group( generic-vnf MemberOf instance-group, MANY2MANY)\n- TO ipsec-configuration( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- TO l3-network( generic-vnf Uses l3-network, MANY2MANY)\n- TO pnf( generic-vnf HostedOn pnf, MANY2MANY)\n- TO pserver( generic-vnf HostedOn pserver, MANY2MANY)\n- TO virtual-data-center( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- TO vnf-image( generic-vnf Uses vnf-image, MANY2ONE)\n- TO volume-group( generic-vnf DependsOn volume-group, ONE2MANY)\n- TO vserver( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM allotted-resource( allotted-resource PartOf generic-vnf, MANY2MANY)\n- FROM entitlement (CHILD of generic-vnf, entitlement BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM l-interface (CHILD of generic-vnf, l-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM lag-interface (CHILD of generic-vnf, lag-interface BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM license (CHILD of generic-vnf, license BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM line-of-business( line-of-business Uses generic-vnf, MANY2MANY)\n- FROM logical-link( logical-link BridgedTo generic-vnf, MANY2MANY)\n- FROM network-profile( network-profile AppliesTo generic-vnf, MANY2MANY)\n- FROM platform( platform Uses generic-vnf, MANY2MANY)\n- FROM service-instance( service-instance ComposedOf generic-vnf, ONE2MANY)\n- FROM site-pair-set( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM vf-module (CHILD of generic-vnf, vf-module BelongsTo generic-vnf, MANY2ONE)(1)\n- FROM vnfc( vnfc BelongsTo generic-vnf, MANY2ONE)(1)\n\n-(1) IF this GENERIC-VNF node is deleted, this FROM node is DELETED also\n-(2) IF this GENERIC-VNF node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "as-number": {
          "description": "as-number of the VNF", 
          "type": "string"
        }, 
        "encrypted-access-flag": {
          "description": "indicates whether generic-vnf access uses SSH", 
          "type": "boolean"
        }, 
        "entitlement-assignment-group-uuid": {
          "description": "UUID of the Entitlement group used for licensing VNFs, OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "entitlement-resource-uuid": {
          "description": "UUID of the specific entitlement resource.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "entitlements": {
          "items": {
            "$ref": "#/definitions/entitlement"
          }, 
          "type": "array"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by generic-vnf.", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Gateway address", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Prefix length for oam-address", 
          "format": "int32", 
          "type": "integer"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "job-id": {
          "description": "job id corresponding to vnf", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "license-assignment-group-uuid": {
          "description": "UUID of the license assignment group.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "license-key-uuid": {
          "description": "UUID of the actual license resource.  OBSOLETE -  See child relationships.", 
          "type": "string"
        }, 
        "licenses": {
          "items": {
            "$ref": "#/definitions/license"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "management-v6-address": {
          "description": "v6 management address", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "nf-function": {
          "description": "English description of Network function that the specific VNF deployment is providing", 
          "type": "string"
        }, 
        "nf-naming-code": {
          "description": "string assigned to this model used for naming purposes", 
          "type": "string"
        }, 
        "nf-role": {
          "description": "role in the network that this model will be providing", 
          "type": "string"
        }, 
        "nf-type": {
          "description": "Generic description of the type of NF", 
          "type": "string"
        }, 
        "nm-lan-v6-address": {
          "description": "v6 Loopback address", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Network Management profile of this VNF", 
          "type": "string"
        }, 
        "nnet": {
          "description": "number of network in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nshd": {
          "description": "number of associated SHD in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "nvm": {
          "description": "number of vms in vnf.", 
          "format": "int64", 
          "type": "integer"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.  Valid values are in-service-path and out-of-service-path.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, used by MSO.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-subzone": {
          "description": "represents sub zone of the rr plane", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not necessarily map to ASDC service models.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "summary-status": {
          "description": "details regarding the generic-vnf operation, PLEASE DISCONTINUE USE OF THIS FIELD.", 
          "type": "string"
        }, 
        "vcpu": {
          "description": "number of vcpus ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vcpu-units": {
          "description": "units associated with vcpu, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vdisk": {
          "description": "number of vdisks ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vdisk-units": {
          "description": "units associated with vdisk, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vf-modules": {
          "items": {
            "$ref": "#/definitions/vf-module"
          }, 
          "type": "array"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for S-TAG to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory": {
          "description": "number of GB of memory ordered for this instance of VNF, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vmemory-units": {
          "description": "units associated with vmemory, used for VNFs with no vservers/flavors, to be used only by uCPE", 
          "type": "string"
        }, 
        "vnf-discriptor-name": {
          "description": "vnf discriptor name", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-instance-id": {
          "description": "vnf instance id.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-package-name": {
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-type", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "generic-vnfs": {
      "description": "Collection of VNFs\n", 
      "properties": {
        "generic-vnf": {
          "items": {
            "$ref": "#/definitions/generic-vnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "group-assignment": {
      "description": "Openstack group-assignment used to store exclusivity groups (EG).\n###### Related Nodes\n- TO cloud-region (PARENT of group-assignment, group-assignment BelongsTo cloud-region, MANY2ONE)\n- FROM pserver( pserver MemberOf group-assignment, MANY2ONE)\n- FROM tenant( tenant MemberOf group-assignment, MANY2MANY)\n", 
      "properties": {
        "group-description": {
          "description": "Group description - description of the group", 
          "type": "string"
        }, 
        "group-id": {
          "description": "Group id, expected to be unique across cloud-region.", 
          "type": "string"
        }, 
        "group-name": {
          "description": "Group name - name assigned to the group", 
          "type": "string"
        }, 
        "group-type": {
          "description": "Group type - the type of group this instance refers to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "group-id", 
        "group-type", 
        "group-name"
      ]
    }, 
    "group-assignments": {
      "description": "Collection of openstack group assignments\n", 
      "properties": {
        "group-assignment": {
          "items": {
            "$ref": "#/definitions/group-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "host-route": {
      "description": "###### Related Nodes\n- TO subnet (PARENT of host-route, host-route BelongsTo subnet, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this HOST-ROUTE is DELETED also\n", 
      "properties": {
        "host-route-id": {
          "description": "host-route id", 
          "type": "string"
        }, 
        "next-hop": {
          "description": "Could be ip-address, hostname, or service-instance", 
          "type": "string"
        }, 
        "next-hop-type": {
          "description": "Should be ip-address, hostname, or service-instance to match next-hop", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-prefix": {
          "description": "subnet prefix", 
          "type": "string"
        }
      }, 
      "required": [
        "host-route-id", 
        "route-prefix", 
        "next-hop"
      ]
    }, 
    "host-routes": {
      "properties": {
        "host-route": {
          "items": {
            "$ref": "#/definitions/host-route"
          }, 
          "type": "array"
        }
      }
    }, 
    "image": {
      "description": "Openstack image.\n###### Related Nodes\n- TO cloud-region (PARENT of image, image BelongsTo cloud-region, MANY2ONE)\n- FROM metadatum (CHILD of image, metadatum BelongsTo image, MANY2ONE)(1)\n- FROM vserver( vserver Uses image, MANY2ONE)\n\n-(1) IF this IMAGE node is deleted, this FROM node is DELETED also\n-IMAGE cannot be deleted if related to VSERVER\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "image-architecture": {
          "description": "Operating system architecture.", 
          "type": "string"
        }, 
        "image-id": {
          "description": "Image id, expected to be unique across cloud region", 
          "type": "string"
        }, 
        "image-name": {
          "description": "Image name", 
          "type": "string"
        }, 
        "image-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "image-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "image-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "image-id", 
        "image-name", 
        "image-os-distro", 
        "image-os-version", 
        "image-selflink"
      ]
    }, 
    "images": {
      "description": "Collectio of Openstack images.\n", 
      "properties": {
        "image": {
          "items": {
            "$ref": "#/definitions/image"
          }, 
          "type": "array"
        }
      }
    }, 
    "include-node-filter": {
      "properties": {
        "include-node-type": {
          "type": "string"
        }
      }
    }, 
    "instance-filter": {
      "description": "InstanceFilter for performing a named-query or model query\n"
    }, 
    "instance-filters": {
      "description": "InstanceFilters for performing a named-query or model query\n", 
      "properties": {
        "instance-filter": {
          "items": {
            "$ref": "#/definitions/instance-filter"
          }, 
          "type": "array"
        }
      }
    }, 
    "instance-group": {
      "description": "General mechanism for grouping instances\n###### Related Nodes\n- TO model( instance-group Targets model, MANY2MANY)\n- FROM allotted-resource( allotted-resource MemberOf instance-group, MANY2MANY)\n- FROM generic-vnf( generic-vnf MemberOf instance-group, MANY2MANY)\n- FROM l-interface( l-interface MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM l3-network( l3-network MemberOf instance-group, MANY2MANY)\n- FROM pnf( pnf MemberOf instance-group, MANY2MANY)\n- FROM service-instance( service-instance MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- FROM vnfc( vnfc MemberOf instance-group, MANY2MANY)\n", 
      "properties": {
        "description": {
          "description": "Descriptive text to help identify the usage of this instance-group", 
          "type": "string"
        }, 
        "id": {
          "description": "Instance Group ID, UUID assigned to this instance.", 
          "type": "string"
        }, 
        "instance-group-role": {
          "description": "role of the instance group.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "ASDC model version uid for this resource model.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "sub-type": {
          "description": "Valid values for ha type are [geo-activeactive, geo-activestandby, local-activeactive, local-activestandby]", 
          "type": "string"
        }, 
        "type": {
          "description": "Only valid value today is lower case ha for high availability", 
          "type": "string"
        }
      }, 
      "required": [
        "id", 
        "description", 
        "type"
      ]
    }, 
    "instance-groups": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "instance-group": {
          "items": {
            "$ref": "#/definitions/instance-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory": {
      "properties": {
        "business": {
          "$ref": "#/definitions/business", 
          "type": "object"
        }, 
        "cloud-infrastructure": {
          "$ref": "#/definitions/cloud-infrastructure", 
          "type": "object"
        }, 
        "external-system": {
          "$ref": "#/definitions/external-system", 
          "type": "object"
        }, 
        "network": {
          "$ref": "#/definitions/network", 
          "type": "object"
        }, 
        "service-design-and-creation": {
          "$ref": "#/definitions/service-design-and-creation", 
          "type": "object"
        }
      }
    }, 
    "inventory-item": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/definitions/inventory-item-data"
          }, 
          "type": "array"
        }, 
        "inventory-item-link": {
          "type": "string"
        }, 
        "inventory-item-type": {
          "type": "string"
        }, 
        "tagged-inventory-item-list": {
          "items": {
            "$ref": "#/definitions/inventory-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "inventory-item-data": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-item": {
      "description": "Inventory item for response list\n", 
      "properties": {
        "extra-properties": {
          "$ref": "#/definitions/extra-properties", 
          "type": "object"
        }, 
        "inventory-response-items": {
          "$ref": "#/definitions/inventory-response-items", 
          "type": "object"
        }, 
        "model-name": {
          "type": "string"
        }
      }
    }, 
    "inventory-response-items": {
      "description": "Container for inventory items in response list\n", 
      "properties": {
        "inventory-response-item": {
          "items": {
            "$ref": "#/definitions/inventory-response-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "ipsec-configuration": {
      "description": "IPSec configuration node will contain various configuration data for the NMTE VNF. This node will have an edge to the generic-vnf (vnf type = TE). Starting 1607, this data will be populated by SDN-C\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses ipsec-configuration, MANY2ONE)\n- FROM vig-server (CHILD of ipsec-configuration, vig-server BelongsTo ipsec-configuration, MANY2ONE)(1)\n\n-(1) IF this IPSEC-CONFIGURATION node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "dpd-frequency": {
          "description": "Maximum number of DPD before claiming the tunnel is down", 
          "type": "string"
        }, 
        "dpd-interval": {
          "description": "The time between DPD probe", 
          "type": "string"
        }, 
        "ike-version": {
          "description": "can be 1 or 2", 
          "type": "string"
        }, 
        "ikev1-am-group-id": {
          "description": "Group name defined in VIG for clients using aggressive mode", 
          "type": "string"
        }, 
        "ikev1-am-password": {
          "description": "pre-shared key for the above group name", 
          "type": "string"
        }, 
        "ikev1-authentication": {
          "description": "Contains values like md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ikev1-dh-group": {
          "description": "Diffie-Hellman group like DH-GROUP2, DH-GROUP5, DH-GROUP14", 
          "type": "string"
        }, 
        "ikev1-encryption": {
          "description": "Encyption values like 3des-cbc, des-cbc, aes-128-cbc,?aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ikev1-sa-lifetime": {
          "description": "Lifetime for IKEv1 SA", 
          "type": "string"
        }, 
        "ipsec-authentication": {
          "description": "md5, sha1, sha256, sha384", 
          "type": "string"
        }, 
        "ipsec-configuration-id": {
          "description": "UUID of this configuration", 
          "type": "string"
        }, 
        "ipsec-encryption": {
          "description": "3des-cbc, des-cbc, aes-128-cbc,?aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "ipsec-pfs": {
          "description": "enable PFS or not", 
          "type": "string"
        }, 
        "ipsec-sa-lifetime": {
          "description": "Life time for IPSec SA", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "requested-customer-name": {
          "description": "If the DMZ is a custom DMZ, this field will indicate the customer information", 
          "type": "string"
        }, 
        "requested-dmz-type": {
          "description": "ATT can offer a shared DMZ or a DMZ specific to a customer", 
          "type": "string"
        }, 
        "requested-encryption-strength": {
          "description": "Encryption values like 3des-cbc, des-cbc, aes-128-cbc, aes-192-cbc, aes-265-cbc", 
          "type": "string"
        }, 
        "requested-vig-address-type": {
          "description": "Indicate the type of VIG server like AVPN, INTERNET, BOTH", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "shared-dmz-network-address": {
          "description": "Network address of shared DMZ", 
          "type": "string"
        }, 
        "vig-servers": {
          "items": {
            "$ref": "#/definitions/vig-server"
          }, 
          "type": "array"
        }, 
        "xauth-user-password": {
          "description": "Encrypted using the Juniper $9$ algorithm", 
          "type": "string"
        }, 
        "xauth-userid": {
          "description": "user ID for xAuth, sm-user,ucpeHostName,nmteHostName", 
          "type": "string"
        }
      }, 
      "required": [
        "ipsec-configuration-id"
      ]
    }, 
    "ipsec-configurations": {
      "properties": {
        "ipsec-configuration": {
          "items": {
            "$ref": "#/definitions/ipsec-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "key-data": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "l-interface": {
      "description": "Logical interfaces, e.g., a vnic.\n###### Related Nodes\n- TO generic-vnf (PARENT of l-interface, l-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( l-interface MemberOf instance-group, MANY2MANY)\n- TO l-interface( l-interface BelongsTo l-interface, MANY2ONE)(4)\n- TO logical-link( l-interface LinksTo logical-link, MANY2MANY)(2)\n- TO newvce (PARENT of l-interface, l-interface BelongsTo newvce, MANY2ONE)(4)\n- TO p-interface (PARENT of l-interface, l-interface BindsTo p-interface, MANY2ONE)(4)\n- TO vserver (PARENT of l-interface, l-interface BindsTo vserver, MANY2ONE)(4)\n- TO lag-interface (PARENT of l-interface, l-interface BelongsTo lag-interface, MANY2ONE)(4)\n- FROM allotted-resource( allotted-resource Uses l-interface, ONE2MANY)\n- FROM l-interface (PARENT of l-interface, l-interface BelongsTo l-interface, MANY2ONE)(4)\n- FROM sriov-vf (CHILD of l-interface, sriov-vf BelongsTo l-interface, ONE2ONE)(1)\n- FROM vlan (CHILD of l-interface, vlan LinksTo l-interface, MANY2ONE)(1)\n- FROM l3-interface-ipv4-address-list (CHILD of l-interface, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of l-interface, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(1)\n\n-(1) IF this L-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this L-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this L-INTERFACE is DELETED also\n", 
      "properties": {
        "allowed-address-pairs": {
          "description": "Freeform field for storing an ip address, list of ip addresses or a subnet block.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name given to the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "E.g., CUSTOMER, UPLINK, etc.", 
          "type": "string"
        }, 
        "is-ip-unnumbered": {
          "description": "Flag indicating the interface uses the IP Unnumbered configuration.", 
          "type": "boolean"
        }, 
        "is-port-mirrored": {
          "description": "boolean indicatating whether or not port is a mirrored.", 
          "type": "boolean"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "macaddr": {
          "description": "MAC address for the interface", 
          "type": "string"
        }, 
        "management-option": {
          "description": "Whether A&AI should be managing this interface of not. Could have value like CUSTOMER", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of the logical interface. Valid values [PREPROV/NVTPROV/PROV].", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "sriov-vfs": {
          "items": {
            "$ref": "#/definitions/sriov-vf"
          }, 
          "type": "array"
        }, 
        "v6-wan-link-ip": {
          "description": "Questionably placed - v6 ip addr of this interface (is in vr-lan-interface from Mary B.", 
          "type": "string"
        }, 
        "vlans": {
          "items": {
            "$ref": "#/definitions/vlan"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "interface-name", 
        "is-port-mirrored", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "l-interfaces": {
      "description": "Collection of logical interfaces.\n", 
      "properties": {
        "l-interface": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "l3-interface-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO instance-group( l3-interface-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv4-address-list, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV4-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv4-address"
      ]
    }, 
    "l3-interface-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO instance-group( l3-interface-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO l-interface (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo l-interface, MANY2ONE)(4)\n- TO l3-network( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- TO subnet( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- TO vlan (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(4)\n- TO vnfc (PARENT of l3-interface-ipv6-address-list, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this L3-INTERFACE-IPV6-ADDRESS-LIST is DELETED also\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "l3-interface-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "l3-interface-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "l3-interface-ipv6-address"
      ]
    }, 
    "l3-network": {
      "description": "Generic network definition\n###### Related Nodes\n- TO instance-group( l3-network MemberOf instance-group, MANY2MANY)\n- TO network-policy( l3-network Uses network-policy, MANY2MANY)\n- TO route-table-reference( l3-network Uses route-table-reference, MANY2MANY)\n- TO vpn-binding( l3-network Uses vpn-binding, MANY2MANY)\n- FROM allotted-resource( allotted-resource PartOf l3-network, MANY2MANY)\n- FROM cloud-region( cloud-region Uses l3-network, MANY2MANY)\n- FROM complex( complex Uses l3-network, MANY2MANY)\n- FROM ctag-assignment (CHILD of l3-network, ctag-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM generic-vnf( generic-vnf Uses l3-network, MANY2MANY)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf l3-network, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf l3-network, MANY2MANY)\n- FROM segmentation-assignment (CHILD of l3-network, segmentation-assignment BelongsTo l3-network, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf l3-network, ONE2MANY)\n- FROM subnet (CHILD of l3-network, subnet BelongsTo l3-network, MANY2ONE)(1)\n- FROM tenant( tenant Uses l3-network, MANY2MANY)\n- FROM vf-module( vf-module DependsOn l3-network, MANY2MANY)\n\n-(1) IF this L3-NETWORK node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "contrail-network-fqdn": {
          "description": "Contrail FQDN for the network", 
          "type": "string"
        }, 
        "ctag-assignments": {
          "items": {
            "$ref": "#/definitions/ctag-assignment"
          }, 
          "type": "array"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "is-bound-to-vpn": {
          "description": "Set to true if bound to VPN", 
          "type": "boolean"
        }, 
        "is-external-network": {
          "description": "boolean indicatating whether or not network is an external network.", 
          "type": "boolean"
        }, 
        "is-provider-network": {
          "description": "boolean indicatating whether or not network is a provider network.", 
          "type": "boolean"
        }, 
        "is-shared-network": {
          "description": "boolean indicatating whether or not network is a shared network.", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "network-id": {
          "description": "Network ID, should be uuid. Unique across A&AI.", 
          "type": "string"
        }, 
        "network-name": {
          "description": "Name of the network, governed by some naming convention..", 
          "type": "string"
        }, 
        "network-role": {
          "description": "Role the network plans - who defines these values?", 
          "type": "string"
        }, 
        "network-role-instance": {
          "description": "network role instance", 
          "format": "int64", 
          "type": "integer"
        }, 
        "network-technology": {
          "description": "Network technology - who defines these values?", 
          "type": "string"
        }, 
        "network-type": {
          "description": "Type of the network - who defines these values?", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "physical-network-name": {
          "description": "Name associated with the physical network.", 
          "type": "string"
        }, 
        "relationship-list": {
          "description": "Relates to tenant (or is it a child of tenant), complex, service, vpn-binding", 
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "segmentation-assignments": {
          "items": {
            "$ref": "#/definitions/segmentation-assignment"
          }, 
          "type": "array"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service from ASDC.  Does not strictly map to ASDC services.  SOON TO BE DEPRECATED", 
          "type": "string"
        }, 
        "subnets": {
          "items": {
            "$ref": "#/definitions/subnet"
          }, 
          "type": "array"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-id", 
        "is-bound-to-vpn", 
        "is-provider-network", 
        "is-shared-network", 
        "is-external-network"
      ]
    }, 
    "l3-networks": {
      "properties": {
        "l3-network": {
          "items": {
            "$ref": "#/definitions/l3-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-interface": {
      "description": "Link aggregate interface\n###### Related Nodes\n- TO generic-vnf (PARENT of lag-interface, lag-interface BelongsTo generic-vnf, MANY2ONE)(4)\n- TO lag-link( lag-interface LinksTo lag-link, MANY2MANY)(2)\n- TO logical-link( lag-interface Uses logical-link, MANY2MANY)(2)\n- TO p-interface( lag-interface Uses p-interface, MANY2MANY)\n- TO pnf (PARENT of lag-interface, lag-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of lag-interface, lag-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of lag-interface, lag-interface BindsTo vpls-pe, MANY2ONE)(4)\n- FROM l-interface (CHILD of lag-interface, l-interface BelongsTo lag-interface, MANY2ONE)(1)\n\n-(1) IF this LAG-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this LAG-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this LAG-INTERFACE is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-description": {
          "description": "Human friendly text regarding this interface.", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "ID of interface", 
          "type": "string"
        }, 
        "interface-name": {
          "description": "Name that identifies the link aggregate interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "lag-interfaces": {
      "description": "Collection of link aggregate interfaces.\n", 
      "properties": {
        "lag-interface": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "lag-link": {
      "description": "LAG links can connect lag-interfaces\n###### Related Nodes\n- FROM lag-interface( lag-interface LinksTo lag-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses lag-link, MANY2MANY)\n\n-(3) IF this FROM node is deleted, this LAG-LINK is DELETED also\n", 
      "properties": {
        "link-name": {
          "description": "Alphabetical concatenation of lag-interface names", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "lag-links": {
      "description": "Collection of link aggregation connections\n", 
      "properties": {
        "lag-link": {
          "items": {
            "$ref": "#/definitions/lag-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "license": {
      "description": "Metadata for license group.\n###### Related Nodes\n- TO generic-vnf (PARENT of license, license BelongsTo generic-vnf, MANY2ONE)(4)\n- TO vce (PARENT of license, license BelongsTo vce, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this LICENSE is DELETED also\n", 
      "properties": {
        "group-uuid": {
          "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-uuid": {
          "description": "Unique ID of a license resource.", 
          "type": "string"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "group-uuid", 
        "resource-uuid"
      ]
    }, 
    "licenses": {
      "description": "Licenses to be allocated across resources, keyed by group-uuid and resource-uuid, related to license management\n", 
      "properties": {
        "license": {
          "items": {
            "$ref": "#/definitions/license"
          }, 
          "type": "array"
        }
      }
    }, 
    "line-of-business": {
      "description": "describes a line-of-business\n###### Related Nodes\n- TO generic-vnf( line-of-business Uses generic-vnf, MANY2MANY)\n", 
      "properties": {
        "line-of-business-name": {
          "description": "Name of the line-of-business (product)", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "line-of-business-name"
      ]
    }, 
    "lines-of-business": {
      "description": "Collection of lines-of-business\n", 
      "properties": {
        "line-of-business": {
          "items": {
            "$ref": "#/definitions/line-of-business"
          }, 
          "type": "array"
        }
      }
    }, 
    "logical-link": {
      "description": "Logical links generally connect l-interfaces but are used to express logical connectivity between two points\n###### Related Nodes\n- TO cloud-region( logical-link LocatedIn cloud-region, MANY2MANY)\n- TO generic-vnf( logical-link BridgedTo generic-vnf, MANY2MANY)\n- TO lag-link( logical-link Uses lag-link, MANY2MANY)\n- TO logical-link( logical-link Uses logical-link, MANY2MANY)\n- TO pnf( logical-link BridgedTo pnf, MANY2MANY)\n- TO pserver( logical-link BridgedTo pserver, MANY2MANY)\n- TO virtual-data-center( logical-link LocatedIn virtual-data-center, MANY2MANY)\n- TO vpn-binding( logical-link Uses vpn-binding, MANY2MANY)\n- FROM configuration( configuration Uses logical-link, ONE2MANY)(3)\n- FROM l-interface( l-interface LinksTo logical-link, MANY2MANY)(3)\n- FROM lag-interface( lag-interface Uses logical-link, MANY2MANY)(3)\n- FROM logical-link( logical-link Uses logical-link, MANY2MANY)\n- FROM p-interface( p-interface LinksTo logical-link, MANY2ONE)\n- FROM service-instance( service-instance Uses logical-link, MANY2MANY)(3)\n- FROM vlan( vlan Uses logical-link, MANY2MANY)(3)\n\n-(3) IF this FROM node is deleted, this LOGICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit id", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "ip-version": {
          "description": "v4, v6, or ds for dual stack", 
          "type": "string"
        }, 
        "link-id": {
          "description": "UUID of the logical-link, SDNC generates this.", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
          "type": "string"
        }, 
        "link-name2": {
          "description": "Alias or alternate name (CLCI or D1 name).", 
          "type": "string"
        }, 
        "link-role": {
          "description": "Indication of the network use of the logical link.", 
          "type": "string"
        }, 
        "link-type": {
          "description": "Type of logical link, e.g., evc", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indication of operational status of the logical link.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "purpose": {
          "description": "Reason for this entity, role it is playing", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-protocol": {
          "description": "For example, static or BGP", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name", 
        "in-maint", 
        "link-type"
      ]
    }, 
    "logical-links": {
      "description": "Collection of logical connections\n", 
      "properties": {
        "logical-link": {
          "items": {
            "$ref": "#/definitions/logical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadata": {
      "description": "Collection of metadatum (key/value pairs)\n", 
      "properties": {
        "metadatum": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }
      }
    }, 
    "metadatum": {
      "description": "Key/value pairs\n###### Related Nodes\n- TO configuration (PARENT of metadatum, metadatum BelongsTo configuration, MANY2ONE)(4)\n- TO connector (PARENT of metadatum, metadatum BelongsTo connector, MANY2ONE)(4)\n- TO image (PARENT of metadatum, metadatum BelongsTo image, MANY2ONE)(4)\n- TO model-ver (PARENT of metadatum, metadatum BelongsTo model-ver, MANY2ONE)(4)\n- TO service-instance (PARENT of metadatum, metadatum BelongsTo service-instance, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this METADATUM is DELETED also\n", 
      "properties": {
        "metaname": {
          "type": "string"
        }, 
        "metaval": {
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "metaname", 
        "metaval"
      ]
    }, 
    "model": {
      "description": "Subgraph definition provided by ASDC to describe an inventory asset and its connections related to ASDC models, independent of version\n###### Related Nodes\n- FROM instance-group( instance-group Targets model, MANY2MANY)\n- FROM model-ver (CHILD of model, model-ver BelongsTo model, MANY2ONE)(1)\n- FROM named-query( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element( named-query-element IsA model, MANY2ONE)\n\n-(1) IF this MODEL node is deleted, this FROM node is DELETED also\n-MODEL cannot be deleted if related to INSTANCE-GROUP,NAMED-QUERY,NAMED-QUERY-ELEMENT\n", 
      "properties": {
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-vers": {
          "items": {
            "$ref": "#/definitions/model-ver"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-type"
      ]
    }, 
    "model-and-named-query-search": {
      "description": "ModelAndNamedQuerySearch holds query-parameters and instance-properties for performing a named-query or model query\n", 
      "properties": {
        "instance-filters": {
          "$ref": "#/definitions/instance-filters", 
          "type": "object"
        }, 
        "query-parameters": {
          "$ref": "#/definitions/query-parameters", 
          "type": "object"
        }, 
        "secondary-filter-cut-point": {
          "type": "string"
        }, 
        "secondary-filts": {
          "$ref": "#/definitions/secondary-filts", 
          "type": "object"
        }, 
        "top-node-type": {
          "type": "string"
        }
      }
    }, 
    "model-constraint": {
      "description": "This is how we would capture constraints defining allowed sets of elements.\n###### Related Nodes\n- TO model-element (PARENT of model-constraint, model-constraint BelongsTo model-element, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-constraint, constrained-element-set BelongsTo model-constraint, MANY2ONE)(1)\n\n-(1) IF this MODEL-CONSTRAINT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constrained-element-set-uuid-to-replace": {
          "type": "string"
        }, 
        "constrained-element-sets": {
          "items": {
            "$ref": "#/definitions/constrained-element-set"
          }, 
          "type": "array"
        }, 
        "model-constraint-uuid": {
          "type": "string"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-constraint-uuid", 
        "constrained-element-set-uuid-to-replace"
      ]
    }, 
    "model-constraints": {
      "properties": {
        "model-constraint": {
          "items": {
            "$ref": "#/definitions/model-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-element": {
      "description": "Defines how other models combine to make up a higher-level model.\n###### Related Nodes\n- TO element-choice-set (PARENT of model-element, model-element BelongsTo element-choice-set, MANY2ONE)(4)\n- TO model-element( model-element BelongsTo model-element, MANY2ONE)(4)\n- TO model-ver( model-element IsA model-ver, MANY2ONE)\n- TO model-ver (PARENT of model-element, model-element BelongsTo model-ver, MANY2ONE)(4)\n- FROM constrained-element-set (CHILD of model-element, constrained-element-set BelongsTo model-element, MANY2ONE)(1)\n- FROM model-constraint (CHILD of model-element, model-constraint BelongsTo model-element, MANY2ONE)(1)\n- FROM model-element (PARENT of model-element, model-element BelongsTo model-element, MANY2ONE)(4)\n\n-(1) IF this MODEL-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-ELEMENT is DELETED also\n", 
      "properties": {
        "cardinality": {
          "description": "How many of this type of element are required/allowed", 
          "type": "string"
        }, 
        "linkage-points": {
          "type": "string"
        }, 
        "model-constraints": {
          "description": "Describes new constraints on this model element that are not part of that model's definition", 
          "items": {
            "$ref": "#/definitions/model-constraint"
          }, 
          "type": "array"
        }, 
        "model-element-uuid": {
          "type": "string"
        }, 
        "model-elements": {
          "description": "Defines how other models combine to make up a higher-level model", 
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }, 
        "new-data-del-flag": {
          "description": "Indicates whether this element was created as part of instantiation from this model", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-element-uuid", 
        "new-data-del-flag", 
        "cardinality"
      ]
    }, 
    "model-elements": {
      "properties": {
        "model-element": {
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "model-ver": {
      "description": "Subgraph definition provided by ASDC to describe a specific version of an inventory asset and its connections related to ASDC models\n###### Related Nodes\n- TO model (PARENT of model-ver, model-ver BelongsTo model, MANY2ONE)(4)\n- FROM metadatum (CHILD of model-ver, metadatum BelongsTo model-ver, MANY2ONE)(1)\n- FROM model-element( model-element IsA model-ver, MANY2ONE)\n- FROM model-element (CHILD of model-ver, model-element BelongsTo model-ver, MANY2ONE)(1)\n\n-(1) IF this MODEL-VER node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this MODEL-VER is DELETED also\n-MODEL-VER cannot be deleted if related to MODEL-ELEMENT\n", 
      "properties": {
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-elements": {
          "items": {
            "$ref": "#/definitions/model-element"
          }, 
          "type": "array"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "model-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-version-id", 
        "model-name", 
        "model-version"
      ]
    }, 
    "model-vers": {
      "properties": {
        "model-ver": {
          "items": {
            "$ref": "#/definitions/model-ver"
          }, 
          "type": "array"
        }
      }
    }, 
    "models": {
      "description": "Collection of subgraph definitions provided by ASDC to describe the inventory assets and their connections related to ASDC models\n", 
      "properties": {
        "model": {
          "items": {
            "$ref": "#/definitions/model"
          }, 
          "type": "array"
        }
      }
    }, 
    "multicast-configuration": {
      "description": "###### Related Nodes\n- FROM vlan( vlan Uses multicast-configuration, MANY2MANY)\n", 
      "properties": {
        "multicast-configuration-id": {
          "description": "Unique id of multicast configuration.", 
          "type": "string"
        }, 
        "multicast-protocol": {
          "description": "protocol of multicast configuration", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "rp-type": {
          "description": "rp type of multicast configuration", 
          "type": "string"
        }
      }, 
      "required": [
        "multicast-configuration-id", 
        "multicast-protocol", 
        "rp-type"
      ]
    }, 
    "multicast-configurations": {
      "description": "multicast configuration of generic-vnf ip-address\n", 
      "properties": {
        "multicast-configuration": {
          "items": {
            "$ref": "#/definitions/multicast-configuration"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-queries": {
      "properties": {
        "named-query": {
          "items": {
            "$ref": "#/definitions/named-query"
          }, 
          "type": "array"
        }
      }
    }, 
    "named-query": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query AppliesTo model, ONE2MANY)\n- FROM named-query-element (CHILD of named-query, named-query-element BelongsTo named-query, ONE2ONE)(1)\n\n-(1) IF this NAMED-QUERY node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "description": {
          "type": "string"
        }, 
        "named-query-elements": {
          "items": {
            "$ref": "#/definitions/named-query-element"
          }, 
          "type": "array"
        }, 
        "named-query-name": {
          "type": "string"
        }, 
        "named-query-uuid": {
          "type": "string"
        }, 
        "named-query-version": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "required-input-param": {
          "type": "string"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-uuid", 
        "named-query-name", 
        "named-query-version"
      ]
    }, 
    "named-query-element": {
      "description": "TBD\n###### Related Nodes\n- TO model( named-query-element IsA model, MANY2ONE)\n- TO named-query-element( named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- TO named-query (PARENT of named-query-element, named-query-element BelongsTo named-query, ONE2ONE)(4)\n- FROM named-query-element (PARENT of named-query-element, named-query-element BelongsTo named-query-element, MANY2ONE)(4)\n- FROM property-constraint (CHILD of named-query-element, property-constraint BelongsTo named-query-element, MANY2ONE)(1)\n- FROM related-lookup (CHILD of named-query-element, related-lookup BelongsTo named-query-element, MANY2ONE)(1)\n\n-(1) IF this NAMED-QUERY-ELEMENT node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this NAMED-QUERY-ELEMENT is DELETED also\n", 
      "properties": {
        "do-not-output": {
          "type": "string"
        }, 
        "named-query-element-uuid": {
          "type": "string"
        }, 
        "named-query-elements": {
          "items": {
            "$ref": "#/definitions/named-query-element"
          }, 
          "type": "array"
        }, 
        "property-collect-list": {
          "type": "string"
        }, 
        "property-constraints": {
          "items": {
            "$ref": "#/definitions/property-constraint"
          }, 
          "type": "array"
        }, 
        "property-limit-desc": {
          "type": "string"
        }, 
        "related-lookups": {
          "items": {
            "$ref": "#/definitions/related-lookup"
          }, 
          "type": "array"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "named-query-element-uuid"
      ]
    }, 
    "named-query-elements": {
      "properties": {
        "named-query-element": {
          "items": {
            "$ref": "#/definitions/named-query-element"
          }, 
          "type": "array"
        }
      }
    }, 
    "network": {
      "description": "Namespace for network inventory resources.\n", 
      "properties": {
        "configurations": {
          "items": {
            "$ref": "#/definitions/configuration"
          }, 
          "type": "array"
        }, 
        "generic-vnfs": {
          "items": {
            "$ref": "#/definitions/generic-vnf"
          }, 
          "type": "array"
        }, 
        "instance-groups": {
          "items": {
            "$ref": "#/definitions/instance-group"
          }, 
          "type": "array"
        }, 
        "ipsec-configurations": {
          "items": {
            "$ref": "#/definitions/ipsec-configuration"
          }, 
          "type": "array"
        }, 
        "l3-networks": {
          "items": {
            "$ref": "#/definitions/l3-network"
          }, 
          "type": "array"
        }, 
        "lag-links": {
          "items": {
            "$ref": "#/definitions/lag-link"
          }, 
          "type": "array"
        }, 
        "logical-links": {
          "items": {
            "$ref": "#/definitions/logical-link"
          }, 
          "type": "array"
        }, 
        "multicast-configurations": {
          "items": {
            "$ref": "#/definitions/multicast-configuration"
          }, 
          "type": "array"
        }, 
        "network-policies": {
          "items": {
            "$ref": "#/definitions/network-policy"
          }, 
          "type": "array"
        }, 
        "newvces": {
          "items": {
            "$ref": "#/definitions/newvce"
          }, 
          "type": "array"
        }, 
        "physical-links": {
          "items": {
            "$ref": "#/definitions/physical-link"
          }, 
          "type": "array"
        }, 
        "pnfs": {
          "items": {
            "$ref": "#/definitions/pnf"
          }, 
          "type": "array"
        }, 
        "route-table-references": {
          "items": {
            "$ref": "#/definitions/route-table-reference"
          }, 
          "type": "array"
        }, 
        "site-pair-sets": {
          "items": {
            "$ref": "#/definitions/site-pair-set"
          }, 
          "type": "array"
        }, 
        "vces": {
          "items": {
            "$ref": "#/definitions/vce"
          }, 
          "type": "array"
        }, 
        "vnfcs": {
          "items": {
            "$ref": "#/definitions/vnfc"
          }, 
          "type": "array"
        }, 
        "vpls-pes": {
          "items": {
            "$ref": "#/definitions/vpls-pe"
          }, 
          "type": "array"
        }, 
        "vpn-bindings": {
          "items": {
            "$ref": "#/definitions/vpn-binding"
          }, 
          "type": "array"
        }, 
        "zones": {
          "items": {
            "$ref": "#/definitions/zone"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policies": {
      "properties": {
        "network-policy": {
          "items": {
            "$ref": "#/definitions/network-policy"
          }, 
          "type": "array"
        }
      }
    }, 
    "network-policy": {
      "description": "###### Related Nodes\n- FROM allotted-resource( allotted-resource Uses network-policy, ONE2ONE)\n- FROM l3-network( l3-network Uses network-policy, MANY2MANY)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "ID for the openStack Heat instance", 
          "type": "string"
        }, 
        "network-policy-fqdn": {
          "description": "Contrail FQDN for the policy", 
          "type": "string"
        }, 
        "network-policy-id": {
          "description": "UUID representing unique key to this instance", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-policy-id"
      ]
    }, 
    "network-profile": {
      "description": "Network profile populated by SDN-GP for SNMP\n###### Related Nodes\n- TO generic-vnf( network-profile AppliesTo generic-vnf, MANY2MANY)\n", 
      "properties": {
        "community-string": {
          "description": "Encrypted SNMP community string", 
          "type": "string"
        }, 
        "nm-profile-name": {
          "description": "Unique name of network profile.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "nm-profile-name"
      ]
    }, 
    "network-profiles": {
      "description": "Collection of network profiles\n", 
      "properties": {
        "network-profile": {
          "items": {
            "$ref": "#/definitions/network-profile"
          }, 
          "type": "array"
        }
      }
    }, 
    "newvce": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n###### Related Nodes\n- FROM l-interface (CHILD of newvce, l-interface BelongsTo newvce, MANY2ONE)(1)\n\n-(1) IF this NEWVCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-role": {
          "description": "Client should send valid enumerated value.", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-loopback0-address": {
          "description": "v4 Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vnf-id2": {
          "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id2", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "newvces": {
      "description": "This object fills in the gaps from vce that were incorporated into generic-vnf.  This object will be retired with vce.\n", 
      "properties": {
        "newvce": {
          "items": {
            "$ref": "#/definitions/newvce"
          }, 
          "type": "array"
        }
      }
    }, 
    "nodes": {
      "properties": {
        "inventory-item-data": {
          "items": {
            "$ref": "#/definitions/inventory-item-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "notification-event": {
      "properties": {
        "cambria.partition": {
          "type": "string"
        }, 
        "notification-event-header": {
          "$ref": "#/definitions/notification-event-header", 
          "type": "object"
        }
      }
    }, 
    "notification-event-header": {
      "properties": {
        "action": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "entity-link": {
          "type": "string"
        }, 
        "entity-type": {
          "type": "string"
        }, 
        "event-type": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "sequence-number": {
          "type": "string"
        }, 
        "severity": {
          "type": "string"
        }, 
        "source-name": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "timestamp": {
          "type": "string"
        }, 
        "top-entity-type": {
          "type": "string"
        }, 
        "version": {
          "type": "string"
        }
      }
    }, 
    "notify": {
      "properties": {
        "event-id": {
          "type": "string"
        }, 
        "event-trigger": {
          "type": "string"
        }, 
        "key-data": {
          "items": {
            "$ref": "#/definitions/key-data"
          }, 
          "type": "array"
        }, 
        "node-type": {
          "type": "string"
        }, 
        "selflink": {
          "type": "string"
        }
      }, 
      "required": [
        "event-id"
      ]
    }, 
    "oam-network": {
      "description": "OAM network, to be deprecated shortly.  Do not use for new purposes. \n###### Related Nodes\n- TO cloud-region (PARENT of oam-network, oam-network BelongsTo cloud-region, MANY2ONE)\n- TO complex( oam-network AppliesTo complex, MANY2MANY)\n- TO service-capability( oam-network AppliesTo service-capability, MANY2MANY)\n", 
      "properties": {
        "cvlan-tag": {
          "description": "cvlan-id", 
          "format": "int64", 
          "type": "integer"
        }, 
        "ipv4-oam-gateway-address": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "type": "string"
        }, 
        "ipv4-oam-gateway-address-prefix-length": {
          "description": "Used for VNF firewall rule so customer cannot send customer traffic over this oam network", 
          "format": "int32", 
          "type": "integer"
        }, 
        "network-name": {
          "description": "Name of the network.", 
          "type": "string"
        }, 
        "network-uuid": {
          "description": "UUID of the network. Unique across a cloud-region", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "network-uuid", 
        "network-name", 
        "cvlan-tag"
      ]
    }, 
    "oam-networks": {
      "description": "Collection of OAM networks, to be deprecated shortly.  Do not use for new purposes. \n", 
      "properties": {
        "oam-network": {
          "items": {
            "$ref": "#/definitions/oam-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "overloaded-model": {
      "description": "Allows for legacy POST of old-style and new-style models\n", 
      "properties": {
        "model-description": {
          "description": "Description", 
          "type": "string"
        }, 
        "model-id": {
          "description": "Invariant unique ID which does not change from version to version", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
          "type": "string"
        }, 
        "model-name": {
          "description": "Name of the model, which can change from version to version.", 
          "type": "string"
        }, 
        "model-name-version-id": {
          "description": "Unique identifier corresponding to one version of a model in ASDC", 
          "type": "string"
        }, 
        "model-type": {
          "description": "Type of the model, e.g., service, resource, widget, etc.", 
          "type": "string"
        }, 
        "model-vers": {
          "$ref": "#/definitions/model-vers", 
          "type": "object"
        }, 
        "model-version": {
          "description": "Version", 
          "type": "string"
        }, 
        "relationship-list": {
          "$ref": "#/definitions/relationship-list", 
          "type": "object"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "model-invariant-id", 
        "model-name-version-id", 
        "model-type", 
        "model-name", 
        "model-id", 
        "model-version"
      ]
    }, 
    "owning-entities": {
      "description": "Collection of owning-entities\n", 
      "properties": {
        "owning-entity": {
          "items": {
            "$ref": "#/definitions/owning-entity"
          }, 
          "type": "array"
        }
      }
    }, 
    "owning-entity": {
      "description": "describes an owning-entity\n###### Related Nodes\n- FROM service-instance( service-instance BelongsTo owning-entity, MANY2ONE)\n", 
      "properties": {
        "owning-entity-id": {
          "description": "UUID of an owning entity", 
          "type": "string"
        }, 
        "owning-entity-name": {
          "description": "Owning entity name", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "owning-entity-id", 
        "owning-entity-name"
      ]
    }, 
    "p-interface": {
      "description": "Physical interface (e.g., nic)\n###### Related Nodes\n- TO logical-link( p-interface LinksTo logical-link, MANY2ONE)\n- TO pnf (PARENT of p-interface, p-interface BindsTo pnf, MANY2ONE)(4)\n- TO pserver (PARENT of p-interface, p-interface BindsTo pserver, MANY2ONE)(4)\n- TO vpls-pe (PARENT of p-interface, p-interface BindsTo vpls-pe, MANY2ONE)(4)\n- TO physical-link( p-interface LinksTo physical-link, MANY2ONE)(2)\n- FROM l-interface (CHILD of p-interface, l-interface BindsTo p-interface, MANY2ONE)(1)\n- FROM lag-interface( lag-interface Uses p-interface, MANY2MANY)\n- FROM sriov-pf (CHILD of p-interface, sriov-pf BelongsTo p-interface, ONE2ONE)(1)\n\n-(1) IF this P-INTERFACE node is deleted, this FROM node is DELETED also\n-(2) IF this P-INTERFACE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this P-INTERFACE is DELETED also\n", 
      "properties": {
        "equipment-identifier": {
          "description": "CLEI or other specification for p-interface hardware.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "interface-name": {
          "description": "Name that identifies the physical interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role specification for p-interface hardware.", 
          "type": "string"
        }, 
        "interface-type": {
          "description": "Indicates the physical properties of the interface.", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "inventory status", 
          "type": "string"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "mac-addresss": {
          "description": "MAC Address of the p-interface.", 
          "type": "string"
        }, 
        "port-description": {
          "description": "Nature of the services and connectivity on this port.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "sriov-pfs": {
          "items": {
            "$ref": "#/definitions/sriov-pf"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "interface-name", 
        "in-maint"
      ]
    }, 
    "p-interfaces": {
      "description": "Collection of physical interfaces.\n", 
      "properties": {
        "p-interface": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }
      }
    }, 
    "physical-link": {
      "description": "Collection of physical connections, typically between p-interfaces\n###### Related Nodes\n- FROM p-interface( p-interface LinksTo physical-link, MANY2ONE)(3)\n\n-(3) IF this FROM node is deleted, this PHYSICAL-LINK is DELETED also\n", 
      "properties": {
        "circuit-id": {
          "description": "Circuit it", 
          "type": "string"
        }, 
        "dual-mode": {
          "description": "Dual access mode (e.g., primary, secondary", 
          "type": "string"
        }, 
        "link-name": {
          "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
          "type": "string"
        }, 
        "management-option": {
          "description": "To provide information on who manages this circuit. A&AI or 3rd party transport provider", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-units": {
          "description": "Units for downstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-down-value": {
          "description": "Downstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-bandwidth-up-units": {
          "description": "Units for the upstream BW value", 
          "type": "string"
        }, 
        "service-provider-bandwidth-up-value": {
          "description": "Upstream Bandwidth value agreed with the service provider", 
          "format": "int32", 
          "type": "integer"
        }, 
        "service-provider-name": {
          "description": "Name of the service Provider on this link.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }
      }, 
      "required": [
        "link-name"
      ]
    }, 
    "physical-links": {
      "description": "Collection of physical connections, typically between p-interfaces\n", 
      "properties": {
        "physical-link": {
          "items": {
            "$ref": "#/definitions/physical-link"
          }, 
          "type": "array"
        }
      }
    }, 
    "platform": {
      "description": "describes a platform\n###### Related Nodes\n- TO generic-vnf( platform Uses generic-vnf, MANY2MANY)\n", 
      "properties": {
        "platform-name": {
          "description": "Name of the platform", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "platform-name"
      ]
    }, 
    "platforms": {
      "description": "Collection of platforms\n", 
      "properties": {
        "platform": {
          "items": {
            "$ref": "#/definitions/platform"
          }, 
          "type": "array"
        }
      }
    }, 
    "pnf": {
      "description": "PNF represents a physical network function. typically equipment used in the D1 world. in 1607, this will be populated by SDN-C to represent a premises router that a uCPE connects to. But this can be used to represent any physical device that is not an AIC node or uCPE.\n###### Related Nodes\n- TO complex( pnf LocatedIn complex, MANY2ONE)\n- TO instance-group( pnf MemberOf instance-group, MANY2MANY)\n- TO zone( pnf LocatedIn zone, MANY2ONE)\n- FROM esr-thirdparty-sdnc( esr-thirdparty-sdnc AppliesTo pnf, ONE2MANY)\n- FROM generic-vnf( generic-vnf HostedOn pnf, MANY2MANY)\n- FROM lag-interface (CHILD of pnf, lag-interface BindsTo pnf, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pnf, MANY2MANY)\n- FROM p-interface (CHILD of pnf, p-interface BindsTo pnf, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf pnf, ONE2MANY)\n\n-(1) IF this PNF node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "frame-id": {
          "description": "ID of the physical frame (relay rack) where pnf is installed.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v4-oam": {
          "description": "ipv4-oam-address with new naming convention for IP addresses", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "identifier of managed by ATT or customer", 
          "type": "string"
        }, 
        "nf-role": {
          "description": "Nf Role is the role performed by this instance in the network.", 
          "type": "string"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }, 
        "pnf-id": {
          "description": "id of pnf", 
          "type": "string"
        }, 
        "pnf-name": {
          "description": "unique name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2": {
          "description": "name of Physical Network Function.", 
          "type": "string"
        }, 
        "pnf-name2-source": {
          "description": "source of name2", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of this device (not under canopi control) Valid values [PREPROV/NVTPROV/PROV]", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number of the device", 
          "type": "string"
        }, 
        "sw-version": {
          "description": "sw-version is the version of SW for the hosted application on the PNF.", 
          "type": "string"
        }
      }, 
      "required": [
        "pnf-name", 
        "in-maint"
      ]
    }, 
    "pnfs": {
      "description": "Collection of Physical Network Functions.\n", 
      "properties": {
        "pnf": {
          "items": {
            "$ref": "#/definitions/pnf"
          }, 
          "type": "array"
        }
      }
    }, 
    "port-group": {
      "description": "Used to capture the network interfaces of this VCE\n###### Related Nodes\n- TO vce (PARENT of port-group, port-group BelongsTo vce, MANY2ONE)(4)\n- FROM cvlan-tag (CHILD of port-group, cvlan-tag BelongsTo port-group, MANY2ONE)(1)\n\n-(1) IF this PORT-GROUP node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this PORT-GROUP is DELETED also\n", 
      "properties": {
        "cvlan-tags": {
          "items": {
            "$ref": "#/definitions/cvlan-tag-entry"
          }, 
          "type": "array"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "interface-id": {
          "description": "Unique ID of the interface", 
          "type": "string"
        }, 
        "interface-role": {
          "description": "Role assigned to this Interface, should use values as defined in ECOMP Yang models.", 
          "type": "string"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of this Interface", 
          "type": "string"
        }, 
        "neutron-network-name": {
          "description": "Neutron network name of this Interface", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "port-group-id": {
          "description": "Unique ID for port group in vmware", 
          "type": "string"
        }, 
        "port-group-name": {
          "description": "Likely to duplicate value of neutron network name", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "switch-name": {
          "description": "DVS or standard switch name (should be non-null for port groups associated with DVS)", 
          "type": "string"
        }
      }, 
      "required": [
        "interface-id", 
        "orchestration-status"
      ]
    }, 
    "port-groups": {
      "properties": {
        "port-group": {
          "items": {
            "$ref": "#/definitions/port-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "project": {
      "description": "describes the project\n###### Related Nodes\n- TO service-instance( project Uses service-instance, ONE2MANY)\n", 
      "properties": {
        "project-name": {
          "description": "Name of the project deploying a service", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "project-name"
      ]
    }, 
    "projects": {
      "description": "Collection of projects\n", 
      "properties": {
        "project": {
          "items": {
            "$ref": "#/definitions/project"
          }, 
          "type": "array"
        }
      }
    }, 
    "properties": {
      "description": "Property holder for query properties or instance properties\n", 
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "property-constraint": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of property-constraint, property-constraint BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this PROPERTY-CONSTRAINT is DELETED also\n", 
      "properties": {
        "constraint-type": {
          "type": "string"
        }, 
        "property-constraint-uuid": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }, 
        "resource-version": {
          "type": "string"
        }
      }, 
      "required": [
        "property-constraint-uuid", 
        "constraint-type", 
        "property-name", 
        "property-value"
      ]
    }, 
    "property-constraints": {
      "properties": {
        "property-constraint": {
          "items": {
            "$ref": "#/definitions/property-constraint"
          }, 
          "type": "array"
        }
      }
    }, 
    "pserver": {
      "description": "Compute host whose hostname must be unique and must exactly match what is sent as a relationship to a vserver.\n###### Related Nodes\n- TO availability-zone( pserver MemberOf availability-zone, MANY2ONE)\n- TO cloud-region( pserver LocatedIn cloud-region, MANY2ONE)\n- TO complex( pserver LocatedIn complex, MANY2ONE)\n- TO group-assignment( pserver MemberOf group-assignment, MANY2ONE)\n- TO zone( pserver LocatedIn zone, MANY2ONE)\n- FROM generic-vnf( generic-vnf HostedOn pserver, MANY2MANY)\n- FROM lag-interface (CHILD of pserver, lag-interface BindsTo pserver, MANY2ONE)(1)\n- FROM logical-link( logical-link BridgedTo pserver, MANY2MANY)\n- FROM p-interface (CHILD of pserver, p-interface BindsTo pserver, MANY2ONE)(1)\n- FROM vserver( vserver HostedOn pserver, MANY2ONE)\n\n-(1) IF this PSERVER node is deleted, this FROM node is DELETED also\n-PSERVER cannot be deleted if related to GROUP-ASSIGNMENT,GENERIC-VNF,LOGICAL-LINK,VSERVER\n", 
      "properties": {
        "disk-in-gigabytes": {
          "description": "Disk size, in GBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "equip-model": {
          "description": "Equipment model.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-type": {
          "description": "Equipment type.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "equip-vendor": {
          "description": "Equipment vendor.  Source of truth should define valid values.", 
          "type": "string"
        }, 
        "fqdn": {
          "description": "Fully-qualified domain name", 
          "type": "string"
        }, 
        "host-profile": {
          "description": "The host profile that defines the configuration of the pserver.", 
          "type": "string"
        }, 
        "hostname": {
          "description": "Value from executing hostname on the compute node.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "internet-topology": {
          "description": "internet topology of Pserver", 
          "type": "string"
        }, 
        "inv-status": {
          "description": "CANOPI's inventory status.  Only set with values exactly as defined by CANOPI.", 
          "type": "string"
        }, 
        "ipaddress-v4-aim": {
          "description": "IPV4 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v4-loopback-0": {
          "description": "IPV4 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-aim": {
          "description": "IPV6 AIM address", 
          "type": "string"
        }, 
        "ipaddress-v6-loopback-0": {
          "description": "IPV6 Loopback 0 address", 
          "type": "string"
        }, 
        "ipaddress-v6-oam": {
          "description": "IPV6 OAM address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Used to configure device, also used for troubleshooting and is IP used for traps generated by device.", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "management-option": {
          "description": "Indicates who owns and or manages the device.", 
          "type": "string"
        }, 
        "number-of-cpus": {
          "description": "Number of cpus", 
          "format": "int32", 
          "type": "integer"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Prov Status of this device (not under canopi control) Valid values [PREPROV/NVTPROV/PROV]", 
          "type": "string"
        }, 
        "pserver-id": {
          "description": "ID of Pserver", 
          "type": "string"
        }, 
        "pserver-name2": {
          "description": "alternative pserver name", 
          "type": "string"
        }, 
        "pserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "ptnii-equip-name": {
          "description": "PTNII name", 
          "type": "string"
        }, 
        "purpose": {
          "description": "purpose of pserver", 
          "type": "string"
        }, 
        "ram-in-megabytes": {
          "description": "RAM size, in MBs", 
          "format": "int32", 
          "type": "integer"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "serial-number": {
          "description": "Serial number, may be queried", 
          "type": "string"
        }
      }, 
      "required": [
        "hostname", 
        "in-maint"
      ]
    }, 
    "pservers": {
      "description": "Collection of compute hosts.\n", 
      "properties": {
        "pserver": {
          "items": {
            "$ref": "#/definitions/pserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "query-parameters": {
      "description": "QueryParameters for performing a named-query or model query\n", 
      "properties": {
        "named-query": {
          "$ref": "#/definitions/named-query", 
          "type": "object"
        }, 
        "overloaded-model": {
          "$ref": "#/definitions/overloaded-model", 
          "type": "object"
        }
      }
    }, 
    "related-lookup": {
      "description": "TBD\n###### Related Nodes\n- TO named-query-element (PARENT of related-lookup, related-lookup BelongsTo named-query-element, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this RELATED-LOOKUP is DELETED also\n", 
      "properties": {
        "property-collect-list": {
          "type": "string"
        }, 
        "related-lookup-uuid": {
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "type": "string"
        }, 
        "source-node-property": {
          "type": "string"
        }, 
        "source-node-type": {
          "type": "string"
        }, 
        "target-node-property": {
          "type": "string"
        }, 
        "target-node-type": {
          "type": "string"
        }
      }, 
      "required": [
        "related-lookup-uuid", 
        "source-node-type", 
        "source-node-property", 
        "target-node-type", 
        "target-node-property"
      ]
    }, 
    "related-lookups": {
      "properties": {
        "related-lookup": {
          "items": {
            "$ref": "#/definitions/related-lookup"
          }, 
          "type": "array"
        }
      }
    }, 
    "related-to-property": {
      "properties": {
        "property-key": {
          "description": "Key part of a key/value pair", 
          "type": "string"
        }, 
        "property-value": {
          "description": "Value part of a key/value pair", 
          "type": "string"
        }
      }
    }, 
    "relationship": {
      "properties": {
        "related-link": {
          "description": "URL to the object in A&AI.", 
          "type": "string"
        }, 
        "related-to": {
          "description": "A keyword provided by A&AI to indicate type of node.", 
          "type": "string"
        }, 
        "related-to-property": {
          "items": {
            "$ref": "#/definitions/related-to-property"
          }, 
          "type": "array"
        }, 
        "relationship-data": {
          "items": {
            "$ref": "#/definitions/relationship-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "relationship-data": {
      "properties": {
        "relationship-key": {
          "description": "A keyword provided by A&AI to indicate an attribute.", 
          "type": "string"
        }, 
        "relationship-value": {
          "description": "Value of the attribute.", 
          "type": "string"
        }
      }, 
      "required": [
        "relationship-key", 
        "relationship-value"
      ]
    }, 
    "relationship-list": {
      "properties": {
        "relationship": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }
      }
    }, 
    "reserved-prop-names": {
      "description": "Internal map to define some reserved properties of a vertex\n", 
      "properties": {
        "aai-created-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-last-mod-ts": {
          "format": "int64", 
          "type": "integer"
        }, 
        "aai-node-type": {
          "type": "string"
        }, 
        "aai-unique-key": {
          "type": "string"
        }, 
        "aai-uri": {
          "type": "string"
        }, 
        "last-mod-source-of-truth": {
          "type": "string"
        }, 
        "source-of-truth": {
          "type": "string"
        }
      }
    }, 
    "response-list": {
      "description": "Response container for the results of a named-query or model query\n", 
      "properties": {
        "inventory-response-items": {
          "$ref": "#/definitions/inventory-response-items", 
          "type": "object"
        }
      }
    }, 
    "result-data": {
      "properties": {
        "resource-link": {
          "description": "The URL to the specific resource", 
          "type": "string"
        }, 
        "resource-type": {
          "description": "The specific type of node in the A&AI graph", 
          "type": "string"
        }
      }
    }, 
    "route-table-reference": {
      "description": "Openstack route table reference.\n###### Related Nodes\n- FROM l3-network( l3-network Uses route-table-reference, MANY2MANY)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "route-table-reference-fqdn": {
          "description": "FQDN entry in the route table.", 
          "type": "string"
        }, 
        "route-table-reference-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "route-table-reference-id", 
        "route-table-reference-fqdn"
      ]
    }, 
    "route-table-references": {
      "description": "Collection of openstack route table references\n", 
      "properties": {
        "route-table-reference": {
          "items": {
            "$ref": "#/definitions/route-table-reference"
          }, 
          "type": "array"
        }
      }
    }, 
    "route-target": {
      "description": "Route target information\n###### Related Nodes\n- TO vpn-binding (PARENT of route-target, route-target BelongsTo vpn-binding, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this ROUTE-TARGET is DELETED also\n", 
      "properties": {
        "global-route-target": {
          "description": "Number used to identify an RT, globally unique in the network", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-target-role": {
          "description": "Role assigned to this route target", 
          "type": "string"
        }
      }, 
      "required": [
        "global-route-target", 
        "route-target-role"
      ]
    }, 
    "route-targets": {
      "description": "Collection of route target information\n", 
      "properties": {
        "route-target": {
          "items": {
            "$ref": "#/definitions/route-target"
          }, 
          "type": "array"
        }
      }
    }, 
    "routing-instance": {
      "description": "###### Related Nodes\n- TO site-pair-set (PARENT of routing-instance, routing-instance BelongsTo site-pair-set, MANY2ONE)(4)\n- FROM site-pair (CHILD of routing-instance, site-pair BelongsTo routing-instance, MANY2ONE)(1)\n\n-(1) IF this ROUTING-INSTANCE node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this ROUTING-INSTANCE is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-instance-id": {
          "description": "Unique id of routing instance", 
          "type": "string"
        }, 
        "rpm-owner": {
          "description": "rpm owner", 
          "type": "string"
        }, 
        "site-pairs": {
          "items": {
            "$ref": "#/definitions/site-pair"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "routing-instance-id"
      ]
    }, 
    "routing-instances": {
      "description": "set of probes related to generic-vnf routing instance\n", 
      "properties": {
        "routing-instance": {
          "items": {
            "$ref": "#/definitions/routing-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "sdn-zone-response": {
      "properties": {
        "az-and-dvs-switches": {
          "items": {
            "$ref": "#/definitions/az-and-dvs-switches"
          }, 
          "type": "array"
        }, 
        "oam-networks": {
          "items": {
            "$ref": "#/definitions/oam-network"
          }, 
          "type": "array"
        }
      }
    }, 
    "search": {
      "properties": {
        "edge-tag-query-request": {
          "$ref": "#/definitions/edge-tag-query-request", 
          "type": "object"
        }, 
        "edge-tag-query-result": {
          "items": {
            "$ref": "#/definitions/tagged-inventory-item-list"
          }, 
          "type": "array"
        }, 
        "sdn-zone-response": {
          "$ref": "#/definitions/sdn-zone-response", 
          "type": "object"
        }, 
        "search-results": {
          "items": {
            "$ref": "#/definitions/result-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "search-results": {
      "properties": {
        "result-data": {
          "items": {
            "$ref": "#/definitions/result-data"
          }, 
          "type": "array"
        }
      }
    }, 
    "secondary-filt": {
      "description": "SecondaryFilt for performing a named-query or model query\n"
    }, 
    "secondary-filter": {
      "properties": {
        "filter-type": {
          "type": "string"
        }, 
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "secondary-filts": {
      "description": "SecondaryFilts for performing a named-query or model query\n", 
      "properties": {
        "secondary-filt": {
          "items": {
            "$ref": "#/definitions/secondary-filt"
          }, 
          "type": "array"
        }
      }
    }, 
    "segmentation-assignment": {
      "description": "Openstack segmentation assignment.\n###### Related Nodes\n- TO l3-network (PARENT of segmentation-assignment, segmentation-assignment BelongsTo l3-network, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this SEGMENTATION-ASSIGNMENT is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "segmentation-id": {
          "description": "Route Table Reference id, UUID assigned to this instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "segmentation-id"
      ]
    }, 
    "segmentation-assignments": {
      "description": "Collection of openstack segmentation assignments\n", 
      "properties": {
        "segmentation-assignment": {
          "items": {
            "$ref": "#/definitions/segmentation-assignment"
          }, 
          "type": "array"
        }
      }
    }, 
    "service": {
      "description": "Stand-in for service model definitions.  Likely to be deprecated in favor of models from ASDC.  Does not strictly map to ASDC services.\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-description": {
          "description": "Description of the service", 
          "type": "string"
        }, 
        "service-id": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "service-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "service-version": {
          "description": "service version", 
          "type": "string"
        }
      }, 
      "required": [
        "service-id", 
        "service-description"
      ]
    }, 
    "service-capabilities": {
      "description": "Collection of service capabilities.\n", 
      "properties": {
        "service-capability": {
          "items": {
            "$ref": "#/definitions/service-capability"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-capability": {
      "description": "Early definition of server/resource pairings, likely to be replaced by models.  No new use should be made of this.\n###### Related Nodes\n- FROM availability-zone( availability-zone AppliesTo service-capability, MANY2MANY)\n- FROM oam-network( oam-network AppliesTo service-capability, MANY2MANY)\n\n-SERVICE-CAPABILITY cannot be deleted if related to AVAILABILITY-ZONE,OAM-NETWORK\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type", 
        "vnf-type"
      ]
    }, 
    "service-design-and-creation": {
      "description": "Namespace for objects managed by ASDC\n", 
      "properties": {
        "models": {
          "items": {
            "$ref": "#/definitions/model"
          }, 
          "type": "array"
        }, 
        "named-queries": {
          "items": {
            "$ref": "#/definitions/named-query"
          }, 
          "type": "array"
        }, 
        "service-capabilities": {
          "items": {
            "$ref": "#/definitions/service-capability"
          }, 
          "type": "array"
        }, 
        "services": {
          "items": {
            "$ref": "#/definitions/service"
          }, 
          "type": "array"
        }, 
        "vnf-images": {
          "items": {
            "$ref": "#/definitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-instance": {
      "description": "Instance of a service\n###### Related Nodes\n- TO allotted-resource( service-instance Uses allotted-resource, MANY2MANY)\n- TO configuration( service-instance Uses configuration, ONE2MANY)\n- TO connector( service-instance Uses connector, MANY2MANY)\n- TO ctag-assignment( service-instance Uses ctag-assignment, ONE2MANY)\n- TO cvlan-tag( service-instance ComposedOf cvlan-tag, MANY2MANY)\n- TO generic-vnf( service-instance ComposedOf generic-vnf, ONE2MANY)\n- TO instance-group( service-instance MemberOf instance-group, MANY2MANY)\n- TO l3-network( service-instance ComposedOf l3-network, ONE2MANY)\n- TO logical-link( service-instance Uses logical-link, MANY2MANY)(2)\n- TO owning-entity( service-instance BelongsTo owning-entity, MANY2ONE)\n- TO pnf( service-instance ComposedOf pnf, ONE2MANY)\n- TO service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n- TO service-subscription (PARENT of service-instance, service-instance BelongsTo service-subscription, MANY2ONE)(4)\n- TO vce( service-instance ComposedOf vce, ONE2MANY)\n- TO vlan( service-instance ComposedOf vlan, ONE2MANY)\n- TO zone( service-instance LocatedIn zone, MANY2ONE)\n- FROM allotted-resource (CHILD of service-instance, allotted-resource BelongsTo service-instance, MANY2ONE)(1)\n- FROM metadatum (CHILD of service-instance, metadatum BelongsTo service-instance, MANY2ONE)(1)\n- FROM project( project Uses service-instance, ONE2MANY)\n- FROM service-instance( service-instance ComposedOf service-instance, ONE2MANY)\n\n-(1) IF this SERVICE-INSTANCE node is deleted, this FROM node is DELETED also\n-(2) IF this SERVICE-INSTANCE node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-INSTANCE is DELETED also\n", 
      "properties": {
        "allotted-resources": {
          "items": {
            "$ref": "#/definitions/allotted-resource"
          }, 
          "type": "array"
        }, 
        "bandwidth-down-wan1": {
          "description": "indicates the downstream bandwidth this service will use on the WAN1 port of the physical device.", 
          "type": "string"
        }, 
        "bandwidth-down-wan2": {
          "description": "indicates the downstream bandwidth this service will use on the WAN2 port of the physical device.", 
          "type": "string"
        }, 
        "bandwidth-total": {
          "description": "Indicates the total bandwidth to be used for this service.", 
          "type": "string"
        }, 
        "bandwidth-up-wan1": {
          "description": "indicates the upstream bandwidth this service will use on the WAN1 port of the physical device.", 
          "type": "string"
        }, 
        "bandwidth-up-wan2": {
          "description": "indicates the upstream bandwidth this service will use on the WAN2 port of the physical device.", 
          "type": "string"
        }, 
        "created-at": {
          "description": "create time of Network Service.", 
          "type": "string"
        }, 
        "description": {
          "description": "short description for service-instance.", 
          "type": "string"
        }, 
        "environment-context": {
          "description": "This field will store the environment context assigned to the service-instance.", 
          "type": "string"
        }, 
        "metadata": {
          "items": {
            "$ref": "#/definitions/metadatum"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this service.", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "service-instance-id": {
          "description": "Uniquely identifies this instance of a service", 
          "type": "string"
        }, 
        "service-instance-location-id": {
          "description": "An identifier that customers assign to the location where this service is being used.", 
          "type": "string"
        }, 
        "service-instance-name": {
          "description": "This field will store a name assigned to the service-instance.", 
          "type": "string"
        }, 
        "service-role": {
          "description": "String capturing the service role.", 
          "type": "string"
        }, 
        "service-type": {
          "description": "String capturing type of service.", 
          "type": "string"
        }, 
        "updated-at": {
          "description": "last update of Network Service.", 
          "type": "string"
        }, 
        "vhn-portal-url": {
          "description": "URL customers will use to access the vHN Portal.", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }, 
        "workload-context": {
          "description": "This field will store the workload context assigned to the service-instance.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-instance-id"
      ]
    }, 
    "service-instances": {
      "description": "Collection of service instances\n", 
      "properties": {
        "service-instance": {
          "items": {
            "$ref": "#/definitions/service-instance"
          }, 
          "type": "array"
        }
      }
    }, 
    "service-subscription": {
      "description": "Object that group service instances.\n###### Related Nodes\n- TO customer (PARENT of service-subscription, service-subscription BelongsTo customer, MANY2ONE)(4)\n- TO tenant( service-subscription Uses tenant, MANY2MANY)\n- FROM service-instance (CHILD of service-subscription, service-instance BelongsTo service-subscription, MANY2ONE)(1)\n\n-(1) IF this SERVICE-SUBSCRIPTION node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SERVICE-SUBSCRIPTION is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-instances": {
          "items": {
            "$ref": "#/definitions/service-instance"
          }, 
          "type": "array"
        }, 
        "service-type": {
          "description": "Value defined by orchestration to identify this service across ECOMP.", 
          "type": "string"
        }, 
        "temp-ub-sub-account-id": {
          "description": "This property will be deleted from A&AI in the near future. Only stop gap solution.", 
          "type": "string"
        }
      }, 
      "required": [
        "service-type"
      ]
    }, 
    "service-subscriptions": {
      "description": "Collection of objects that group service instances.\n", 
      "properties": {
        "service-subscription": {
          "items": {
            "$ref": "#/definitions/service-subscription"
          }, 
          "type": "array"
        }
      }
    }, 
    "services": {
      "description": "Collection of service model definitions.  Likely to be deprecated in favor of models from ASDC.\n", 
      "properties": {
        "service": {
          "items": {
            "$ref": "#/definitions/service"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pair": {
      "description": "###### Related Nodes\n- TO routing-instance (PARENT of site-pair, site-pair BelongsTo routing-instance, MANY2ONE)(4)\n- FROM class-of-service (CHILD of site-pair, class-of-service BelongsTo site-pair, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SITE-PAIR is DELETED also\n", 
      "properties": {
        "classes-of-service": {
          "items": {
            "$ref": "#/definitions/class-of-service"
          }, 
          "type": "array"
        }, 
        "destination-equip-type": {
          "description": "The type of destinatination equipment. Could be Router, UCPE, etc.", 
          "type": "string"
        }, 
        "destination-hostname": {
          "description": "Hostname of the destination equipment to which SLAs are measured against.", 
          "type": "string"
        }, 
        "destination-ip": {
          "description": "Prefix address", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version, v4, v6", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "site-pair-id": {
          "description": "unique identifier of probe", 
          "type": "string"
        }, 
        "source-ip": {
          "description": "Prefix address", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-id"
      ]
    }, 
    "site-pair-set": {
      "description": "Set of instances for probes used to measure service level agreements\n###### Related Nodes\n- TO generic-vnf( site-pair-set AppliesTo generic-vnf, MANY2MANY)\n- FROM routing-instance (CHILD of site-pair-set, routing-instance BelongsTo site-pair-set, MANY2ONE)(1)\n\n-(1) IF this SITE-PAIR-SET node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "routing-instances": {
          "items": {
            "$ref": "#/definitions/routing-instance"
          }, 
          "type": "array"
        }, 
        "site-pair-set-id": {
          "description": "Unique id of site pair set.", 
          "type": "string"
        }
      }, 
      "required": [
        "site-pair-set-id"
      ]
    }, 
    "site-pair-sets": {
      "description": "Collection of sets of instances for probes related to generic-vnf\n", 
      "properties": {
        "site-pair-set": {
          "items": {
            "$ref": "#/definitions/site-pair-set"
          }, 
          "type": "array"
        }
      }
    }, 
    "site-pairs": {
      "description": "probe within a set\n", 
      "properties": {
        "site-pair": {
          "items": {
            "$ref": "#/definitions/site-pair"
          }, 
          "type": "array"
        }
      }
    }, 
    "snapshot": {
      "description": "Openstack snapshot\n###### Related Nodes\n- TO cloud-region (PARENT of snapshot, snapshot BelongsTo cloud-region, MANY2ONE)\n- FROM vserver( vserver Uses snapshot, ONE2ONE)\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "prev-snapshot-id": {
          "description": "This field contains the UUID of the previous snapshot (if any).", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "snapshot-architecture": {
          "description": "Operating system architecture", 
          "type": "string"
        }, 
        "snapshot-id": {
          "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
          "type": "string"
        }, 
        "snapshot-name": {
          "description": "Snapshot name", 
          "type": "string"
        }, 
        "snapshot-os-distro": {
          "description": "The common name of the operating system distribution in lowercase", 
          "type": "string"
        }, 
        "snapshot-os-version": {
          "description": "The operating system version as specified by the distributor.", 
          "type": "string"
        }, 
        "snapshot-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "snapshot-id"
      ]
    }, 
    "snapshots": {
      "description": "Collection of openstack snapshots\n", 
      "properties": {
        "snapshot": {
          "items": {
            "$ref": "#/definitions/snapshot"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-pf": {
      "description": "SR-IOV Physical Function\n###### Related Nodes\n- TO p-interface (PARENT of sriov-pf, sriov-pf BelongsTo p-interface, ONE2ONE)(4)\n- FROM sriov-vf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-PF is DELETED also\n", 
      "properties": {
        "pf-pci-id": {
          "description": "Identifier for the sriov-pf", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }
      }, 
      "required": [
        "pf-pci-id"
      ]
    }, 
    "sriov-pfs": {
      "description": "Collection of SR-IOV Physical Functions.\n", 
      "properties": {
        "sriov-pf": {
          "items": {
            "$ref": "#/definitions/sriov-pf"
          }, 
          "type": "array"
        }
      }
    }, 
    "sriov-vf": {
      "description": "SR-IOV Virtual Function (not to be confused with virtual network function)\n###### Related Nodes\n- TO l-interface (PARENT of sriov-vf, sriov-vf BelongsTo l-interface, ONE2ONE)(4)\n- TO sriov-pf( sriov-vf Uses sriov-pf, MANY2ONE)\n\n-(4) IF this TO node is deleted, this SRIOV-VF is DELETED also\n", 
      "properties": {
        "neutron-network-id": {
          "description": "Neutron network id of the interface", 
          "type": "string"
        }, 
        "pci-id": {
          "description": "PCI ID used to identify the sriov-vf", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vf-broadcast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows all broadcast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-insert-stag": {
          "description": "This option, if set to true, instructs to insert outer tag after traffic comes out of VM.", 
          "type": "boolean"
        }, 
        "vf-link-status": {
          "description": "This option is used to set the link status.  Valid values as of 1607 are on, off, and auto.", 
          "type": "string"
        }, 
        "vf-mac-anti-spoof-check": {
          "description": "This option ensures anti MAC spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-mac-filter": {
          "description": "When MAC filters are specified, VF-agent service configures VFs to do MAC level filtering before the traffic is passed to VM.", 
          "type": "string"
        }, 
        "vf-mirrors": {
          "description": "This option defines the set of Mirror objects which essentially mirrors the traffic from source to set of collector VNF Ports.", 
          "type": "string"
        }, 
        "vf-unknown-multicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown multicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-unknown-unicast-allow": {
          "description": "This option, if set to true, sets the VF in promiscuous mode and allows unknown unicast traffic to reach the VM", 
          "type": "boolean"
        }, 
        "vf-vlan-anti-spoof-check": {
          "description": "This option ensures anti VLAN spoof checks are done at the VF level to comply with security. The disable check will also be honored per the VNF needs for trusted VMs.", 
          "type": "boolean"
        }, 
        "vf-vlan-filter": {
          "description": "This metadata provides option to specify list of VLAN filters applied on VF to pass the traffic to VM.", 
          "type": "string"
        }, 
        "vf-vlan-strip": {
          "description": "When this field is set to true, VF will configured to strip the outer TAG before the traffic is passed to VM.", 
          "type": "boolean"
        }
      }, 
      "required": [
        "pci-id"
      ]
    }, 
    "sriov-vfs": {
      "description": "Collection of SR-IOV Virtual Functions.\n", 
      "properties": {
        "sriov-vf": {
          "items": {
            "$ref": "#/definitions/sriov-vf"
          }, 
          "type": "array"
        }
      }
    }, 
    "start-node-filter": {
      "properties": {
        "property-name": {
          "type": "string"
        }, 
        "property-value": {
          "type": "string"
        }
      }
    }, 
    "subnet": {
      "description": "###### Related Nodes\n- TO l3-network (PARENT of subnet, subnet BelongsTo l3-network, MANY2ONE)(4)\n- FROM host-route (CHILD of subnet, host-route BelongsTo subnet, MANY2ONE)(1)\n- FROM l3-interface-ipv4-address-list( l3-interface-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM l3-interface-ipv6-address-list( l3-interface-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv4-address-list( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vip-ipv6-address-list( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n\n-(1) IF this SUBNET node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this SUBNET is DELETED also\n-SUBNET cannot be deleted if related to L3-INTERFACE-IPV4-ADDRESS-LIST,L3-INTERFACE-IPV6-ADDRESS-LIST,VIP-IPV4-ADDRESS-LIST,VIP-IPV6-ADDRESS-LIST\n", 
      "properties": {
        "cidr-mask": {
          "description": "cidr mask", 
          "type": "string"
        }, 
        "dhcp-enabled": {
          "description": "dhcp enabled", 
          "type": "boolean"
        }, 
        "dhcp-end": {
          "description": "the last address reserved for use by dhcp", 
          "type": "string"
        }, 
        "dhcp-start": {
          "description": "the start address reserved for use by dhcp", 
          "type": "string"
        }, 
        "gateway-address": {
          "description": "gateway ip address", 
          "type": "string"
        }, 
        "host-routes": {
          "items": {
            "$ref": "#/definitions/host-route"
          }, 
          "type": "array"
        }, 
        "ip-assignment-direction": {
          "description": "ip address assignment direction of the subnet", 
          "type": "string"
        }, 
        "ip-version": {
          "description": "ip version", 
          "type": "string"
        }, 
        "network-start-address": {
          "description": "network start address", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of this subnet", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "subnet-id": {
          "description": "Subnet ID, should be UUID.", 
          "type": "string"
        }, 
        "subnet-name": {
          "description": "Name associated with the subnet.", 
          "type": "string"
        }, 
        "subnet-role": {
          "description": "role of the subnet, referenced when assigning IPs", 
          "type": "string"
        }, 
        "subnet-sequence": {
          "description": "sequence of the subnet", 
          "format": "int32", 
          "type": "integer"
        }
      }, 
      "required": [
        "subnet-id", 
        "dhcp-enabled"
      ]
    }, 
    "subnets": {
      "properties": {
        "subnet": {
          "items": {
            "$ref": "#/definitions/subnet"
          }, 
          "type": "array"
        }
      }
    }, 
    "tagged-inventory-item-list": {
      "properties": {
        "inventory-item": {
          "items": {
            "$ref": "#/definitions/inventory-item"
          }, 
          "type": "array"
        }
      }
    }, 
    "tenant": {
      "description": "Openstack tenant\n###### Related Nodes\n- TO cloud-region (PARENT of tenant, tenant BelongsTo cloud-region, MANY2ONE)\n- TO group-assignment( tenant MemberOf group-assignment, MANY2MANY)\n- TO l3-network( tenant Uses l3-network, MANY2MANY)\n- TO volume-group( tenant DependsOn volume-group, ONE2MANY)\n- FROM service-subscription( service-subscription Uses tenant, MANY2MANY)\n- FROM vserver (CHILD of tenant, vserver BelongsTo tenant, MANY2ONE)\n\n-TENANT cannot be deleted if related to VSERVER\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "tenant-context": {
          "description": "This field will store the tenant context.", 
          "type": "string"
        }, 
        "tenant-id": {
          "description": "Unique id relative to the cloud-region.", 
          "type": "string"
        }, 
        "tenant-name": {
          "description": "Readable name of tenant", 
          "type": "string"
        }, 
        "vservers": {
          "items": {
            "$ref": "#/definitions/vserver"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "tenant-id", 
        "tenant-name"
      ]
    }, 
    "tenants": {
      "description": "Collection of openstack tenants.\n", 
      "properties": {
        "tenant": {
          "items": {
            "$ref": "#/definitions/tenant"
          }, 
          "type": "array"
        }
      }
    }, 
    "tunnel-xconnect": {
      "description": "Represents the specifics of a tunnel cross connect piece of a resource that gets separately allotted\n###### Related Nodes\n- TO allotted-resource (PARENT of tunnel-xconnect, tunnel-xconnect BelongsTo allotted-resource, ONE2ONE)(4)\n\n-(4) IF this TO node is deleted, this TUNNEL-XCONNECT is DELETED also\n", 
      "properties": {
        "bandwidth-down-wan1": {
          "description": "The WAN downlink bandwidth for WAN1", 
          "type": "string"
        }, 
        "bandwidth-down-wan2": {
          "description": "The WAN downlink bandwidth for WAN2", 
          "type": "string"
        }, 
        "bandwidth-up-wan1": {
          "description": "The WAN uplink bandwidth for WAN1", 
          "type": "string"
        }, 
        "bandwidth-up-wan2": {
          "description": "The WAN uplink bandwidth for WAN2", 
          "type": "string"
        }, 
        "id": {
          "description": "Allotted Resource id UUID assigned to this instance.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }
      }, 
      "required": [
        "id"
      ]
    }, 
    "tunnel-xconnects": {
      "description": "This object is used to store the specific tunnel cross connect aspects of an allotted resource\n", 
      "properties": {
        "tunnel-xconnect": {
          "items": {
            "$ref": "#/definitions/tunnel-xconnect"
          }, 
          "type": "array"
        }
      }
    }, 
    "update": {
      "description": "Serves a PATCH like function.  Does not enforce concurrency control.  Clear each usage with AAI team.\n", 
      "properties": {
        "action": {
          "items": {
            "$ref": "#/definitions/action"
          }, 
          "type": "array"
        }, 
        "update-node-key": {
          "items": {
            "$ref": "#/definitions/update-node-key"
          }, 
          "type": "array"
        }, 
        "update-node-type": {
          "type": "string"
        }, 
        "update-node-uri": {
          "type": "string"
        }
      }, 
      "required": [
        "update-node-type"
      ]
    }, 
    "update-node-key": {
      "properties": {
        "key-name": {
          "type": "string"
        }, 
        "key-value": {
          "type": "string"
        }
      }
    }, 
    "vce": {
      "description": "Virtual Customer Edge Router, used specifically for Gamma.  This object is deprecated.\n###### Related Nodes\n- TO availability-zone( vce Uses availability-zone, MANY2MANY)\n- TO complex( vce LocatedIn complex, MANY2MANY)\n- TO vserver( vce HostedOn vserver, ONE2MANY)\n- FROM entitlement (CHILD of vce, entitlement BelongsTo vce, MANY2ONE)(1)\n- FROM license (CHILD of vce, license BelongsTo vce, MANY2ONE)(1)\n- FROM port-group (CHILD of vce, port-group BelongsTo vce, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vce, ONE2MANY)\n\n-(1) IF this VCE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "entitlement-resource-uuid": {
          "description": "OBSOLETE -  see child relationships", 
          "type": "string"
        }, 
        "entitlements": {
          "items": {
            "$ref": "#/definitions/entitlement"
          }, 
          "type": "array"
        }, 
        "equipment-role": {
          "description": "Network role being played by this VNF", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance, managed by MSO", 
          "type": "string"
        }, 
        "ipv4-loopback0-address": {
          "description": "Loopback0 address", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure vce, also used for troubleshooting and is IP used for traps generated by VCE.", 
          "type": "string"
        }, 
        "license-key": {
          "description": "OBSOLETE -  do not use", 
          "type": "string"
        }, 
        "licenses": {
          "items": {
            "$ref": "#/definitions/license"
          }, 
          "type": "array"
        }, 
        "mso-catalog-key": {
          "description": "Corresponds to the SDN-C catalog id used to configure this VCE", 
          "type": "string"
        }, 
        "operational-status": {
          "description": "Indicator for whether the resource is considered operational", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by MSO", 
          "type": "string"
        }, 
        "port-groups": {
          "items": {
            "$ref": "#/definitions/port-group"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "regional-resource-zone": {
          "description": "Regional way of organizing pservers, source of truth should define values", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "service-id": {
          "description": "Unique identifier of service, does not strictly map to ASDC services, SOON TO BE DEPRECATED.", 
          "type": "string"
        }, 
        "v6-vce-wan-address": {
          "description": "Valid v6 IP address for the WAN Link on this router.  Implied length of /64.", 
          "type": "string"
        }, 
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }, 
        "vnf-name": {
          "description": "Name of VNF.", 
          "type": "string"
        }, 
        "vnf-name2": {
          "description": "Alternate name of VNF.", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "vpe-id": {
          "description": "Unique ID of VPE connected to this VCE.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id", 
        "vnf-name", 
        "vnf-type"
      ]
    }, 
    "vces": {
      "description": "Collection of Virtual Customer Edge Routers, used specifically for Gamma.  This object is deprecated.\n", 
      "properties": {
        "vce": {
          "items": {
            "$ref": "#/definitions/vce"
          }, 
          "type": "array"
        }
      }
    }, 
    "vf-module": {
      "description": "a deployment unit of VNFCs\n###### Related Nodes\n- TO generic-vnf (PARENT of vf-module, vf-module BelongsTo generic-vnf, MANY2ONE)(4)\n- TO l3-network( vf-module DependsOn l3-network, MANY2MANY)\n- TO vnfc( vf-module Uses vnfc, ONE2MANY)\n- TO volume-group( vf-module Uses volume-group, ONE2ONE)\n- TO vserver( vf-module Uses vserver, ONE2MANY)\n\n-(4) IF this TO node is deleted, this VF-MODULE is DELETED also\n-VF-MODULE cannot be deleted if related to VNFC\n", 
      "properties": {
        "contrail-service-instance-fqdn": {
          "description": "the Contrail unique ID for a service-instance", 
          "type": "string"
        }, 
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this instance.", 
          "type": "string"
        }, 
        "is-base-vf-module": {
          "description": "used to indicate whether or not this object is base vf module", 
          "type": "boolean"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "module-index": {
          "description": "the index will track the number of modules of a given type that have been deployed in a VNF, starting with 0, and always choosing the lowest available digit", 
          "format": "int32", 
          "type": "integer"
        }, 
        "orchestration-status": {
          "description": "orchestration status of this vf-module, mastered by MSO", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "Path to the controller object.", 
          "type": "string"
        }, 
        "vf-module-id": {
          "description": "Unique ID of vf-module.", 
          "type": "string"
        }, 
        "vf-module-name": {
          "description": "Name of vf-module", 
          "type": "string"
        }, 
        "widget-model-id": {
          "description": "the ASDC data dictionary widget model. This maps directly to the A&AI widget.", 
          "type": "string"
        }, 
        "widget-model-version": {
          "description": "the ASDC data dictionary version of the widget model.This maps directly to the A&AI version of the widget.", 
          "type": "string"
        }
      }, 
      "required": [
        "vf-module-id", 
        "is-base-vf-module"
      ]
    }, 
    "vf-modules": {
      "description": "Collection of vf-modules, a deployment unit of VNFCs\n", 
      "properties": {
        "vf-module": {
          "items": {
            "$ref": "#/definitions/vf-module"
          }, 
          "type": "array"
        }
      }
    }, 
    "vig-server": {
      "description": "vig-server contains information about a vig server used for IPSec-configuration. Populated by SDN-C from 1607\n###### Related Nodes\n- TO ipsec-configuration (PARENT of vig-server, vig-server BelongsTo ipsec-configuration, MANY2ONE)(4)\n\n-(4) IF this TO node is deleted, this VIG-SERVER is DELETED also\n", 
      "properties": {
        "ipaddress-v4-vig": {
          "description": "v4 IP of the vig server", 
          "type": "string"
        }, 
        "ipaddress-v6-vig": {
          "description": "v6 IP of the vig server", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vig-address-type": {
          "description": "indicates whether the VIG is for AVPN or INTERNET", 
          "type": "string"
        }
      }, 
      "required": [
        "vig-address-type"
      ]
    }, 
    "vig-servers": {
      "properties": {
        "vig-server": {
          "items": {
            "$ref": "#/definitions/vig-server"
          }, 
          "type": "array"
        }
      }
    }, 
    "vip-ipv4-address-list": {
      "description": "IPv4 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv4-address-list, vip-ipv4-address-list BelongsTo cloud-region, MANY2ONE)\n- TO instance-group( vip-ipv4-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv4-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vip-ipv4-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv4-prefix-length": {
          "description": "Prefix length, 32 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv4-address"
      ]
    }, 
    "vip-ipv6-address-list": {
      "description": "IPv6 Address Range\n###### Related Nodes\n- TO cloud-region (PARENT of vip-ipv6-address-list, vip-ipv6-address-list BelongsTo cloud-region, MANY2ONE)\n- TO instance-group( vip-ipv6-address-list MemberOf instance-group, MANY2MANY)\n- TO subnet( vip-ipv6-address-list MemberOf subnet, MANY2MANY)\n- FROM vnfc( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n", 
      "properties": {
        "is-floating": {
          "description": "Indicator of fixed or floating address", 
          "type": "boolean"
        }, 
        "neutron-network-id": {
          "description": "Neutron network id of the interface that address belongs to", 
          "type": "string"
        }, 
        "neutron-subnet-id": {
          "description": "Neutron id of subnet that address belongs to", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vip-ipv6-address": {
          "description": "IP address", 
          "type": "string"
        }, 
        "vip-ipv6-prefix-length": {
          "description": "Prefix length, 128 for single address", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "vip-ipv6-address"
      ]
    }, 
    "virtual-data-center": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n###### Related Nodes\n- FROM connector( connector LocatedIn virtual-data-center, MANY2MANY)\n- FROM generic-vnf( generic-vnf LocatedIn virtual-data-center, MANY2MANY)\n- FROM logical-link( logical-link LocatedIn virtual-data-center, MANY2MANY)\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vdc-id": {
          "description": "Unique ID of the vdc", 
          "type": "string"
        }, 
        "vdc-name": {
          "description": "Name of the virtual data center", 
          "type": "string"
        }
      }, 
      "required": [
        "vdc-id", 
        "vdc-name"
      ]
    }, 
    "virtual-data-centers": {
      "description": "Virtual organization of cloud infrastructure elements in a data center context\n", 
      "properties": {
        "virtual-data-center": {
          "items": {
            "$ref": "#/definitions/virtual-data-center"
          }, 
          "type": "array"
        }
      }
    }, 
    "vlan": {
      "description": "Definition of vlan\n###### Related Nodes\n- TO l-interface (PARENT of vlan, vlan LinksTo l-interface, MANY2ONE)(4)\n- TO logical-link( vlan Uses logical-link, MANY2MANY)(2)\n- TO multicast-configuration( vlan Uses multicast-configuration, MANY2MANY)\n- FROM allotted-resource( allotted-resource PartOf vlan, MANY2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of vlan, l3-interface-ipv4-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vlan, l3-interface-ipv6-address-list BelongsTo vlan, MANY2ONE)(1)\n- FROM service-instance( service-instance ComposedOf vlan, ONE2MANY)\n\n-(1) IF this VLAN node is deleted, this FROM node is DELETED also\n-(2) IF this VLAN node is deleted, this TO node is DELETED also\n-(4) IF this TO node is deleted, this VLAN is DELETED also\n", 
      "properties": {
        "backdoor-connection": {
          "description": "Whether customer is going to use this VLAN for backdoor connection to another customer premise device.", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "is-ip-unnumbered": {
          "description": "Flag indicating the interface uses the IP Unnumbered configuration.", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "orchestration-status": {
          "description": "Status of a vnf's vlan interface, on which the customer circuit resides, mastered by SDN-C.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "Prov Status of the VLAN configuration related to a logical interface. Valid values [PREPROV/NVTPROV/PROV].", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "speed-units": {
          "description": "Captures the units corresponding to the speed", 
          "type": "string"
        }, 
        "speed-value": {
          "description": "Captures the numeric part of the speed", 
          "type": "string"
        }, 
        "vlan-description": {
          "description": "Used to describe (the service associated with) the vlan", 
          "type": "string"
        }, 
        "vlan-id-inner": {
          "description": "Inner VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-id-outer": {
          "description": "Outer VLAN tag", 
          "format": "int64", 
          "type": "integer"
        }, 
        "vlan-interface": {
          "description": "String that identifies the interface", 
          "type": "string"
        }, 
        "vpn-key": {
          "description": "This indicates the customers VPN ID associated with this vlan", 
          "type": "string"
        }
      }, 
      "required": [
        "vlan-interface", 
        "in-maint", 
        "is-ip-unnumbered"
      ]
    }, 
    "vlans": {
      "properties": {
        "vlan": {
          "items": {
            "$ref": "#/definitions/vlan"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnf": {
      "description": "Abstract vnf class\n", 
      "properties": {
        "vnf-id": {
          "description": "Unique id of VNF.  This is unique across the graph.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-id"
      ]
    }, 
    "vnf-image": {
      "description": "Image object that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n###### Related Nodes\n- FROM generic-vnf( generic-vnf Uses vnf-image, MANY2ONE)\n\n-VNF-IMAGE cannot be deleted if related to GENERIC-VNF\n", 
      "properties": {
        "application": {
          "description": "The application that the image instantiates.", 
          "type": "string"
        }, 
        "application-vendor": {
          "description": "The vendor of the application.", 
          "type": "string"
        }, 
        "application-version": {
          "description": "The version of the application.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }, 
        "vnf-image-uuid": {
          "description": "Unique ID of this asset", 
          "type": "string"
        }
      }, 
      "required": [
        "vnf-image-uuid", 
        "application", 
        "application-vendor"
      ]
    }, 
    "vnf-images": {
      "description": "Collection of image objects that pertain to a VNF that doesn't have associated vservers.  This is a kludge.\n", 
      "properties": {
        "vnf-image": {
          "items": {
            "$ref": "#/definitions/vnf-image"
          }, 
          "type": "array"
        }
      }
    }, 
    "vnfc": {
      "description": "###### Related Nodes\n- TO generic-vnf( vnfc BelongsTo generic-vnf, MANY2ONE)(4)\n- TO instance-group( vnfc MemberOf instance-group, MANY2MANY)\n- TO vip-ipv4-address-list( vnfc Uses vip-ipv4-address-list, MANY2MANY)\n- TO vip-ipv6-address-list( vnfc Uses vip-ipv6-address-list, MANY2MANY)\n- TO vserver( vnfc HostedOn vserver, ONE2MANY)\n- FROM l3-interface-ipv4-address-list (CHILD of vnfc, l3-interface-ipv4-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM l3-interface-ipv6-address-list (CHILD of vnfc, l3-interface-ipv6-address-list BelongsTo vnfc, MANY2ONE)(1)\n- FROM vf-module( vf-module Uses vnfc, ONE2MANY)\n\n-(1) IF this VNFC node is deleted, this FROM node is DELETED also\n-(4) IF this TO node is deleted, this VNFC is DELETED also\n", 
      "properties": {
        "group-notation": {
          "description": "Group notation of VNFC", 
          "type": "string"
        }, 
        "in-maint": {
          "description": "used to indicate whether or not this object is in maintenance mode (maintenance mode = true)", 
          "type": "boolean"
        }, 
        "ipaddress-v4-oam-vip": {
          "description": "Oam V4 vip address of this vnfc", 
          "type": "string"
        }, 
        "is-closed-loop-disabled": {
          "description": "used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "l3-interface-ipv4-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv4-address-list"
          }, 
          "type": "array"
        }, 
        "l3-interface-ipv6-address-list": {
          "items": {
            "$ref": "#/definitions/l3-interface-ipv6-address-list"
          }, 
          "type": "array"
        }, 
        "model-invariant-id": {
          "also requires": "model-version-id", 
          "description": "the ASDC model id for this resource or service model.", 
          "type": "string"
        }, 
        "model-version-id": {
          "also requires": "model-invariant-id", 
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "nfc-function": {
          "description": "English description of function that the specific resource deployment is providing. Assigned as part of the customization of a resource in a service", 
          "type": "string"
        }, 
        "nfc-naming-code": {
          "description": "Short code that is used in naming instances of the item being modeled", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this VNF, mastered by APP-C", 
          "type": "string"
        }, 
        "persona-model-version": {
          "description": "the ASDC model version for this resource or service model.", 
          "type": "string"
        }, 
        "prov-status": {
          "description": "prov status of this vnfc", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vnfc-name": {
          "description": "Unique ID of vnfc.", 
          "type": "string"
        }
      }, 
      "required": [
        "vnfc-name", 
        "nfc-naming-code", 
        "nfc-function", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vnfcs": {
      "description": "virtual network components associated with a vserver from application controller.\n", 
      "properties": {
        "vnfc": {
          "items": {
            "$ref": "#/definitions/vnfc"
          }, 
          "type": "array"
        }
      }
    }, 
    "volume": {
      "description": "Ephemeral Block storage volume.\n###### Related Nodes\n- FROM vserver (PARENT of volume, vserver AttachesTo volume, ONE2MANY)(3)\n\n-(3) IF this FROM node is deleted, this VOLUME is DELETED also\n", 
      "properties": {
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "volume-id": {
          "description": "Unique ID of block storage volume relative to the vserver.", 
          "type": "string"
        }, 
        "volume-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-id", 
        "volume-selflink"
      ]
    }, 
    "volume-group": {
      "description": "Persistent block-level storage.\n###### Related Nodes\n- TO cloud-region (PARENT of volume-group, volume-group BelongsTo cloud-region, MANY2ONE)\n- TO complex( volume-group LocatedIn complex, MANY2ONE)\n- FROM generic-vnf( generic-vnf DependsOn volume-group, ONE2MANY)\n- FROM tenant( tenant DependsOn volume-group, ONE2MANY)\n- FROM vf-module( vf-module Uses volume-group, ONE2ONE)\n", 
      "properties": {
        "heat-stack-id": {
          "description": "Heat stack id corresponding to this volume-group", 
          "type": "string"
        }, 
        "model-customization-id": {
          "description": "captures the id of all the configuration used to customize the resource for the service.", 
          "type": "string"
        }, 
        "orchestration-status": {
          "description": "Orchestration status of this volume-group", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vf-module-model-customization-id": {
          "description": "helps relate the volume group to the vf-module whose components will require the volume group", 
          "type": "string"
        }, 
        "vnf-type": {
          "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
          "type": "string"
        }, 
        "volume-group-id": {
          "description": "Unique ID of volume-group.", 
          "type": "string"
        }, 
        "volume-group-name": {
          "description": "Name of the volume group.", 
          "type": "string"
        }
      }, 
      "required": [
        "volume-group-id", 
        "vnf-type"
      ]
    }, 
    "volume-groups": {
      "description": "Collection of persistent block-level storage.\n", 
      "properties": {
        "volume-group": {
          "items": {
            "$ref": "#/definitions/volume-group"
          }, 
          "type": "array"
        }
      }
    }, 
    "volumes": {
      "description": "Collection of ephemeral Block storage volumes.\n", 
      "properties": {
        "volume": {
          "items": {
            "$ref": "#/definitions/volume"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpls-pe": {
      "description": "VPLS Provider Edge routers.\n###### Related Nodes\n- TO complex( vpls-pe LocatedIn complex, MANY2ONE)\n- TO ctag-pool( vpls-pe Uses ctag-pool, MANY2MANY)\n- FROM lag-interface (CHILD of vpls-pe, lag-interface BindsTo vpls-pe, MANY2ONE)(1)\n- FROM p-interface (CHILD of vpls-pe, p-interface BindsTo vpls-pe, MANY2ONE)(1)\n\n-(1) IF this VPLS-PE node is deleted, this FROM node is DELETED also\n", 
      "properties": {
        "equipment-name": {
          "type": "string"
        }, 
        "equipment-role": {
          "description": "Client should send valid enumerated value, e.g., VPLS-PE.", 
          "type": "string"
        }, 
        "ipv4-oam-address": {
          "description": "Address tail-f uses to configure generic-vnf, also used for troubleshooting and is IP used for traps generated by GenericVnf (v4-loopback0-ip-address).", 
          "type": "string"
        }, 
        "lag-interfaces": {
          "items": {
            "$ref": "#/definitions/lag-interface"
          }, 
          "type": "array"
        }, 
        "p-interfaces": {
          "items": {
            "$ref": "#/definitions/p-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this VNF by BAU Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "vlan-id-outer": {
          "description": "Temporary location for stag to get to VCE", 
          "format": "int64", 
          "type": "integer"
        }
      }, 
      "required": [
        "equipment-name"
      ]
    }, 
    "vpls-pes": {
      "description": "Collection of VPLS Provider Edge routers\n", 
      "properties": {
        "vpls-pe": {
          "items": {
            "$ref": "#/definitions/vpls-pe"
          }, 
          "type": "array"
        }
      }
    }, 
    "vpn-binding": {
      "description": "VPN binding\n###### Related Nodes\n- FROM allotted-resource( allotted-resource BelongsTo vpn-binding, MANY2MANY)\n- FROM l3-network( l3-network Uses vpn-binding, MANY2MANY)\n- FROM logical-link( logical-link Uses vpn-binding, MANY2MANY)\n- FROM route-target (CHILD of vpn-binding, route-target BelongsTo vpn-binding, MANY2ONE)(1)\n\n-(1) IF this VPN-BINDING node is deleted, this FROM node is DELETED also\n-VPN-BINDING cannot be deleted if related to ALLOTTED-RESOURCE,L3-NETWORK,LOGICAL-LINK\n", 
      "properties": {
        "customer-vpn-id": {
          "description": "id for this customer vpn", 
          "type": "string"
        }, 
        "relationship-list": {
          "description": "l3-networks relate to vpn-bindings", 
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "route-distinguisher": {
          "description": "Used to distinguish the distinct VPN routes of separate customers who connect to the provider in an MPLS network.", 
          "type": "string"
        }, 
        "route-targets": {
          "items": {
            "$ref": "#/definitions/route-target"
          }, 
          "type": "array"
        }, 
        "vpn-id": {
          "description": "VPN ID, globally unique within A&AI", 
          "type": "string"
        }, 
        "vpn-name": {
          "description": "VPN Name", 
          "type": "string"
        }, 
        "vpn-platform": {
          "description": "the platform associated with the VPN example AVPN, Mobility", 
          "type": "string"
        }, 
        "vpn-region": {
          "description": "region of customer vpn", 
          "type": "string"
        }, 
        "vpn-type": {
          "description": "Type of the vpn, should be taken from enumerated/valid values", 
          "type": "string"
        }
      }, 
      "required": [
        "vpn-id", 
        "vpn-name"
      ]
    }, 
    "vpn-bindings": {
      "properties": {
        "vpn-binding": {
          "items": {
            "$ref": "#/definitions/vpn-binding"
          }, 
          "type": "array"
        }
      }
    }, 
    "vserver": {
      "description": "Virtual Servers, aka virtual machine or VM.\n###### Related Nodes\n- TO flavor( vserver Uses flavor, MANY2ONE)\n- TO image( vserver Uses image, MANY2ONE)\n- TO pserver( vserver HostedOn pserver, MANY2ONE)\n- TO snapshot( vserver Uses snapshot, ONE2ONE)\n- TO tenant (PARENT of vserver, vserver BelongsTo tenant, MANY2ONE)\n- TO volume (PARENT of vserver, vserver AttachesTo volume, ONE2MANY)(2)\n- FROM generic-vnf( generic-vnf HostedOn vserver, ONE2MANY)\n- FROM l-interface (CHILD of vserver, l-interface BindsTo vserver, MANY2ONE)(1)\n- FROM vce( vce HostedOn vserver, ONE2MANY)\n- FROM vf-module( vf-module Uses vserver, ONE2MANY)\n- FROM vnfc( vnfc HostedOn vserver, ONE2MANY)\n\n-(1) IF this VSERVER node is deleted, this FROM node is DELETED also\n-(2) IF this VSERVER node is deleted, this TO node is DELETED also\n", 
      "properties": {
        "in-maint": {
          "description": "Used to indicate whether or not this object is in maintenance mode (maintenance mode = true). This field (in conjunction with prov-status) is used to suppress alarms and vSCL on VNFs/VMs.", 
          "type": "boolean"
        }, 
        "is-closed-loop-disabled": {
          "description": "Used to indicate whether closed loop function is enabled on this node", 
          "type": "boolean"
        }, 
        "l-interfaces": {
          "items": {
            "$ref": "#/definitions/l-interface"
          }, 
          "type": "array"
        }, 
        "prov-status": {
          "description": "Trigger for operational monitoring of this resource by Service Assurance systems.", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Used for optimistic concurrency.  Must be empty on create, valid on update and delete.", 
          "type": "string"
        }, 
        "volumes": {
          "items": {
            "$ref": "#/definitions/volume"
          }, 
          "type": "array"
        }, 
        "vserver-id": {
          "description": "Unique identifier for this vserver relative to its tenant", 
          "type": "string"
        }, 
        "vserver-name": {
          "description": "Name of vserver", 
          "type": "string"
        }, 
        "vserver-name2": {
          "description": "Alternative name of vserver", 
          "type": "string"
        }, 
        "vserver-selflink": {
          "description": "URL to endpoint where AAI can get more details", 
          "type": "string"
        }
      }, 
      "required": [
        "vserver-id", 
        "vserver-name", 
        "vserver-selflink", 
        "in-maint", 
        "is-closed-loop-disabled"
      ]
    }, 
    "vservers": {
      "description": "Collection of virtual Servers, aka virtual machines or VMs.\n", 
      "properties": {
        "vserver": {
          "items": {
            "$ref": "#/definitions/vserver"
          }, 
          "type": "array"
        }
      }
    }, 
    "zone": {
      "description": "A zone is a grouping of assets in a location homing to the same connections into the CBB\n###### Related Nodes\n- TO complex( zone LocatedIn complex, MANY2ONE)\n- FROM cloud-region( cloud-region LocatedIn zone, MANY2ONE)\n- FROM pnf( pnf LocatedIn zone, MANY2ONE)\n- FROM pserver( pserver LocatedIn zone, MANY2ONE)\n- FROM service-instance( service-instance LocatedIn zone, MANY2ONE)\n", 
      "properties": {
        "design-type": {
          "description": "Design of zone [Medium/Large?]", 
          "type": "string"
        }, 
        "relationship-list": {
          "items": {
            "$ref": "#/definitions/relationship"
          }, 
          "type": "array"
        }, 
        "resource-version": {
          "description": "Concurrency value", 
          "type": "string"
        }, 
        "status": {
          "description": "Status of a zone.", 
          "type": "string"
        }, 
        "zone-context": {
          "description": "Context of zone [production/test]", 
          "type": "string"
        }, 
        "zone-id": {
          "description": "Code assigned by AIC to the zone", 
          "type": "string"
        }, 
        "zone-name": {
          "description": "English name associated with the zone", 
          "type": "string"
        }
      }, 
      "required": [
        "zone-id", 
        "zone-name", 
        "design-type", 
        "zone-context"
      ]
    }, 
    "zones": {
      "description": "Collection of zones\n", 
      "properties": {
        "zone": {
          "items": {
            "$ref": "#/definitions/zone"
          }, 
          "type": "array"
        }
      }
    }
  }, 
  "host": "n/a", 
  "info": {
    "contact": {
      "email": "n/a", 
      "name": "n/a", 
      "url": "n/a"
    }, 
    "description": "\n[Differences versus the previous schema version](apidocs/aai_swagger_v11.diff)\n\nCopyright &copy; 2017-18 AT&amp;T Intellectual Property. All rights reserved.\n\nLicensed under the Creative Commons License, Attribution 4.0 Intl. (the &quot;License&quot;); you may not use this documentation except in compliance with the License.\n\nYou may obtain a copy of the License at\n\n(https://creativecommons.org/licenses/by/4.0/)\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\nThis document is best viewed with Firefox or Chrome. Nodes can be found by appending /#/definitions/node-type-to-find to the path to this document. Edge definitions can be found with the node definitions.\n", 
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "title": "Active and Available Inventory REST API", 
    "version": "v11"
  }, 
  "paths": {
    "/nodes/allotted-resources/allotted-resource/{id}": {
      "get": {
        "description": "returns allotted-resource", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResource", 
        "parameters": [
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/allotted-resource"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns allotted-resource", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/allotted-resources?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns allotted-resources", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResources", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "role", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/allotted-resources"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns allotted-resources", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/availability-zones/availability-zone/{availability-zone-name}": {
      "get": {
        "description": "returns availability-zone", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionAvailabilityZonesAvailabilityZone", 
        "parameters": [
          {
            "description": "Name of the availability zone.  Unique across a cloud region", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/availability-zone"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns availability-zone", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/availability-zones?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns availability-zones", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionAvailabilityZones", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "availability-zone-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/availability-zones"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns availability-zones", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/class-of-service/{cos}": {
      "get": {
        "description": "returns class-of-service", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfServiceClassOfService", 
        "parameters": [
          {
            "description": "unique identifier of probe", 
            "example": "__COS__", 
            "in": "path", 
            "name": "cos", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/class-of-service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns class-of-service", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/classes-of-service?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns classes-of-service", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePairClassesOfService", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cos", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/classes-of-service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns classes-of-service", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/cloud-regions/cloud-region/{cloud-owner}/{cloud-region-id}": {
      "get": {
        "description": "returns cloud-region", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegion", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/cloud-region"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cloud-region", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/cloud-regions?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns cloud-regions", 
        "operationId": "getCloudInfrastructureCloudRegions", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cloud-owner", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cloud-region-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "cloud-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "owner-defined-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/cloud-regions"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cloud-regions", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/complexes/complex/{physical-location-id}": {
      "get": {
        "description": "returns complex", 
        "operationId": "getCloudInfrastructureComplexesComplex", 
        "parameters": [
          {
            "description": "Unique identifier for physical location, e.g., CLLI", 
            "example": "__PHYSICAL-LOCATION-ID__", 
            "in": "path", 
            "name": "physical-location-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/complex"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns complex", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/complexes?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns complexes", 
        "operationId": "getCloudInfrastructureComplexes", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "physical-location-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "data-center-code", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "complex-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "identity-url", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/complexes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns complexes", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/configurations/configuration/{configuration-id}": {
      "get": {
        "description": "returns configuration", 
        "operationId": "getNetworkConfigurationsConfiguration", 
        "parameters": [
          {
            "description": "UUID assigned to configuration.", 
            "example": "__CONFIGURATION-ID__", 
            "in": "path", 
            "name": "configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/configuration"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns configuration", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/configurations?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns configurations", 
        "operationId": "getNetworkConfigurations", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "configuration-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/configurations"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns configurations", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/connectors/connector/{resource-instance-id}": {
      "get": {
        "description": "returns connector", 
        "operationId": "getBusinessConnectorsConnector", 
        "parameters": [
          {
            "description": "Unique id of resource instance.", 
            "example": "__RESOURCE-INSTANCE-ID__", 
            "in": "path", 
            "name": "resource-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/connector"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns connector", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/connectors?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns connectors", 
        "operationId": "getBusinessConnectors", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-instance-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/connectors"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns connectors", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/constrained-element-sets/constrained-element-set/{constrained-element-set-uuid}": {
      "get": {
        "description": "returns constrained-element-set", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSet", 
        "parameters": [
          {
            "example": "__CONSTRAINED-ELEMENT-SET-UUID__", 
            "in": "path", 
            "name": "constrained-element-set-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/constrained-element-set"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns constrained-element-set", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/constrained-element-sets?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns constrained-element-sets", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSets", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "constrained-element-set-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/constrained-element-sets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns constrained-element-sets", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/ctag-assignments/ctag-assignment/{vlan-id-inner}": {
      "get": {
        "description": "returns ctag-assignment", 
        "operationId": "getNetworkL3NetworksL3NetworkCtagAssignmentsCtagAssignment", 
        "parameters": [
          {
            "description": "id.", 
            "example": "__VLAN-ID-INNER__", 
            "format": "int64", 
            "in": "path", 
            "name": "vlan-id-inner", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/ctag-assignment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-assignment", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/ctag-assignments?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns ctag-assignments", 
        "operationId": "getNetworkL3NetworksL3NetworkCtagAssignments", 
        "parameters": [
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/ctag-assignments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-assignments", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/ctag-pools/ctag-pool/{target-pe}/{availability-zone-name}": {
      "get": {
        "description": "returns ctag-pool", 
        "operationId": "getCloudInfrastructureComplexesComplexCtagPoolsCtagPool", 
        "parameters": [
          {
            "description": "The Target provider edge router", 
            "example": "__TARGET-PE__", 
            "in": "path", 
            "name": "target-pe", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Name of the availability zone", 
            "example": "__AVAILABILITY-ZONE-NAME__", 
            "in": "path", 
            "name": "availability-zone-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/ctag-pool"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-pool", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/ctag-pools?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns ctag-pools", 
        "operationId": "getCloudInfrastructureComplexesComplexCtagPools", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "availability-zone-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/ctag-pools"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ctag-pools", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/customers/customer/{global-customer-id}": {
      "get": {
        "description": "returns customer", 
        "operationId": "getBusinessCustomersCustomer", 
        "parameters": [
          {
            "description": "Global customer id used across ECOMP to uniquely identify customer.", 
            "example": "__GLOBAL-CUSTOMER-ID__", 
            "in": "path", 
            "name": "global-customer-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns customer", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/customers?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns customers", 
        "operationId": "getBusinessCustomers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "global-customer-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subscriber-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subscriber-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/customers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns customers", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/cvlan-tag-entry/{cvlan-tag}": {
      "get": {
        "description": "returns cvlan-tag-entry", 
        "operationId": "getNetworkVcesVcePortGroupsPortGroupCvlanTagsCvlanTagEntry", 
        "parameters": [
          {
            "description": "See mis-na-virtualization-platform.yang", 
            "example": "__CVLAN-TAG__", 
            "format": "int64", 
            "in": "path", 
            "name": "cvlan-tag", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/cvlan-tag-entry"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cvlan-tag-entry", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/cvlan-tags?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns cvlan-tags", 
        "operationId": "getNetworkVcesVcePortGroupsPortGroupCvlanTags", 
        "parameters": [
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "cvlan-tag", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/cvlan-tags"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns cvlan-tags", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/dvs-switches/dvs-switch/{switch-name}": {
      "get": {
        "description": "returns dvs-switch", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionDvsSwitchesDvsSwitch", 
        "parameters": [
          {
            "description": "DVS switch name", 
            "example": "__SWITCH-NAME__", 
            "in": "path", 
            "name": "switch-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/dvs-switch"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns dvs-switch", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/dvs-switches?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns dvs-switches", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionDvsSwitches", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "switch-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vcenter-url", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/dvs-switches"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns dvs-switches", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/element-choice-sets/element-choice-set/{element-choice-set-uuid}": {
      "get": {
        "description": "returns element-choice-set", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSetsElementChoiceSet", 
        "parameters": [
          {
            "example": "__ELEMENT-CHOICE-SET-UUID__", 
            "in": "path", 
            "name": "element-choice-set-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/element-choice-set"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns element-choice-set", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/element-choice-sets?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns element-choice-sets", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraintConstrainedElementSetsConstrainedElementSetElementChoiceSets", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "element-choice-set-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/element-choice-sets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns element-choice-sets", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/entitlements/entitlement/{group-uuid}/{resource-uuid}": {
      "get": {
        "description": "returns entitlement", 
        "operationId": "getNetworkVcesVceEntitlementsEntitlement", 
        "parameters": [
          {
            "description": "Unique ID for the entitlement group the resource comes from, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of an entitlement resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/entitlement"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns entitlement", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/entitlements?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns entitlements", 
        "operationId": "getNetworkVcesVceEntitlements", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/entitlements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns entitlements", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-ems-list/esr-ems/{ems-id}": {
      "get": {
        "description": "returns esr-ems", 
        "operationId": "getExternalSystemEsrEmsListEsrEms", 
        "parameters": [
          {
            "description": "Unique ID of EMS.", 
            "example": "__EMS-ID__", 
            "in": "path", 
            "name": "ems-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-ems"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-ems", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-ems-list?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns esr-ems-list", 
        "operationId": "getExternalSystemEsrEmsList", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ems-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-ems-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-ems-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-system-info-list/esr-system-info/{esr-system-info-id}": {
      "get": {
        "description": "returns esr-system-info", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoListEsrSystemInfo", 
        "parameters": [
          {
            "description": "Unique ID of esr system info.", 
            "example": "__ESR-SYSTEM-INFO-ID__", 
            "in": "path", 
            "name": "esr-system-info-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-system-info"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-system-info-list?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns esr-system-info-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionEsrSystemInfoList", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "esr-system-info-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "system-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-system-info-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-system-info-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-thirdparty-sdnc-list/esr-thirdparty-sdnc/{thirdparty-sdnc-id}": {
      "get": {
        "description": "returns esr-thirdparty-sdnc", 
        "operationId": "getExternalSystemEsrThirdpartySdncListEsrThirdpartySdnc", 
        "parameters": [
          {
            "description": "Unique ID of SDNC.", 
            "example": "__THIRDPARTY-SDNC-ID__", 
            "in": "path", 
            "name": "thirdparty-sdnc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-thirdparty-sdnc"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-thirdparty-sdnc", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-thirdparty-sdnc-list?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns esr-thirdparty-sdnc-list", 
        "operationId": "getExternalSystemEsrThirdpartySdncList", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-thirdparty-sdnc-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-thirdparty-sdnc-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-vnfm-list/esr-vnfm/{vnfm-id}": {
      "get": {
        "description": "returns esr-vnfm", 
        "operationId": "getExternalSystemEsrVnfmListEsrVnfm", 
        "parameters": [
          {
            "description": "Unique ID of VNFM.", 
            "example": "__VNFM-ID__", 
            "in": "path", 
            "name": "vnfm-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-vnfm"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-vnfm", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/esr-vnfm-list?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns esr-vnfm-list", 
        "operationId": "getExternalSystemEsrVnfmList", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnfm-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/esr-vnfm-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns esr-vnfm-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/flavors/flavor/{flavor-id}": {
      "get": {
        "description": "returns flavor", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavorsFlavor", 
        "parameters": [
          {
            "description": "Flavor id, expected to be unique across cloud-region.", 
            "example": "__FLAVOR-ID__", 
            "in": "path", 
            "name": "flavor-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/flavor"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns flavor", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/flavors?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns flavors", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionFlavors", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "flavor-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "flavor-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/flavors"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns flavors", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/generic-vnfs/generic-vnf/{vnf-id}": {
      "get": {
        "description": "returns generic-vnf", 
        "operationId": "getNetworkGenericVnfsGenericVnf", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/generic-vnf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns generic-vnf", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/generic-vnfs?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns generic-vnfs", 
        "operationId": "getNetworkGenericVnfs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "regional-resource-zone", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "is-closed-loop-disabled", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-function", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-role", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nf-naming-code", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/generic-vnfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns generic-vnfs", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/group-assignments/group-assignment/{group-id}": {
      "get": {
        "description": "returns group-assignment", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionGroupAssignmentsGroupAssignment", 
        "parameters": [
          {
            "description": "Group id, expected to be unique across cloud-region.", 
            "example": "__GROUP-ID__", 
            "in": "path", 
            "name": "group-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/group-assignment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns group-assignment", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/group-assignments?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns group-assignments", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionGroupAssignments", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/group-assignments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns group-assignments", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/host-routes/host-route/{host-route-id}": {
      "get": {
        "description": "returns host-route", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutesHostRoute", 
        "parameters": [
          {
            "description": "host-route id", 
            "example": "__HOST-ROUTE-ID__", 
            "in": "path", 
            "name": "host-route-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/host-route"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns host-route", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/host-routes?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns host-routes", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnetsSubnetHostRoutes", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "host-route-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/host-routes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns host-routes", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/images/image/{image-id}": {
      "get": {
        "description": "returns image", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImagesImage", 
        "parameters": [
          {
            "description": "Image id, expected to be unique across cloud region", 
            "example": "__IMAGE-ID__", 
            "in": "path", 
            "name": "image-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/image"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns image", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/images?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns images", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImages", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "image-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "image-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/images"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns images", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/instance-groups/instance-group/{id}": {
      "get": {
        "description": "returns instance-group", 
        "operationId": "getNetworkInstanceGroupsInstanceGroup", 
        "parameters": [
          {
            "description": "Instance Group ID, UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/instance-group"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns instance-group", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/instance-groups?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns instance-groups", 
        "operationId": "getNetworkInstanceGroups", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "description", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "sub-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/instance-groups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns instance-groups", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/ipsec-configurations/ipsec-configuration/{ipsec-configuration-id}": {
      "get": {
        "description": "returns ipsec-configuration", 
        "operationId": "getNetworkIpsecConfigurationsIpsecConfiguration", 
        "parameters": [
          {
            "description": "UUID of this configuration", 
            "example": "__IPSEC-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "ipsec-configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/ipsec-configuration"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ipsec-configuration", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/ipsec-configurations?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns ipsec-configurations", 
        "operationId": "getNetworkIpsecConfigurations", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipsec-configuration-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/ipsec-configurations"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns ipsec-configurations", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/l-interfaces/l-interface/{interface-name}": {
      "get": {
        "description": "returns l-interface", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterface", 
        "parameters": [
          {
            "description": "Name given to the interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/l-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interface", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/l-interfaces?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns l-interfaces", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfaces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "macaddr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/l-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l-interfaces", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/l3-interface-ipv4-address-list/{l3-interface-ipv4-address}": {
      "get": {
        "description": "returns l3-interface-ipv4-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv4AddressList", 
        "parameters": [
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv4-address-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/l3-interface-ipv6-address-list/{l3-interface-ipv6-address}": {
      "get": {
        "description": "returns l3-interface-ipv6-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlanL3InterfaceIpv6AddressList", 
        "parameters": [
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__L3-INTERFACE-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "l3-interface-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/l3-interface-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-interface-ipv6-address-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/l3-networks/l3-network/{network-id}": {
      "get": {
        "description": "returns l3-network", 
        "operationId": "getNetworkL3NetworksL3Network", 
        "parameters": [
          {
            "description": "Network ID, should be uuid. Unique across A&AI.", 
            "example": "__NETWORK-ID__", 
            "in": "path", 
            "name": "network-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/l3-network"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-network", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/l3-networks?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns l3-networks", 
        "operationId": "getNetworkL3Networks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-role", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "contrail-network-fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/l3-networks"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns l3-networks", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/lag-interfaces/lag-interface/{interface-name}": {
      "get": {
        "description": "returns lag-interface", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfacesLagInterface", 
        "parameters": [
          {
            "description": "Name that identifies the link aggregate interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/lag-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interface", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/lag-interfaces?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns lag-interfaces", 
        "operationId": "getCloudInfrastructurePserversPserverLagInterfaces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-role", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/lag-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-interfaces", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/lag-links/lag-link/{link-name}": {
      "get": {
        "description": "returns lag-link", 
        "operationId": "getNetworkLagLinksLagLink", 
        "parameters": [
          {
            "description": "Alphabetical concatenation of lag-interface names", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/lag-link"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-link", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/lag-links?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns lag-links", 
        "operationId": "getNetworkLagLinks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/lag-links"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lag-links", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/licenses/license/{group-uuid}/{resource-uuid}": {
      "get": {
        "description": "returns license", 
        "operationId": "getNetworkVcesVceLicensesLicense", 
        "parameters": [
          {
            "description": "Unique ID for the license group the resource belongs to, should be uuid.", 
            "example": "__GROUP-UUID__", 
            "in": "path", 
            "name": "group-uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Unique ID of a license resource.", 
            "example": "__RESOURCE-UUID__", 
            "in": "path", 
            "name": "resource-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/license"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns license", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/licenses?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns licenses", 
        "operationId": "getNetworkVcesVceLicenses", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "resource-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/licenses"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns licenses", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/line-of-business/{line-of-business-name}": {
      "get": {
        "description": "returns line-of-business", 
        "operationId": "getBusinessLinesOfBusinessLineOfBusiness", 
        "parameters": [
          {
            "description": "Name of the line-of-business (product)", 
            "example": "__LINE-OF-BUSINESS-NAME__", 
            "in": "path", 
            "name": "line-of-business-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/line-of-business"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns line-of-business", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/lines-of-business?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns lines-of-business", 
        "operationId": "getBusinessLinesOfBusiness", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "line-of-business-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/lines-of-business"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns lines-of-business", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/logical-links/logical-link/{link-name}": {
      "get": {
        "description": "returns logical-link", 
        "operationId": "getNetworkLogicalLinksLogicalLink", 
        "parameters": [
          {
            "description": "e.g., evc-name, or vnf-nameA_interface-nameA_vnf-nameZ_interface-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/logical-link"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns logical-link", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/logical-links?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns logical-links", 
        "operationId": "getNetworkLogicalLinks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "circuit-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "purpose", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/logical-links"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns logical-links", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/metadata?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns metadata", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadata", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "metaname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/metadata"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadata", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/metadatum/{metaname}": {
      "get": {
        "description": "returns metadatum", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionImagesImageMetadataMetadatum", 
        "parameters": [
          {
            "example": "__METANAME__", 
            "in": "path", 
            "name": "metaname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/metadatum"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns metadatum", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/model-constraints/model-constraint/{model-constraint-uuid}": {
      "get": {
        "description": "returns model-constraint", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraintsModelConstraint", 
        "parameters": [
          {
            "example": "__MODEL-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "model-constraint-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model-constraint"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-constraint", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/model-constraints?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns model-constraints", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElementModelConstraints", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-constraint-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model-constraints"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-constraints", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/model-elements/model-element/{model-element-uuid}": {
      "get": {
        "description": "returns model-element", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElementsModelElement", 
        "parameters": [
          {
            "example": "__MODEL-ELEMENT-UUID__", 
            "in": "path", 
            "name": "model-element-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model-element"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-element", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/model-elements?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns model-elements", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVerModelElements", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-element-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model-elements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-elements", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/model-vers/model-ver/{model-version-id}": {
      "get": {
        "description": "returns model-ver", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVersModelVer", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to one version of a model in ASDC", 
            "example": "__MODEL-VERSION-ID__", 
            "in": "path", 
            "name": "model-version-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model-ver"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-ver", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/model-vers?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns model-vers", 
        "operationId": "getServiceDesignAndCreationModelsModelModelVers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model-vers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model-vers", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/models/model/{model-invariant-id}": {
      "get": {
        "description": "returns model", 
        "operationId": "getServiceDesignAndCreationModelsModel", 
        "parameters": [
          {
            "description": "Unique identifier corresponding to the main definition of a model in ASDC", 
            "example": "__MODEL-INVARIANT-ID__", 
            "in": "path", 
            "name": "model-invariant-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/model"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns model", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/models?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns models", 
        "operationId": "getServiceDesignAndCreationModels", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/models"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns models", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/multicast-configurations/multicast-configuration/{multicast-configuration-id}": {
      "get": {
        "description": "returns multicast-configuration", 
        "operationId": "getNetworkMulticastConfigurationsMulticastConfiguration", 
        "parameters": [
          {
            "description": "Unique id of multicast configuration.", 
            "example": "__MULTICAST-CONFIGURATION-ID__", 
            "in": "path", 
            "name": "multicast-configuration-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/multicast-configuration"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns multicast-configuration", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/multicast-configurations?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns multicast-configurations", 
        "operationId": "getNetworkMulticastConfigurations", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "multicast-configuration-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/multicast-configurations"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns multicast-configurations", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/named-queries?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns named-queries", 
        "operationId": "getServiceDesignAndCreationNamedQueries", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "named-query-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "named-query-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/named-queries"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-queries", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/named-query-elements/named-query-element/{named-query-element-uuid}": {
      "get": {
        "description": "returns named-query-element", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElement", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-ELEMENT-UUID__", 
            "in": "path", 
            "name": "named-query-element-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/named-query-element"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-query-element", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/named-query-elements?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns named-query-elements", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElements", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "named-query-element-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/named-query-elements"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-query-elements", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/named-query/{named-query-uuid}": {
      "get": {
        "description": "returns named-query", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQuery", 
        "parameters": [
          {
            "example": "__NAMED-QUERY-UUID__", 
            "in": "path", 
            "name": "named-query-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/named-query"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns named-query", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/network-policies?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns network-policies", 
        "operationId": "getNetworkNetworkPolicies", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-policy-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-policy-fqdn", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/network-policies"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-policies", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/network-policy/{network-policy-id}": {
      "get": {
        "description": "returns network-policy", 
        "operationId": "getNetworkNetworkPoliciesNetworkPolicy", 
        "parameters": [
          {
            "description": "UUID representing unique key to this instance", 
            "example": "__NETWORK-POLICY-ID__", 
            "in": "path", 
            "name": "network-policy-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/network-policy"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-policy", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/network-profiles/network-profile/{nm-profile-name}": {
      "get": {
        "description": "returns network-profile", 
        "operationId": "getCloudInfrastructureNetworkProfilesNetworkProfile", 
        "parameters": [
          {
            "description": "Unique name of network profile.", 
            "example": "__NM-PROFILE-NAME__", 
            "in": "path", 
            "name": "nm-profile-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/network-profile"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-profile", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/network-profiles?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns network-profiles", 
        "operationId": "getCloudInfrastructureNetworkProfiles", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nm-profile-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/network-profiles"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns network-profiles", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/newvces/newvce/{vnf-id2}": {
      "get": {
        "description": "returns newvce", 
        "operationId": "getNetworkNewvcesNewvce", 
        "parameters": [
          {
            "description": "Unique id of VNF, can't use same attribute name right now until we promote this new object", 
            "example": "__VNF-ID2__", 
            "in": "path", 
            "name": "vnf-id2", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/newvce"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns newvce", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/newvces?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns newvces", 
        "operationId": "getNetworkNewvces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-id2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/newvces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns newvces", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/oam-networks/oam-network/{network-uuid}": {
      "get": {
        "description": "returns oam-network", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionOamNetworksOamNetwork", 
        "parameters": [
          {
            "description": "UUID of the network. Unique across a cloud-region", 
            "example": "__NETWORK-UUID__", 
            "in": "path", 
            "name": "network-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/oam-network"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns oam-network", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/oam-networks?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns oam-networks", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionOamNetworks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "network-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "cvlan-tag", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/oam-networks"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns oam-networks", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/owning-entities?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns owning-entities", 
        "operationId": "getBusinessOwningEntities", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "owning-entity-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "owning-entity-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/owning-entities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns owning-entities", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/owning-entity/{owning-entity-id}": {
      "get": {
        "description": "returns owning-entity", 
        "operationId": "getBusinessOwningEntitiesOwningEntity", 
        "parameters": [
          {
            "description": "UUID of an owning entity", 
            "example": "__OWNING-ENTITY-ID__", 
            "in": "path", 
            "name": "owning-entity-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/owning-entity"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns owning-entity", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/p-interfaces/p-interface/{interface-name}": {
      "get": {
        "description": "returns p-interface", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterface", 
        "parameters": [
          {
            "description": "Name that identifies the physical interface", 
            "example": "__INTERFACE-NAME__", 
            "in": "path", 
            "name": "interface-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/p-interface"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interface", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/p-interfaces?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns p-interfaces", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfaces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/p-interfaces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns p-interfaces", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/physical-links/physical-link/{link-name}": {
      "get": {
        "description": "returns physical-link", 
        "operationId": "getNetworkPhysicalLinksPhysicalLink", 
        "parameters": [
          {
            "description": "e.g., hostnameA_p-connection_nameA_hostnameZ+p_connection-nameZ", 
            "example": "__LINK-NAME__", 
            "in": "path", 
            "name": "link-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/physical-link"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns physical-link", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/physical-links?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns physical-links", 
        "operationId": "getNetworkPhysicalLinks", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "link-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "circuit-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/physical-links"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns physical-links", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/platforms/platform/{platform-name}": {
      "get": {
        "description": "returns platform", 
        "operationId": "getBusinessPlatformsPlatform", 
        "parameters": [
          {
            "description": "Name of the platform", 
            "example": "__PLATFORM-NAME__", 
            "in": "path", 
            "name": "platform-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/platform"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns platform", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/platforms?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns platforms", 
        "operationId": "getBusinessPlatforms", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "platform-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/platforms"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns platforms", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/pnfs/pnf/{pnf-name}": {
      "get": {
        "description": "returns pnf", 
        "operationId": "getNetworkPnfsPnf", 
        "parameters": [
          {
            "description": "unique name of Physical Network Function.", 
            "example": "__PNF-NAME__", 
            "in": "path", 
            "name": "pnf-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/pnf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pnf", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/pnfs?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns pnfs", 
        "operationId": "getNetworkPnfs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "inv-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/pnfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pnfs", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/port-groups/port-group/{interface-id}": {
      "get": {
        "description": "returns port-group", 
        "operationId": "getNetworkVcesVcePortGroupsPortGroup", 
        "parameters": [
          {
            "description": "Unique ID of the interface", 
            "example": "__INTERFACE-ID__", 
            "in": "path", 
            "name": "interface-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/port-group"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns port-group", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/port-groups?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns port-groups", 
        "operationId": "getNetworkVcesVcePortGroups", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "interface-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "port-group-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "switch-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/port-groups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns port-groups", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/projects/project/{project-name}": {
      "get": {
        "description": "returns project", 
        "operationId": "getBusinessProjectsProject", 
        "parameters": [
          {
            "description": "Name of the project deploying a service", 
            "example": "__PROJECT-NAME__", 
            "in": "path", 
            "name": "project-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/project"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns project", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/projects?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns projects", 
        "operationId": "getBusinessProjects", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "project-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/projects"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns projects", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/property-constraints/property-constraint/{property-constraint-uuid}": {
      "get": {
        "description": "returns property-constraint", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraintsPropertyConstraint", 
        "parameters": [
          {
            "example": "__PROPERTY-CONSTRAINT-UUID__", 
            "in": "path", 
            "name": "property-constraint-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/property-constraint"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns property-constraint", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/property-constraints?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns property-constraints", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementPropertyConstraints", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "property-constraint-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/property-constraints"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns property-constraints", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/pservers/pserver/{hostname}": {
      "get": {
        "description": "returns pserver", 
        "operationId": "getCloudInfrastructurePserversPserver", 
        "parameters": [
          {
            "description": "Value from executing hostname on the compute node.", 
            "example": "__HOSTNAME__", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/pserver"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pserver", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/pservers?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns pservers", 
        "operationId": "getCloudInfrastructurePservers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "hostname", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "inv-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pserver-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pserver-name2", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/pservers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns pservers", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/related-lookups/related-lookup/{related-lookup-uuid}": {
      "get": {
        "description": "returns related-lookup", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookupsRelatedLookup", 
        "parameters": [
          {
            "example": "__RELATED-LOOKUP-UUID__", 
            "in": "path", 
            "name": "related-lookup-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/related-lookup"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns related-lookup", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/related-lookups?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns related-lookups", 
        "operationId": "getServiceDesignAndCreationNamedQueriesNamedQueryNamedQueryElementsNamedQueryElementRelatedLookups", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "related-lookup-uuid", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/related-lookups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns related-lookups", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/route-table-references/route-table-reference/{route-table-reference-id}": {
      "get": {
        "description": "returns route-table-reference", 
        "operationId": "getNetworkRouteTableReferencesRouteTableReference", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__ROUTE-TABLE-REFERENCE-ID__", 
            "in": "path", 
            "name": "route-table-reference-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/route-table-reference"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-table-reference", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/route-table-references?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns route-table-references", 
        "operationId": "getNetworkRouteTableReferences", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "route-table-reference-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "route-table-reference-fqdn", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/route-table-references"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-table-references", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/route-targets/route-target/{global-route-target}/{route-target-role}": {
      "get": {
        "description": "returns route-target", 
        "operationId": "getNetworkVpnBindingsVpnBindingRouteTargetsRouteTarget", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/route-target"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-target", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/route-targets?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns route-targets", 
        "operationId": "getNetworkVpnBindingsVpnBindingRouteTargets", 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/route-targets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns route-targets", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/routing-instances/routing-instance/{routing-instance-id}": {
      "get": {
        "description": "returns routing-instance", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstance", 
        "parameters": [
          {
            "description": "Unique id of routing instance", 
            "example": "__ROUTING-INSTANCE-ID__", 
            "in": "path", 
            "name": "routing-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/routing-instance"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns routing-instance", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/routing-instances?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns routing-instances", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstances", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "routing-instance-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/routing-instances"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns routing-instances", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/segmentation-assignments/segmentation-assignment/{segmentation-id}": {
      "get": {
        "description": "returns segmentation-assignment", 
        "operationId": "getNetworkL3NetworksL3NetworkSegmentationAssignmentsSegmentationAssignment", 
        "parameters": [
          {
            "description": "Route Table Reference id, UUID assigned to this instance.", 
            "example": "__SEGMENTATION-ID__", 
            "in": "path", 
            "name": "segmentation-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/segmentation-assignment"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns segmentation-assignment", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/segmentation-assignments?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns segmentation-assignments", 
        "operationId": "getNetworkL3NetworksL3NetworkSegmentationAssignments", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "segmentation-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/segmentation-assignments"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns segmentation-assignments", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-capabilities?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns service-capabilities", 
        "operationId": "getServiceDesignAndCreationServiceCapabilities", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service-capabilities"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-capabilities", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-capability/{service-type}/{vnf-type}": {
      "get": {
        "description": "returns service-capability", 
        "operationId": "getServiceDesignAndCreationServiceCapabilitiesServiceCapability", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "String capturing type of vnf, that was intended to identify the ASDC resource.  This field has been overloaded in service-specific ways and clients should expect changes to occur in the future to this field as ECOMP matures.", 
            "example": "__VNF-TYPE__", 
            "in": "path", 
            "name": "vnf-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service-capability"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-capability", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-design-and-creation/services/service/{service-id}": {
      "get": {
        "description": "returns service", 
        "operationId": "getServiceDesignAndCreationServicesService", 
        "parameters": [
          {
            "description": "This gets defined by others to provide a unique ID for the service, we accept what is sent.", 
            "example": "__SERVICE-ID__", 
            "in": "path", 
            "name": "service-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-instances/service-instance/{service-instance-id}": {
      "get": {
        "description": "returns service-instance", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstance", 
        "parameters": [
          {
            "description": "Uniquely identifies this instance of a service", 
            "example": "__SERVICE-INSTANCE-ID__", 
            "in": "path", 
            "name": "service-instance-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service-instance"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-instance", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-instances?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns service-instances", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstances", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-instance-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-instance-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "environment-context", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "workload-context", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-instance-location-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "orchestration-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service-instances"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-instances", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-subscriptions/service-subscription/{service-type}": {
      "get": {
        "description": "returns service-subscription", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscription", 
        "parameters": [
          {
            "description": "Value defined by orchestration to identify this service across ECOMP.", 
            "example": "__SERVICE-TYPE__", 
            "in": "path", 
            "name": "service-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service-subscription"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-subscription", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/service-subscriptions?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns service-subscriptions", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptions", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/service-subscriptions"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns service-subscriptions", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/services?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns services", 
        "operationId": "getServiceDesignAndCreationServices", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-description", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/services"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns services", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/site-pair-sets/site-pair-set/{site-pair-set-id}": {
      "get": {
        "description": "returns site-pair-set", 
        "operationId": "getNetworkSitePairSetsSitePairSet", 
        "parameters": [
          {
            "description": "Unique id of site pair set.", 
            "example": "__SITE-PAIR-SET-ID__", 
            "in": "path", 
            "name": "site-pair-set-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/site-pair-set"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pair-set", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/site-pair-sets/site-pair-set/{site-pair-set-id}/routing-instances/routing-instance/{routing-instance-id}/site-pairs/site-pair/{site-pair-id}": {
      "get": {
        "description": "returns site-pair", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairsSitePair", 
        "parameters": [
          {
            "description": "unique identifier of probe", 
            "example": "__SITE-PAIR-ID__", 
            "in": "path", 
            "name": "site-pair-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/site-pair"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pair", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/site-pair-sets?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns site-pair-sets", 
        "operationId": "getNetworkSitePairSets", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "site-pair-set-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/site-pair-sets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pair-sets", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/site-pairs?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns site-pairs", 
        "operationId": "getNetworkSitePairSetsSitePairSetRoutingInstancesRoutingInstanceSitePairs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "site-pair-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/site-pairs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns site-pairs", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/snapshots/snapshot/{snapshot-id}": {
      "get": {
        "description": "returns snapshot", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionSnapshotsSnapshot", 
        "parameters": [
          {
            "description": "Snapshot id, this is the key UUID assoc associated in glance with the snapshots.", 
            "example": "__SNAPSHOT-ID__", 
            "in": "path", 
            "name": "snapshot-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/snapshot"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns snapshot", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/snapshots?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns snapshots", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionSnapshots", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "snapshot-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "snapshot-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prev-snapshot-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/snapshots"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns snapshots", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/sriov-pfs/sriov-pf/{pf-pci-id}": {
      "get": {
        "description": "returns sriov-pf", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfsSriovPf", 
        "parameters": [
          {
            "description": "Identifier for the sriov-pf", 
            "example": "__PF-PCI-ID__", 
            "in": "path", 
            "name": "pf-pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/sriov-pf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pf", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/sriov-pfs?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns sriov-pfs", 
        "operationId": "getCloudInfrastructurePserversPserverPInterfacesPInterfaceSriovPfs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pf-pci-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/sriov-pfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-pfs", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/sriov-vfs/sriov-vf/{pci-id}": {
      "get": {
        "description": "returns sriov-vf", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfsSriovVf", 
        "parameters": [
          {
            "description": "PCI ID used to identify the sriov-vf", 
            "example": "__PCI-ID__", 
            "in": "path", 
            "name": "pci-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/sriov-vf"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vf", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/sriov-vfs?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns sriov-vfs", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceSriovVfs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "pci-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-mac-filter", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-vlan-strip", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "neutron-network-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/sriov-vfs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns sriov-vfs", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/subnets/subnet/{subnet-id}": {
      "get": {
        "description": "returns subnet", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnetsSubnet", 
        "parameters": [
          {
            "description": "Subnet ID, should be UUID.", 
            "example": "__SUBNET-ID__", 
            "in": "path", 
            "name": "subnet-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/subnet"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns subnet", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/subnets?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns subnets", 
        "operationId": "getNetworkL3NetworksL3NetworkSubnets", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subnet-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "subnet-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/subnets"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns subnets", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/tenants/tenant/{tenant-id}": {
      "get": {
        "description": "returns tenant", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenant", 
        "parameters": [
          {
            "description": "Unique id relative to the cloud-region.", 
            "example": "__TENANT-ID__", 
            "in": "path", 
            "name": "tenant-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/tenant"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tenant", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/tenants?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns tenants", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenants", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "tenant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "tenant-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "tenant-context", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/tenants"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tenants", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/tunnel-xconnects/tunnel-xconnect/{id}": {
      "get": {
        "description": "returns tunnel-xconnect", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnectsTunnelXconnect", 
        "parameters": [
          {
            "description": "Allotted Resource id UUID assigned to this instance.", 
            "example": "__ID__", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/tunnel-xconnect"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tunnel-xconnect", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/tunnel-xconnects?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns tunnel-xconnects", 
        "operationId": "getBusinessCustomersCustomerServiceSubscriptionsServiceSubscriptionServiceInstancesServiceInstanceAllottedResourcesAllottedResourceTunnelXconnects", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/tunnel-xconnects"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns tunnel-xconnects", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vces/vce/{vnf-id}": {
      "get": {
        "description": "returns vce", 
        "operationId": "getNetworkVcesVce", 
        "parameters": [
          {
            "description": "Unique id of VNF.  This is unique across the graph.", 
            "example": "__VNF-ID__", 
            "in": "path", 
            "name": "vnf-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vce"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vce", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vces?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vces", 
        "operationId": "getNetworkVces", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "service-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "regional-resource-zone", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpe-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vces"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vces", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vf-modules/vf-module/{vf-module-id}": {
      "get": {
        "description": "returns vf-module", 
        "operationId": "getNetworkGenericVnfsGenericVnfVfModulesVfModule", 
        "parameters": [
          {
            "description": "Unique ID of vf-module.", 
            "example": "__VF-MODULE-ID__", 
            "in": "path", 
            "name": "vf-module-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vf-module"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vf-module", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vf-modules?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vf-modules", 
        "operationId": "getNetworkGenericVnfsGenericVnfVfModules", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-module-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vf-module-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "widget-model-version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "contrail-service-instance-fqdn", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vf-modules"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vf-modules", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vig-servers/vig-server/{vig-address-type}": {
      "get": {
        "description": "returns vig-server", 
        "operationId": "getNetworkIpsecConfigurationsIpsecConfigurationVigServersVigServer", 
        "parameters": [
          {
            "description": "indicates whether the VIG is for AVPN or INTERNET", 
            "example": "__VIG-ADDRESS-TYPE__", 
            "in": "path", 
            "name": "vig-address-type", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vig-server"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vig-server", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vig-servers?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vig-servers", 
        "operationId": "getNetworkIpsecConfigurationsIpsecConfigurationVigServers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vig-address-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vig-servers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vig-servers", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vip-ipv4-address-list/{vip-ipv4-address}": {
      "get": {
        "description": "returns vip-ipv4-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVipIpv4AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV4-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv4-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vip-ipv4-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vip-ipv4-address-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vip-ipv6-address-list/{vip-ipv6-address}": {
      "get": {
        "description": "returns vip-ipv6-address-list", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVipIpv6AddressList", 
        "parameters": [
          {
            "description": "Identifies the vendor and cloud name. First part of composite key should be formatted as vendor-cloudname", 
            "example": "__CLOUD-OWNER__", 
            "in": "path", 
            "name": "cloud-owner", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Identifier used by the vendor for the region. Second part of composite key", 
            "example": "__CLOUD-REGION-ID__", 
            "in": "path", 
            "name": "cloud-region-id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "example": "__VIP-IPV6-ADDRESS__", 
            "in": "path", 
            "name": "vip-ipv6-address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vip-ipv6-address-list"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vip-ipv6-address-list", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/virtual-data-centers/virtual-data-center/{vdc-id}": {
      "get": {
        "description": "returns virtual-data-center", 
        "operationId": "getCloudInfrastructureVirtualDataCentersVirtualDataCenter", 
        "parameters": [
          {
            "description": "Unique ID of the vdc", 
            "example": "__VDC-ID__", 
            "in": "path", 
            "name": "vdc-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/virtual-data-center"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns virtual-data-center", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/virtual-data-centers?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns virtual-data-centers", 
        "operationId": "getCloudInfrastructureVirtualDataCenters", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vdc-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vdc-name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/virtual-data-centers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns virtual-data-centers", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vlans/vlan/{vlan-interface}": {
      "get": {
        "description": "returns vlan", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlansVlan", 
        "parameters": [
          {
            "description": "String that identifies the interface", 
            "example": "__VLAN-INTERFACE__", 
            "in": "path", 
            "name": "vlan-interface", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vlan"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlan", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vlans?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vlans", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverLInterfacesLInterfaceVlans", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vlan-interface", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "format": "int64", 
            "in": "query", 
            "name": "vlan-id-inner", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-key", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vlans"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vlans", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vnf-images/vnf-image/{vnf-image-uuid}": {
      "get": {
        "description": "returns vnf-image", 
        "operationId": "getServiceDesignAndCreationVnfImagesVnfImage", 
        "parameters": [
          {
            "description": "Unique ID of this asset", 
            "example": "__VNF-IMAGE-UUID__", 
            "in": "path", 
            "name": "vnf-image-uuid", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vnf-image"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnf-image", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vnf-images?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vnf-images", 
        "operationId": "getServiceDesignAndCreationVnfImages", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-image-uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-vendor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "application-version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vnf-images"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnf-images", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vnfcs/vnfc/{vnfc-name}": {
      "get": {
        "description": "returns vnfc", 
        "operationId": "getNetworkVnfcsVnfc", 
        "parameters": [
          {
            "description": "Unique ID of vnfc.", 
            "example": "__VNFC-NAME__", 
            "in": "path", 
            "name": "vnfc-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vnfc"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnfc", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vnfcs?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vnfcs", 
        "operationId": "getNetworkVnfcs", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnfc-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nfc-naming-code", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "nfc-function", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "ipaddress-v4-oam-vip", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "is-closed-loop-disabled", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "group-notation", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-invariant-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "model-version-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vnfcs"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vnfcs", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/volume-groups/volume-group/{volume-group-id}": {
      "get": {
        "description": "returns volume-group", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVolumeGroupsVolumeGroup", 
        "parameters": [
          {
            "description": "Unique ID of volume-group.", 
            "example": "__VOLUME-GROUP-ID__", 
            "in": "path", 
            "name": "volume-group-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/volume-group"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volume-group", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/volume-groups?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns volume-groups", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionVolumeGroups", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "volume-group-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "volume-group-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "heat-stack-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vnf-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/volume-groups"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volume-groups", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/volumes/volume/{volume-id}": {
      "get": {
        "description": "returns volume", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumesVolume", 
        "parameters": [
          {
            "description": "Unique ID of block storage volume relative to the vserver.", 
            "example": "__VOLUME-ID__", 
            "in": "path", 
            "name": "volume-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/volume"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volume", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/volumes?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns volumes", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserverVolumes", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "volume-id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/volumes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns volumes", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vpls-pes/vpls-pe/{equipment-name}": {
      "get": {
        "description": "returns vpls-pe", 
        "operationId": "getNetworkVplsPesVplsPe", 
        "parameters": [
          {
            "example": "__EQUIPMENT-NAME__", 
            "in": "path", 
            "name": "equipment-name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vpls-pe"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpls-pe", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vpls-pes?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vpls-pes", 
        "operationId": "getNetworkVplsPes", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "equipment-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vpls-pes"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpls-pes", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vpn-bindings/vpn-binding/{vpn-id}": {
      "get": {
        "description": "returns vpn-binding", 
        "operationId": "getNetworkVpnBindingsVpnBinding", 
        "parameters": [
          {
            "description": "VPN ID, globally unique within A&AI", 
            "example": "__VPN-ID__", 
            "in": "path", 
            "name": "vpn-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vpn-binding"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpn-binding", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vpn-bindings?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vpn-bindings", 
        "operationId": "getNetworkVpnBindings", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vpn-type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vpn-bindings"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vpn-bindings", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vservers/vserver/{vserver-id}": {
      "get": {
        "description": "returns vserver", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVserversVserver", 
        "parameters": [
          {
            "description": "Unique identifier for this vserver relative to its tenant", 
            "example": "__VSERVER-ID__", 
            "in": "path", 
            "name": "vserver-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vserver"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vserver", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/vservers?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns vservers", 
        "operationId": "getCloudInfrastructureCloudRegionsCloudRegionTenantsTenantVservers", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vserver-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vserver-name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "vserver-name2", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "prov-status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "in-maint", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "is-closed-loop-disabled", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/vservers"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns vservers", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/zones/zone/{zone-id}": {
      "get": {
        "description": "returns zone", 
        "operationId": "getNetworkZonesZone", 
        "parameters": [
          {
            "description": "Code assigned by AIC to the zone", 
            "example": "__ZONE-ID__", 
            "in": "path", 
            "name": "zone-id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/zone"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns zone", 
        "tags": [
          "Operations"
        ]
      }
    }, 
    "/nodes/zones?parameter=value[&parameter2=value2]": {
      "get": {
        "description": "returns zones", 
        "operationId": "getNetworkZones", 
        "parameters": [
          {
            "description": "n/a", 
            "in": "query", 
            "name": "zone-id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "design-type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "n/a", 
            "in": "query", 
            "name": "zone-context", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json", 
          "application/xml"
        ], 
        "responses": {
          "200": {
            "description": "successful operation", 
            "schema": {
              "$ref": "#/definitions/zones"
            }
          }, 
          "default": {
            "description": "Response codes found in [response codes](https://wiki.web.att.com/pages/viewpage.action?pageId=607391054)."
          }
        }, 
        "summary": "returns zones", 
        "tags": [
          "Operations"
        ]
      }
    }
  }, 
  "schemes": [
    "https"
  ], 
  "swagger": "2.0"
}